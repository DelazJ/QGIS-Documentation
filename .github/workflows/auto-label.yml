



name: "Set Issue Label for issues from main QGIS repo"
# Also add corresponding milestone to the issue
on:
  issues:
    types: [opened, reopened, closed]
env:
  MILESTONE: 2 # See https://api.github.com/repos/qgis/QGIS-Documentation/milestones
  BODY: "${{ github.event.issue.body }}"

jobs:

  job1:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set_versions.outputs.versions }}
    steps:
      - id: set_versions
        run: |
          VERSIONS=$(echo "[\"3.30\", \"3.32\", \"3.34\"]")
           echo "les versions: ${VERSIONS}"
           echo "versions=${VERSIONS}" >> $GITHUB_OUTPUT
           
  test:
    runs-on: ubuntu-latest
    needs: job1
    steps:        
      - id: add_triage_labels
        name: Assign Triage Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["Triage"]
            })

      - id: find_labels
        name: Find existing label
        run: |
          LABEL=$(echo "${{ env.BODY }}" | sed -n -r "s/.*QGIS version: ([[:digit:]]\.[[:digit:]]+).*/\1/p")
          echo "label: ${LABEL}"
          if [[ -z "${LABEL}" ]]; then
            AVAILABLE='false';
            echo "available false: ${AVAILABLE}"
          else
            AVAILABLE='true';
            echo "available true: ${AVAILABLE}"
          fi
          echo "label=${LABEL}" >> $GITHUB_OUTPUT
          echo "available=${AVAILABLE}" >> $GITHUB_OUTPUT;
        
        
#      - id: counter
 #       shell: bash
  #      run: |
   #       if ((a == 1)); then
    #        echo "$( echo "${{ needs.job1.outputs.versions }}" | grep "${{ steps.find_labels.outputs.label }}" | wc -l)"
     #       echo "countversions=$( echo "${{ needs.job1.outputs.versions }}" | grep "${{ steps.find_labels.outputs.label }}" | wc -l)" >> $GITHUB_OUTPUT
      #    fi

      - id: add_labels
        name: Assign Label
        if: contains(${{ steps.find_labels.outputs.available }} , 'true')
        uses: actions/github-script@v6
        with:
          script: |
              echo "${{ steps.find_labels.outputs.available }}"
              echo "contains(${{ steps.find_labels.outputs.available }} , 'true')"
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["${{ steps.find_labels.outputs.label }}"]
              })
        
   
  #          if echo "${{ needs.job1.outputs.versions }}" | grep -c "${{ steps.find_labels.outputs.label }}"; then
  #          fi  
#              echo "${{ needs.job1.outputs.versions }}"
 #             echo $(echo "${{ needs.job1.outputs.versions }}" | grep "${{ steps.find_labels.outputs.label }}")
         
        # if: contains( ${{ steps.set_versions.outputs.versions }}, ${{ steps.find_labels.outputs.label }} ) && ${{ steps.find_labels.outputs.label }}
 #         SEARCH_STRING=$(echo "QGIS version: ${{ matrix.activelabels }}") ge 0
 #         echo "texte: $SEARCH_STRING"
 #         RECHERCHE=$(echo ${{ env.BODY }} | grep -c $SEARCH_STRING)
 #         echo "recherche: $RECHERCHE"
          
          
 #         if -z $RECHERCHE then;
 #           github.rest.issues.addLabels({
 #             issue_number: context.issue.number,
 #             owner: context.repo.owner,
 #             repo: context.repo.repo,
 #             labels: ["${{ matrix.activelabels }}"]
 #           })
 #         fi
