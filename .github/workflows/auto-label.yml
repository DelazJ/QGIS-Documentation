



name: "Set Issue Label for issues from main QGIS repo"
# Also add corresponding milestone to the issue
on:
  issues:
    types: [opened, reopened, closed]
env:
  MILESTONE: 2 # See https://api.github.com/repos/qgis/QGIS-Documentation/milestones
  BODY: ${{ github.event.issue.body }}

jobs:

  job1:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set_versions.outputs.versions }}
    steps:
      - id: set_versions
        run: |
          VERSIONS=$(echo "[\"3.30\", \"3.32\", \"3.34\"]")
           echo "les versions: ${VERSIONS}"
           echo "versions=${VERSIONS}" >> $GITHUB_OUTPUT
           
  test:
    runs-on: ubuntu-latest
    needs: job1
    steps:        
      - id: add_triage_labels
        name: Assign Label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Triage']
            })

      - id: find_labels
        name: Find existing label
        run: |
          LABEL=$(echo "${{ env.BODY }}" | sed -n -r "s/.*QGIS version: ([[:digit:]]\.[[:digit:]]+).*/\1/p")
          echo "label: ${LABEL}"
          echo "label=${LABEL}" >> $GITHUB_OUTPUT
          
      - id: add_labels
        name: Assign Label
        # if: contains( ${{ steps.set_versions.outputs.versions }}, ${{ steps.find_labels.outputs.label }} ) && ${{ steps.find_labels.outputs.label }}
        run: |
          if echo "${{ needs.job1.outputs.versions }}" | grep -w "${{ steps.find_labels.outputs.label }}"; then
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "${{ steps.find_labels.outputs.label }}" ]
            })
          fi  
          
          
 #         SEARCH_STRING=$(echo "QGIS version: ${{ matrix.activelabels }}")
 #         echo "texte: $SEARCH_STRING"
 #         RECHERCHE=$(echo ${{ env.BODY }} | grep -c $SEARCH_STRING)
 #         echo "recherche: $RECHERCHE"
          
          
 #         if -z $RECHERCHE then;
 #           github.rest.issues.addLabels({
 #             issue_number: context.issue.number,
 #             owner: context.repo.owner,
 #             repo: context.repo.repo,
 #             labels: ["${{ matrix.activelabels }}"]
 #           })
 #         fi
