name: "Set Issue Label for issues from main QGIS repo"
on:
  issues:
    types: [opened, reopened, closed]

permissions:
  contents: read

jobs:
  test:
    permissions:
      issues: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BODY: "${{ github.event.issue.body }}"
      MILESTONE: 2 # See https://api.github.com/repos/DelazJ/QGIS-Documentation/milestones
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - id: find_version_label
        name: Find Target version
        run: |
          LABEL=$(echo "${{ env.BODY }}" | sed -n -r "s/.*QGIS version: ([[:digit:]]\.[[:digit:]]+).*/\1/p")
          echo "label: ${LABEL}"
          if [[ -n "${LABEL}" ]]; then
            echo "label=${LABEL}" >> $GITHUB_OUTPUT
          else
            echo "no version found so no automatic labeling"
          fi

      - id: assign_version
        name: Assign version Label
        if: ${{ steps.find_version_label.outputs.label }}
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["${{ steps.find_version_label.outputs.label }}"]
              })

      - id: find_pr_labels
        name: Find original PR labels
        run: |
          PR_LABELS=$(echo "${{ env.BODY }}" | sed -n -r "s/.*LABELS: (.*)$/\1/p" | sed 's/\r$//')
          echo "prlabels: ${PR_LABELS}"
          PR_LABELS3=$(echo ${PR_LABELS} | jq -Rc 'split(", ")')
          echo "prlabels3: ${PR_LABELS3}"
          
          if [[ -n "${PR_LABELS}" ]]; then
            echo "pr_labels={"LABS":${PR_LABELS3}}" >> $GITHUB_OUTPUT
          else
            echo "no useful labels found in the report"
          fi
        # PR_LABELS2=[$(echo "${PR_LABELS}" | sed "s/.*LABELS: (.*)$/\"\1\"/p")]
        # echo "prlabels2: ${PR_LABELS2}"
        # PR_LABELS=[$(echo "${{ env.BODY }}" | sed -n -r "s/.*LABELS: (.*)/\"\1\"/p" | sed 's/, /\", \"/g')]
        # echo 'toto: ["'"${${PR_LABELS}//,/'"','"'}"'"]'
       
      - id: apply_pr_labels
        if: ${{ steps.find_pr_labels.outputs.pr_labels }}
        env:
          PR: ${{ fromJSON( steps.find_pr_labels.outputs.pr_labels ) }}
        name: Apply PR labels
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ${{ env.PR.LABS }}
              })
          #  }
          #  ${{ fromJSON( steps.find_pr_labels.outputs.pr_labels ) }}
          # echo "mylabels : ${{ steps.find_pr_labels.outputs.pr_labels }}"
          # echo "::set-output name=matrix-browser::[\"${testBro//', '/\",\"}\"]"   
          # for (const label of ${{ steps.find_pr_labels.outputs.pr_labels }}) {

      - id: set-result
        uses: actions/github-script@v6
        with:
          script: return "Hello!"
          result-encoding: string
      - name: Get result
        run: echo "${{steps.set-result.outputs.result}}"


      - id: get_pr_labels
        name: Report PR labels
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          result-encoding: string
          script: |
            const LABOS = github.rest.issues.listLabelsOnIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            echo "labos: ${LABOS}"
            echo "labos=${LABOS}" >> $GITHUB_OUTPUT

      - name: resultat
        run: echo "${{steps.get_pr_labels.outputs.result}}"
        shell: bash

      - name: eventer
        run: |
          LABS=$(join(${{ github.event.issue.labels.*.name }}, ', '))
          echo "labs: ${LABS}"
          echo "labs=${LABS}" >> $GITHUB_OUTPUT

      - id: assign_milestone
        name: Assign milestone
        if: ${{ steps.find_version_label.outputs.label }}
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: ${{ env.MILESTONE }}
            })
