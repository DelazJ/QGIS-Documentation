# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-02 07:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at "
"|translation progress|."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:16
msgid "Writing a Processing plugin"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:23
msgid ""
"Depending on the kind of plugin that you are going to develop, it might "
"be a better option to add its functionality as a Processing algorithm (or"
" a set of them). That would provide a better integration within QGIS, "
"additional functionality (since it can be run in the components of "
"Processing, such as the modeler or the batch processing interface), and a"
" quicker development time (since Processing will take of a large part of "
"the work)."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:30
msgid ""
"To distribute those algorithms, you should create a new plugin that adds "
"them to the Processing Toolbox. The plugin should contain an algorithm "
"provider, which has to be registered when the plugin is instantiated."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:35
msgid "Creating from scratch"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:37
msgid ""
"To create a plugin from scratch which contains an algorithm provider, you"
" can follow these steps using the Plugin Builder:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:40
msgid "Install the **Plugin Builder** plugin"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:41
msgid ""
"Create a new plugin using the Plugin Builder. When the Plugin Builder "
"asks you for the template to use, select \"Processing provider\"."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:43
msgid ""
"The created plugin contains a provider with a single algorithm. Both the "
"provider file and the algorithm file are fully commented and contain "
"information about how to modify the provider and add additional "
"algorithms. Refer to them for more information."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:48
msgid "Updating a plugin"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:50
msgid ""
"If you want to add your existing plugin to Processing, you need to add "
"some code."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:52
msgid "In your :file:`metadata.txt` file, you need to add a variable:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:58
msgid ""
"In the Python file where your plugin is setup with the ``initGui`` "
"method, you need to adapt some lines like this:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:82
msgid ""
"You can create a folder :file:`processing_provider` with three files in "
"it:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:84
msgid ""
":file:`__init__.py` with nothing in it. This is necessary to make a valid"
" Python package."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:86
msgid ""
":file:`provider.py` which will create the Processing provider and expose "
"your algorithms."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:129
msgid ""
":file:`example_processing_algorithm.py` which contains the example "
"algorithm file. Copy/paste the content of the :source:`script template "
"file <python/plugins/processing/script/ScriptTemplate.py>` and update it "
"according to your needs."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:134
msgid "You should have a tree similar to this:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:147
msgid ""
"Now you can reload your plugin in QGIS and you should see your example "
"script in the Processing toolbox and modeler."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:151
msgid "Implementing custom Processing algorithms"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:154
msgid "Creating a custom algorithm"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:156
msgid "Here's a simple example of a custom buffer algorithm:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:207
msgid "Customizing the algorithm dialog"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:209
msgid ""
"Custom dialogs are especially useful when working with nested or dynamic "
"inputs, when parameters depend on external data sources such as APIs "
"(e.g. dynamically populated dropdowns), or when you need advanced "
"validation and custom layout behavior that isnâ€™t supported by the default"
" Processing dialog. To override the default UI (e.g. for complex "
"parameter types or dynamic logic), subclass "
":class:`QgsProcessingAlgorithmDialogBase "
"<qgis.gui.QgsProcessingAlgorithmDialogBase>`. To render your custom UI in"
" the standard Processing dialog window, you must call "
"``self.setMainWidget(panel)``, where ``panel`` is a "
":class:`QgsPanelWidget <qgis.gui.QgsPanelWidget>` containing your custom "
"layout. This ensures your interface is correctly displayed and interacts "
"properly with the Processing framework."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:218
msgid ""
"Here is an example that integrates signal management using QTimer_ for "
"debounced input:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:310
msgid ""
"To launch the custom dialog for a given algorithm, simply instantiate "
"``CustomAlgorithmDialog`` with your algorithm instance and call "
"``exec()``:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:320
msgid "Managing Qt Signals"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/processing.rst:322
msgid ""
"When building reactive dialogs, manage signal connections carefully. The "
"above pattern uses a QTimer_ to debounce input from the text field, "
"preventing rapid repeated calls. This is especially useful when fetching "
"metadata or updating UI elements based on user input. Always connect "
"signals once (typically in ``__init__``) and use ``singleShot=True`` to "
"ensure the slot is triggered only once after a delay."
msgstr ""

