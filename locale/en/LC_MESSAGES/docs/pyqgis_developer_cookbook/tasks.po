# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at "
"|translation progress|."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:15
msgid "Tasks - doing heavy work in the background"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:17
msgid ""
"The code snippets on this page need the following imports if you're "
"outside the pyqgis console:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:39
msgid "Introduction"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:41
msgid ""
"Background processing using threads is a way to maintain a responsive "
"user interface when heavy processing is going on. Tasks can be used to "
"achieve threading in QGIS."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:45
msgid ""
"A task (:class:`QgsTask <qgis.core.QgsTask>`) is a container for the code"
" to be performed in the background, and the task manager "
"(:class:`QgsTaskManager <qgis.core.QgsTaskManager>`) is used to control "
"the running of the tasks. These classes simplify background processing in"
" QGIS by providing mechanisms for signaling, progress reporting and "
"access to the status for background processes. Tasks can be grouped using"
" subtasks."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:53
msgid ""
"The global task manager (found with :meth:`QgsApplication.taskManager() "
"<qgis.core.QgsApplication.taskManager>`) is normally used. This means "
"that your tasks may not be the only tasks that are controlled by the task"
" manager."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:57
msgid "There are several ways to create a QGIS task:"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:59
msgid "Create your own task by extending :class:`QgsTask <qgis.core.QgsTask>`"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:66
msgid "Create a task from a function"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:81
msgid "Create a task from a processing algorithm"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:95
msgid ""
"Any background task (regardless of how it is created) must NEVER use any "
"QObject that lives on the main thread, such as accessing QgsVectorLayer, "
"QgsProject or perform any GUI based operations like creating new widgets "
"or interacting with existing widgets. Qt widgets must only be accessed or"
" modified from the main thread. Data that is used in a task must be "
"copied before the task is started. Attempting to use them from background"
" threads will result in crashes."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:104
msgid ""
"Moreover always make sure that :class:`context "
"<qgis.core.QgsProcessingContext>` and :class:`feedback "
"<qgis.core.QgsProcessingFeedback>` live for at least as long as the tasks"
" that use them. QGIS will crash if, upon completion of a task, "
"*QgsTaskManager* fails to access the *context* and *feedback* against "
"which the task was scheduled."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:111
msgid ""
"It is a common pattern to call :meth:`setProject() "
"<qgis.core.QgsProcessingContext.setProject>` shortly after calling "
"``QgsProcessingContext``. This allows the task as well as its callback "
"function to use most of the project-wide settings. This is especially "
"valuable when working with spatial layers in the callback function."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:116
msgid ""
"Dependencies between tasks can be described using the :meth:`addSubTask()"
" <qgis.core.QgsTask.addSubTask>` function of :class:`QgsTask "
"<qgis.core.QgsTask>`. When a dependency is stated, the task manager will "
"automatically determine how these dependencies will be executed. Wherever"
" possible dependencies will be executed in parallel in order to satisfy "
"them as quickly as possible. If a task on which another task depends is "
"canceled, the dependent task will also be canceled. Circular dependencies"
" can make deadlocks possible, so be careful."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:126
msgid ""
"If a task depends on a layer being available, this can be stated using "
"the :meth:`setDependentLayers() <qgis.core.QgsTask.setDependentLayers>` "
"function of :class:`QgsTask <qgis.core.QgsTask>`. If a layer on which a "
"task depends is not available, the task will be canceled."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:132
msgid ""
"Once the task has been created it can be scheduled for running using the "
":meth:`addTask() <qgis.core.QgsTaskManager.addTask>` function of the task"
" manager. Adding a task to the manager automatically transfers ownership "
"of that task to the manager, and the manager will cleanup and delete "
"tasks after they have executed. The scheduling of the tasks is influenced"
" by the task priority, which is set in :meth:`addTask() "
"<qgis.core.QgsTaskManager.addTask>`."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:140
msgid ""
"The status of tasks can be monitored using :class:`QgsTask "
"<qgis.core.QgsTask>` and :class:`QgsTaskManager "
"<qgis.core.QgsTaskManager>` signals and functions."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:145
msgid "Examples"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:148
msgid "Extending QgsTask"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:150
msgid ""
"In this example ``RandomIntegerSumTask`` extends :class:`QgsTask "
"<qgis.core.QgsTask>` and will generate 100 random integers between 0 and "
"500 during a specified period of time. If the random number is 42, the "
"task is aborted and an exception is raised. Several instances of "
"``RandomIntegerSumTask`` (with subtasks) are generated and added to the "
"task manager, demonstrating two types of dependencies."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:299
msgid "Task from function"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:301
msgid ""
"Create a task from a function (``doSomething`` in this example). The "
"first parameter of the function will hold the :class:`QgsTask "
"<qgis.core.QgsTask>` for the function. An important (named) parameter is "
"``on_finished``, that specifies a function that will be called when the "
"task has completed. The ``doSomething`` function in this example has an "
"additional named parameter ``wait_time``."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:403
msgid "Task from a processing algorithm"
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:405
msgid ""
"Create a task that uses the algorithm :ref:`qgis:randompointsinextent "
"<qgisrandompointsinextent>` to generate 50000 random points inside a "
"specified extent.  The result is added to the project in a safe way."
msgstr ""

#: ../../docs/pyqgis_developer_cookbook/tasks.rst:456
msgid "See also: https://www.opengis.ch/2018/06/22/threads-in-pyqgis3/."
msgstr ""

