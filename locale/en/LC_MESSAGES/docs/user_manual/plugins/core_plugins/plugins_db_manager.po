# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at "
"|translation progress|."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:5
msgid "DB Manager Plugin"
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:7
msgid ""
"The DB Manager Plugin is intended to be the main tool to integrate and "
"manage spatial database formats supported by QGIS (PostGIS, SpatiaLite, "
"GeoPackage, Oracle Spatial, Virtual layers) in one user interface. The "
"|dbManager| :sup:`DB Manager` Plugin provides several features. You can "
"drag layers from the QGIS Browser into the DB Manager, and it will import"
" your layer into your spatial database. You can drag and drop tables "
"between spatial databases and they will get imported."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:110
msgid "dbManager"
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:21
msgid "DB Manager dialog"
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:24
msgid ""
"The :menuselection:`Database` menu allows you to connect to an existing "
"database, to start the SQL window and to exit the DB Manager Plugin. Once"
" you are connected to an existing database, the menus "
":menuselection:`Schema` (relevant for DBMSs, such as PostGIS / "
"PostgreSQL) and :menuselection:`Table` will appear."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:31
msgid ""
"The :menuselection:`Schema` menu includes tools to create and delete "
"(only if empty) schemas and, if topology is available (e.g. with PostGIS "
"topology), to start a :guilabel:`TopoViewer`."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:35
msgid ""
"The :menuselection:`Table` menu allows you to create and edit tables and "
"to delete tables and views. It is also possible to empty tables and to "
"move tables between schemas. You can :guilabel:`Run Vacuum Analyze` for "
"the selected table. *Vacuum* reclaims space and makes it available for "
"reuse, and *analyze* updates statistics that is used to determine the "
"most efficient way to execute a query. :guilabel:`Change Logging...` "
"allows you to add change logging support to a table. Finally, you can "
":guilabel:`Import Layer/File...` and :guilabel:`Export to File...`."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:49
msgid ""
"Using the DB Manager it is possible to add comments for tables and "
"columns of a PostgreSQL Database."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:52
msgid ""
"The :guilabel:`Providers` window lists all existing databases supported "
"by QGIS. With a double-click, you can connect to the database. With the "
"right mouse button, you can rename and delete existing schemas and "
"tables. Tables can also be added to the QGIS canvas with the context "
"menu."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:59
msgid ""
"If connected to a database, the **main** window of the DB Manager offers "
"four tabs. The :guilabel:`Info` tab provides information about the table "
"and its geometry, as well as about existing fields, constraints and "
"indexes. It allows you to create a spatial index on a the selected table."
" The :guilabel:`Table` tab shows the table, and the :guilabel:`Preview` "
"tab renders the geometries as preview. When you open an :guilabel:`SQL "
"Window`, it will be placed in a new tab."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:70
msgid "Working with the SQL Window"
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:72
msgid ""
"You can use the DB Manager to execute SQL queries against your spatial "
"database. Queries can be saved and loaded, and there the :guilabel:`SQL "
"Query Builder` will help you formulate your queries. You can even view "
"spatial output by checking :guilabel:`Load as new layer` and specifying "
":guilabel:`Column(s) with unique values` (IDs), :guilabel:`Geometry "
"column` and :guilabel:`Layer name (prefix)`. It is possible to highlight "
"a portion of the SQL to only execute that portion when pressing "
":kbd:`Ctrl+R` or clicking the :guilabel:`Execute` button."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:83
msgid ""
"The :guilabel:`Query History` button stores the last 20 queries of each "
"database and provider."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:86
msgid "Double clicking on an entry will add the string to the SQL window."
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:93
msgid "Executing SQL queries in the DB Manager SQL window"
msgstr ""

#: ../../docs/user_manual/plugins/core_plugins/plugins_db_manager.rst:97
msgid ""
"The SQL Window can also be used to create Virtual Layers. In that case, "
"instead of selecting a database, select **QGIS Layers** under **Virtual "
"Layers** before opening the SQL Window. See :ref:`vector_virtual_layers` "
"for instructions on the SQL syntax to use."
msgstr ""

