# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-27 20:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at "
"|translation progress|."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:5
msgid "Creating 3D Symbols"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:12
msgid ""
"The :guilabel:`Style Manager` helps you create and store 3D symbols for "
"every geometry type to render in the :ref:`3D map view "
"<label_3dmapview>`."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:15
msgid ""
"As of the other items, enable the |3d| :guilabel:`3D Symbols` tab and "
"expand the |symbologyAdd| button menu to create:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:204
msgid "3d"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:210
msgid "symbologyAdd"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:18
msgid ":ref:`3D point symbols <3d_pointlayers>`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:19
msgid ":ref:`3D line symbols <3d_linelayers>`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:20
msgid ":ref:`3D polygon symbols <3d_polygonlayers>`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:26
msgid "Point Layers"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:33
msgid "Properties of a 3D point symbol"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:35
msgid ""
"You can define different types of 3D :guilabel:`Shape` to use for point "
"symbols. They are mainly defined by their dimensions whose unit refers to"
" the CRS of the project. Available types are:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:39
msgid ":guilabel:`Sphere` defined by a :guilabel:`Radius`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:40
msgid ""
":guilabel:`Cylinder` defined by a :guilabel:`Radius` and "
":guilabel:`Length`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:41
msgid ":guilabel:`Cube` defined by a :guilabel:`Size`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:42
msgid ""
":guilabel:`Cone` defined by a :guilabel:`Top radius`, a :guilabel:`Bottom"
" radius` and a :guilabel:`Length`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:44
msgid ":guilabel:`Plane` defined by a :guilabel:`Size`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:45
msgid ""
":guilabel:`Torus` defined by a :guilabel:`Radius` and a :guilabel:`Minor "
"radius`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:46
msgid ""
":guilabel:`3D Model`, using a 3D model file: supported formats include "
"wavefront :file:`.obj`, :file:`.glTF` and :file:`.fbx`. Models can be a "
"file on disk, a remote URL or :ref:`embedded in the project "
"<embedded_file_selector>`. Community-created models are shared on the "
"`QGIS Hub <https://hub.qgis.org/wavefronts>`_."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:51
msgid ""
":guilabel:`Billboard`, defined by the :guilabel:`Billboard height` and "
"the :guilabel:`Billboard symbol` (usually based on a :ref:`marker symbol "
"<vector_marker_symbols>`). The symbol will have a stable size. Convenient"
" for visualizing 3D point clouds Shapes."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:55
msgid ""
"The :guilabel:`Altitude clamping` can be set to :guilabel:`Absolute`, "
":guilabel:`Relative` or :guilabel:`Terrain`. The :guilabel:`Absolute` "
"setting can be used when height values of the 3d vectors are provided as "
"absolute measures from 0. :guilabel:`Relative` and :guilabel:`Terrain` "
"add given elevation values to the underlying terrain elevation."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:60
#: ../../docs/user_manual/style_library/3d_symbols.rst:91
#: ../../docs/user_manual/style_library/3d_symbols.rst:136
msgid "The :ref:`shading <shading_texture>` properties can be defined."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:61
msgid ""
"Under the :guilabel:`Transformations` frame, you can apply affine "
"transformation to the symbol:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:64
msgid ":guilabel:`Translation` to move objects in x, y and z axis."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:65
msgid ":guilabel:`Scale` to resize the 3D shapes"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:66
msgid ":guilabel:`Rotation` around the x-, y- and z-axis."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:72
msgid "Line layers"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:79
msgid "Properties of a 3D line symbol"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:81
msgid ""
"Beneath the :guilabel:`Width` and :guilabel:`Height` settings you can "
"define the :guilabel:`Extrusion` of the vector lines. If the lines do not"
" have z-values, you can define the 3d volumes with this setting."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:84
msgid ""
"With the :guilabel:`Altitude clamping` you define the position of the 3D "
"lines relative to the underlying terrain surface, if you have included "
"raster elevation data or other 3D vectors."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:87
msgid ""
"The :guilabel:`Altitude binding` defines how the feature is clamped to "
"the terrain. Either every :guilabel:`Vertex` of the feature will be "
"clamped to the terrain or this will be done by the :guilabel:`Centroid`."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:90
msgid "It is possible to |checkbox|:guilabel:`Render as simple 3D lines`."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:206
msgid "checkbox"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:96
msgid "Polygon Layers"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:103
msgid "Properties of a 3D polygon symbol"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:105
msgid ""
"As for the other ones, :guilabel:`Height` can be defined in CRS units. "
"You can also use the |dataDefine| button to overwrite the value with a "
"custom expression, a variable or an entry of the attribute table"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:208
msgid "dataDefine"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:109
msgid ""
"Again, :guilabel:`Extrusion` is possible for missing z-values. Also for "
"the extrusion you can use the |dataDefine| button in order to use the "
"values of the vector layer and have different results for each polygon:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:116
msgid "Data Defined Extrusion"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:118
msgid ""
"The :guilabel:`Altitude clamping`, :guilabel:`Altitude binding` can be "
"defined as explained above."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:120
msgid "The :guilabel:`Culling mode` to apply to the symbol; it can be:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:122
msgid ""
":guilabel:`No Culling`: this can help to avoid seemingly missing surfaces"
" when polygonZ/multipatch data do not have consistent ordering of "
"vertices (e.g. all clock-wise or counter clock-wise)"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:125
msgid ":guilabel:`Front`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:126
msgid "or :guilabel:`Back`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:127
msgid ""
"The :guilabel:`Rendered facade` determines the faces to display. Possible"
" values are :guilabel:`No facades`, :guilabel:`Walls`, :guilabel:`Roofs`,"
" or :guilabel:`Walls and roofs`"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:130
msgid ""
"|checkbox| :guilabel:`Add back faces`: for each triangle, creates both "
"front and back face with correct normals - at the expense of increased "
"number of vertex data. This option can be used to fix shading issues "
"(e.g., due to data with inconsistent order of vertices)."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:134
msgid ""
"|checkbox| :guilabel:`Invert normals (experimental)`: can be useful for "
"fixing clockwise/counter-clockwise face vertex orders"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:137
msgid ""
"Display of the |checkbox| :guilabel:`Edges` of the symbols can be enabled"
" and assigned a :guilabel:`Width` and :guilabel:`Color`."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:140
msgid "**Combination for best rendering of 3D data**"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:142
msgid ""
":guilabel:`Culling mode`, :guilabel:`Add back faces` and "
":guilabel:`Invert normals` are all meant to fix the look of 3D data if it"
" does not look right. Typically when loading some data, it is best to "
"first try ``culling mode=back`` and ``add back faces=disabled`` - it is "
"the most efficient. If the rendering does not look correct, try ``add "
"back faces=enabled`` and keep ``culling mode=no culling``. Other "
"combinations are more advanced and useful only in some scenarios based on"
" how mixed up is the input dataset."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:153
msgid "Shading the texture"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:155
msgid ""
"Shading helps you reveal 3d details of objects which may otherwise be "
"hidden due to the scene's lighting. Ultimately, it's an easier material "
"to work with as you don't need to worry about setting up appropriate "
"scene lighting in order to visualise features."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:160
msgid ""
"Various techniques of shading are used in QGIS and their availability "
"depends on the geometry type of the symbol:"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:163
msgid ""
":guilabel:`Realistic (Phong)`: describes the way a surface reflects light"
" as a combination of the :guilabel:`Diffuse` reflection of rough surfaces"
" with the :guilabel:`Specular` reflection of shiny surfaces "
"(:guilabel:`Shininess`). It also includes an :guilabel:`Ambient` option "
"to account for the small amount of light that is scattered about the "
"entire scene. Use the :guilabel:`Opacity` slider to render semi-"
"transparent objects in 3D. Read more at `Phong reflection description "
"<https://en.wikipedia.org/wiki/Phong_reflection_model>`_."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:170
msgid ""
":guilabel:`Realistic Textured (Phong)`: same as the :guilabel:`Realistic "
"(Phong)` except that an image is used as :guilabel:`Diffuse Texture`. The"
" image can be a file on disk, a remote URL or :ref:`embedded in the "
"project <embedded_file_selector>`. The :guilabel:`Texture scale` and "
":guilabel:`Texture rotation` are required. Use the :guilabel:`Opacity` "
"slider to render semi-transparent objects in 3D."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:176
msgid ""
":guilabel:`CAD (Gooch)`: this technique allows shading to occur only in "
"mid-tones so that edge lines and highlights remain visually prominent. "
"Along with the :guilabel:`Diffuse`, :guilabel:`Specular`, "
":guilabel:`Shininess` options, you need to provide a :guilabel:`Warm` "
"color (for surface facing toward the light) and a :guilabel:`Cool` color "
"(for the ones facing away). Also, the relative contributions to the cool "
"and warm colors by the diffuse color are controlled by :guilabel:`Alpha` "
"and :guilabel:`Beta` properties respectively. See also `Gooch shading "
"<https://en.wikipedia.org/wiki/Gooch_shading>`_."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:184
msgid ""
":guilabel:`Metal Roughness`: a physically based rendering material that "
"provides an accurate representation of how light interacts with surfaces."
" Options are available for setting the material :guilabel:`Base color`, "
":guilabel:`Metalness` and :guilabel:`Roughness`."
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:188
msgid ":guilabel:`Embedded Textures` with 3D models shape"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:192
msgid "Application example"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:194
msgid ""
"To go through the settings explained above you can have a look at "
"https://app.merginmaps.com/projects/saber/luxembourg/tree."
msgstr ""

