# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at "
"|translation progress|."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:6
msgid "Connecting and Editing Data Across Layers"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:13
msgid ""
"Ability to connect data from different layers is one of the duties of a "
"GIS software. Such a connection can be based on the spatial relationship "
"between the features, or on their shared attributes. QGIS provides tools "
"to handle any of these associations, such as:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:18
msgid ""
"Processing algorithms that can create a new layer as a result of the "
"connection, namely :ref:`qgisjoinattributesbylocation`, "
":ref:`qgisjoinbynearest`, :ref:`qgisjoinattributestable`, ..."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:21
msgid ""
"SQL queries to create a new layer from the :ref:`DB Manager <dbmanager>` "
"or as a :ref:`virtual layer <vector_virtual_layers>`"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:23
msgid ""
":ref:`Joins properties <sec_joins>` or :ref:`relations settings "
"<vector_relations>` that temporarily extend attributes of features in a "
"given layer, with those of features in another layer based on some "
"matching attribute(s)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:27
msgid ""
"Joins and relations are technical concepts borrowed from databases to get"
" the most out of data stored in tables by combining their contents. The "
"idea is that features (rows) of different layers (tables) can be "
"associated to each other. The number of rows which are matching each "
"other can be of any value (zero, one, many)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:37
msgid "Joining features between two layers"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:39
msgid ""
"**Joins** in QGIS allow you to associate features of the current layer to"
" features from another loaded vector layer. Whether they are spatially "
"enabled and the type of geometry do not matter. The join is based on an "
"attribute that is shared by the layers, in a one-to-one relationship."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:44
msgid "To create a join on a layer (identified below as ``target layer``):"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:46
msgid ""
"Go to the layer :menuselection:`Properties -->` |join| :guilabel:`Joins` "
"tab"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:680
msgid "join"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:47
msgid ""
"Click the |symbologyAdd| :sup:`Add new join` button. The :guilabel:`Add "
"vector join` dialog appears."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:698
msgid "symbologyAdd"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:49
msgid ""
"Select the :guilabel:`Join layer` you want to connect with the target "
"vector layer"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:50
msgid ""
"Specify the :guilabel:`Join field` (from the ``join layer``) and the "
":guilabel:`Target field` (from the ``target layer``). These are the "
"fields that are used to find matching feature in both layers hence they "
"should have values in common."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:54
msgid ""
"Press :guilabel:`OK` and a summary of selected parameters is added to the"
" :guilabel:`Join` panel."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:61
msgid "Join an attribute table to an existing vector layer"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:63
msgid ""
"The steps above will create a join, where **ALL** the attributes of the "
"**first matching feature** in the join layer is added to the target "
"layer's feature. The following logic is used to pair features during a "
"join process:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:68
msgid ""
"All the features in the target layer are returned, regardless they have a"
" match"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:69
msgid ""
"If the target field contains duplicate values, these features are "
"assigned the same feature from the join layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:71
msgid ""
"If the join field contains duplicate matching values, only the first "
"fetched feature is picked."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:73
msgid ""
"Joins in QGIS are based on a single field matching so most of the times, "
"you would want to make sure that values in the matchable fields are "
"unique."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:76
msgid "QGIS provides some more options to tweak the join:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:78
msgid ""
"|checkbox| :guilabel:`Cache join layer in virtual memory`: allows you to "
"cache values in memory (without geometries) from the joined layer in "
"order to speed up lookups."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:672
msgid "checkbox"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:80
msgid ""
"|unchecked| :guilabel:`Create attribute index on the join field` to speed"
" up lookups"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:704
msgid "unchecked"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:81
msgid ""
"|unchecked| :guilabel:`Dynamic form`: helps to synchronize join fields on"
" the fly, according to the :guilabel:`Target field`. This way, "
"constraints for join fields are also correctly updated. Note that it's "
"deactivated by default because it may be very time consuming if you have "
"a lot of features or a myriad of joins."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:86
msgid ""
"If the target layer is editable, then some icons will be displayed in the"
" attribute table next to fields, in order to inform about their status:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:89
msgid ""
"|joinNotEditable|: the join layer is not configured to be editable. If "
"you want to be able to edit join features from the target attribute "
"table, then you have to check the option |checkbox| :guilabel:`Editable "
"join layer`."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:684
msgid "joinNotEditable"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:92
msgid ""
"|joinedLayerNotEditable|: the join layer is well configured to be "
"editable, but its current status is read only."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:686
msgid "joinedLayerNotEditable"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:94
msgid ""
"|joinHasNotUpsertOnEdit|: the join layer is editable, but synchronization"
" mechanisms are not activated. If you want to automatically add a feature"
" in the join layer when a feature is created in the target layer, then "
"you have to check the option |checkbox| :guilabel:`Upsert on edit`. "
"Symmetrically, the option |checkbox| :guilabel:`Delete cascade` may be "
"activated if you  want to automatically delete join features."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:682
msgid "joinHasNotUpsertOnEdit"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:101
msgid ""
"|unchecked| :guilabel:`Joined fields`: instead of adding all the fields "
"from the joined layer, you can specify a subset."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:103
msgid ""
"|unchecked| :guilabel:`Custom field name prefix` for joined fields, in "
"order to avoid name collision"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:111
msgid "Setting relations between multiple layers"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:113
msgid ""
"Unlike joins that define a one-to-one link between features across two "
"layers, relations help you build interconnections between multiple "
"features across two or more layers. As such, relations are project level "
"settings and are set in :menuselection:`Project --> Properties -->` "
"|relations| :guilabel:`Relations` tab. From there, you can:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:694
msgid "relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:119
msgid "|symbologyAdd| :guilabel:`Add relation` whose type can be:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:121
msgid ":ref:`one to many relation <one_to_many_relation>`"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:122
msgid ":ref:`many to many relation <many_to_many_relation>`"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:123
msgid ""
":ref:`polymorphic relation <polymorphic_relation>` that you can add or "
"edit with the dedicated tools in the action drop-down menu."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:126
msgid ""
"There is no simple way yet to edit a non-polymorphic relation once it has"
" been created. Only the name can be edited with a double-click. For any "
"other parameters of such a relation you will have to remove and recreate "
"it."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:130
msgid ""
"|symbologyAdd| :guilabel:`Discover relations`: QGIS is able to discover "
"existing relations from supported database formats (PostgreSQL, "
"GeoPackage, ESRI File Geodatabase, ...). This can be a good way to ease "
"the relations definition."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:133
msgid "|symbologyRemove| :guilabel:`Remove relation`"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:700
msgid "symbologyRemove"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:140
msgid "Relations tab"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:148
msgid "One to many (1-N) relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:150
msgid ""
"As an example you have a layer with all regions of Alaska (polygon) which"
" provides some attributes about its name and region type and a unique id "
"(which acts as primary key)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:154
msgid ""
"Then you get another point layer or table with information about airports"
" that are located in the regions and you also want to keep track of "
"these. If you want to add them to the regions layer, you need to create a"
" one to many relation using foreign keys, because there are several "
"airports in most regions."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:165
msgid "Alaska region with airports"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:168
msgid "Layers and keys"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:170
msgid ""
"QGIS makes no difference between a table and a vector layer. Basically, a"
" vector layer is a table with a geometry. So you can add your table as a "
"vector layer. To demonstrate the 1-n relation, you can load the "
":file:`regions` and :file:`airports` layers in the sample dataset. In "
"practice, each airport belongs to exactly one region while each region "
"can have any number of airports (a typical one to many relation)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:178
msgid "which has a foreign key field (``fk_region``) to the layer regions."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:180
msgid ""
"In addition to the attributes describing the airports, the aiports layer "
"has another field ``fk_region`` which acts as a foreign key (if you have "
"a database, you will probably want to define a constraint on it). This "
"``fk_region`` field will always contain an id of a region. It can be seen"
" like a pointer to the region it belongs to."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:186
msgid ""
"All you have to do is to tell QGIS the relation between the layers so "
"that you can design a custom edit form for editing and QGIS takes care of"
" the setup. It works with different providers (so you can also use it "
"with shape and csv files)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:191
msgid "Defining 1-N relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:193
msgid ""
"The first thing we are going to do is to let QGIS know about the "
"relations between the layers. This is done in :menuselection:`Project -->"
" Properties...`. Open the :guilabel:`Relations` tab and click on "
"|symbologyAdd| :guilabel:`Add Relation`."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:197
msgid ""
"**Name** is going to be used as a title. It should be a human readable "
"string describing what the relation is used for. We will just call say "
"**airport_relation** in this case."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:200
msgid ""
"**Referenced Layer (Parent)** also considered as parent layer, is the one"
" with the primary key, pointed to, so here it is the ``regions`` layer. "
"You need to define the primary key of the referenced layer, so it is "
"``ID``."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:203
msgid ""
"**Referencing Layer (Child)** also considered as child layer, is the one "
"with the foreign key field on it. In our case, this is the ``airports`` "
"layer. For this layer you need to add a referencing field which points to"
" the other layer, so this is ``fk_region``."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:209
#: ../../docs/user_manual/working_with_vector/joins_relations.rst:587
msgid ""
"Sometimes, you need more than a single field to uniquely identify "
"features in a layer. Creating a relation with such a layer requires a "
"**composite key**, i.e. more than a single pair of matching fields. Use "
"the |symbologyAdd| :sup:`Add new field pair as part of a composite "
"foreign key` button to add as many pairs as necessary."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:215
#: ../../docs/user_manual/working_with_vector/joins_relations.rst:576
msgid ""
"**Id** will be used for internal purposes and has to be unique. You may "
"need it to build :ref:`custom forms <customize_form>`. If you leave it "
"empty, one will be generated for you but you can assign one yourself to "
"get one that is easier to handle"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:219
msgid ""
"**Relationship strength** sets the strength of the relation between the "
"parent and the child layer. The default :guilabel:`Association` type "
"means that the parent layer is *simply* linked to the child one while the"
" :guilabel:`Composition` type allows you to duplicate also the child "
"features when duplicating the parent ones and on deleting a feature the "
"children are deleted as well, resulting in cascade over all levels (means"
" children of children of... are deleted as well)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:230
msgid "Adding a relation between regions and airports layers"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:232
msgid ""
"From the :guilabel:`Relations` tab, you can also press the |symbologyAdd|"
" :guilabel:`Discover Relation` button to fetch the relations available "
"from the providers of the loaded layers. This is possible for layers "
"stored in data providers like PostgreSQL or SpatiaLite."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:240
msgid "Forms for 1-N relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:242
msgid ""
"Now that QGIS knows about the relation, it will be used to improve the "
"forms it generates. As we did not change the default form method "
"(autogenerated), it will just add a new widget in our form. So let's "
"select the layer region in the legend and use the identify tool. "
"Depending on your settings, the form might open directly or you will have"
" to choose to open it in the identification dialog under actions."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:253
msgid "Identification dialog regions with relation to airports"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:255
msgid ""
"As you can see, the airports assigned to this particular region are all "
"shown in a table. And there are also some buttons available. Let's review"
" them shortly:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:258
msgid ""
"The |toggleEditing| button is for toggling the edit mode. Be aware that "
"it toggles the edit mode of the airport layer, although we are in the "
"feature form of a feature from the region layer. But the table is "
"representing features of the airport layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:702
msgid "toggleEditing"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:262
msgid ""
"The |saveEdits| button is for saving all the edits in the child layer "
"(airport)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:696
msgid "saveEdits"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:263
msgid ""
"The |capturePoint| button lets you digitize the airport geometry in the "
"map canvas and assigns the new feature to the current region by default. "
"Note that the icon will change according to the geometry type."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:670
msgid "capturePoint"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:266
msgid ""
"The |newTableRow| button adds a new record to the airport layer attribute"
" table and assigns the new feature to the current region by default. The "
"geometry can be drawn later with the :guilabel:`Add part` digitizing "
"tool."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:690
msgid "newTableRow"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:269
msgid ""
"The |duplicateFeature| button allows you to copy and paste one or more "
"child features within the child layer. They can later be assigned to a "
"different parent feature or have their attributes modified."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:676
msgid "duplicateFeature"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:272
msgid ""
"The |deleteSelectedFeatures| button deletes the selected airport(s) "
"permanently."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:674
msgid "deleteSelectedFeatures"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:273
msgid ""
"The |link| symbol opens a new dialog where you can select any existing "
"airport which will then be assigned to the current region. This may be "
"handy if you created the airport on the wrong region by accident."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:688
msgid "link"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:276
msgid ""
"The |unlink| symbol unlinks the selected airport(s) from the current "
"region, leaving them unassigned (the foreign key is set to NULL) "
"effectively."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:706
msgid "unlink"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:278
msgid ""
"With the |zoomToSelected| button you can zoom the map to the selected "
"child features."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:708
msgid "zoomToSelected"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:279
msgid ""
"The two buttons |formView| and |openTable| to the right switch between "
"the :ref:`table view and form view <attribute_table_view>` of the related"
" child features."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:678
msgid "formView"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:692
msgid "openTable"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:282
msgid ""
"If you use the :ref:`Drag and Drop Designer <customize_form>` for the "
"regions feature, you can select which tools are available. You can even "
"decide whether to open a new form when a new feature is added using "
":guilabel:`Force hide form on add feature` option. Be aware that this "
"option implies that not null attributes must take a valid default value "
"to work correctly."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:294
msgid "Drag and Drop Designer for configure regions-airports relation tools"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:296
msgid ""
"In the above example the referencing layer has geometries (so it isn't "
"just an alphanumeric table) so the above steps will create an entry in "
"the layer attribute table that has no corresponding geometric feature. To"
" add the geometry:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:301
msgid ""
"Choose |openTable| :menuselection:`Open Attribute Table` for the "
"referencing layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:302
msgid ""
"Select the record that has been added previously within the feature form "
"of the referenced layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:303
msgid ""
"Use the |addPart| :sup:`Add Part` digitizing tool to attach a geometry to"
" the selected attributes table record."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:668
msgid "addPart"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:306
msgid ""
"If you work on the airport table, the widget Relation Reference is "
"automatically set up for the ``fk_region`` field (the one used to create "
"the relation), see :ref:`Relation Reference widget <configure_field>`."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:312
msgid ""
"In the airport form you will see the |formView| button at the right side "
"of the ``fk_region`` field: if you click on the button the form of the "
"region layer will be opened. This widget allows you to easily and quickly"
" open the forms of the linked parent features."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:321
msgid "Identification dialog airport with relation to regions"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:323
msgid ""
"The Relation Reference widget has also an option to embed the form of the"
" parent layer within the child one. It is available in  the "
":menuselection:`Properties --> Attributes Form` menu of the airport "
"layer: select the ``fk_region`` field and check the ``Show embedded "
"form`` option."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:327
msgid ""
"If you look at the feature dialog now, you will see that the form of the "
"region is embedded inside the airports form and will even have a "
"combobox, which allows you to assign the current airport to another "
"region."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:336
msgid ""
"Moreover if you toggle the editing mode of the airport layer, the "
"``fk_region`` field has also an autocompleter function: while typing you "
"will see all the values of the ``id`` field of the region layer. Here it "
"is possible to digitize a polygon for the region layer using the "
"|symbologyAdd| button if you chose the option ``Allow adding new "
"features`` in the :menuselection:`Properties --> Attributes Form` menu of"
" the airport layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:343
msgid ""
"The child layer can also be used in the :ref:`select_by_value` tool in "
"order to select features of the parent layer based on attributes of their"
" children."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:346
msgid ""
"In :numref:`figure_select_by_value`, all the regions where the mean "
"altitude of the airports is greater than 500 meters above sea level are "
"selected."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:349
msgid ""
"You will find that many different aggregation functions are available in "
"the form."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:356
msgid "Select parent features with child values"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:363
msgid "Many-to-many (N-M) relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:365
msgid ""
"N-M relations are many-to-many relations between two tables. For "
"instance, the ``airports`` and ``airlines`` layers: an airport receives "
"several airline companies and an airline company flies to several "
"airports."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:370
msgid ""
"This SQL code creates the three tables we need for an N-M relationship in"
" a PostgreSQL/PostGIS schema named *locations*. You can run the code "
"using the :menuselection:`Database --> DB Manager…` for PostGIS or "
"external tools such as `pgAdmin <https://www.pgadmin.org>`_. The airports"
" table stores the ``airports`` layer and the airline table stores the "
"``airlines`` layer. In both tables few fields are used for clarity. The "
"*tricky* part is the ``airports_airlines`` table. We need it to list all "
"airlines for all airports (or vice versa). This kind of table is known as"
" a *pivot table*. The *constraints* in this table force that an airport "
"can be associated with an airline only if both already exist in their "
"layers."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:424
msgid ""
"Instead of PostgreSQL you can also use GeoPackage. In this case, the "
"three tables can be created manually using the :menuselection:`Database "
"--> DB Manager…`. In GeoPackage there are no schemas so the *locations* "
"prefix is not needed."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:429
msgid ""
"Foreign key constraints in ``airports_airlines`` table can´t be created "
"using :menuselection:`Table --> Create Table…` or :menuselection:`Table "
"--> Edit Table…` so they should be created using :menuselection:`Database"
" --> SQL Window…`. GeoPackage doesn't support *ADD CONSTRAINT* statements"
" so the ``airports_airlines`` table should be created in two steps:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:435
msgid ""
"Set up the table only with the ``id`` field using :menuselection:`Table "
"--> Create Table…`"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:436
msgid ""
"Using :menuselection:`Database --> SQL Window…`, type and execute this "
"SQL code:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:454
msgid ""
"Then in QGIS, you should set up two :ref:`one-to-many relations "
"<one_to_many_relation>` as explained above:"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:457
msgid "a relation between ``airlines`` table and the pivot table;"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:458
msgid "and a second one between ``airports`` table and the pivot table."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:460
msgid ""
"An easier way to do it (only for PostgreSQL) is using the "
":guilabel:`Discover Relations` in :menuselection:`Project --> Properties "
"--> Relations`. QGIS will automatically read all relations in your "
"database and you only have to select the two you need. Remember to load "
"the three tables in the QGIS project first."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:471
msgid "Relations and autodiscover"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:473
msgid ""
"In case you want to remove an ``airport`` or an ``airline``, QGIS won't "
"remove the associated record(s) in ``airports_airlines`` table. This task"
" will be made by the database if we specify the right *constraints* in "
"the pivot table creation as in the current example."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:478
msgid "**Combining N-M relation with automatic transaction group**"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:480
msgid ""
"You should enable the transaction mode in :menuselection:`Project "
"Properties --> Data Sources -->` when working on such context. QGIS "
"should be able to add or update row(s) in all tables (airlines, airports "
"and the pivot tables)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:484
msgid ""
"Finally we have to select the right cardinality in the "
":menuselection:`Layer Properties --> Attributes Form` for the "
"``airports`` and ``airlines`` layers. For the first one we should choose "
"the **airlines (id)** option and for the second one the **airports (id)**"
" option."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:495
msgid "Set relationship cardinality"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:497
msgid ""
"Now you can associate an airport with an airline (or an airline with an "
"airport) using :guilabel:`Add child feature` or :guilabel:`Link existing "
"child feature` in the subforms. A record will automatically be inserted "
"in the ``airports_airlines`` table."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:506
msgid "N-M relationship between airports and airlines"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:508
msgid "Using **Many to one relation** cardinality"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:510
msgid ""
"Sometimes hiding the pivot table in an N-M relationship is not desirable."
" Mainly because there are attributes in the relationship that can only "
"have values when a relationship is established. If your tables have a "
"geometry field, it could be interesting to activate the :guilabel:`On map"
" identification` option (:menuselection:`Layer Properties --> Attributes "
"Form --> Available widgets --> Fields`) for the foreign key fields in the"
" pivot table."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:517
msgid "**Pivot table primary key**"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:519
msgid ""
"Avoid using multiple fields in the primary key in a pivot table. QGIS "
"assumes a single  primary key so a constraint like ``constraint "
"airports_airlines_pkey primary key (airport_fk, airline_fk)`` will not "
"work."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:528
msgid "Polymorphic relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:531
msgid "The purpose"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:533
msgid ""
"Polymorphic relations are special case of 1-N relations, where a single "
"referencing (document) layer contains the features for multiple "
"referenced layers. This differs from normal relations which require "
"different referencing layer for each referenced layer. A single "
"referencing (document) layer is achieved by adding an adiditonal "
"``layer_field`` column in the referencing (document) layer that stores "
"information to identify the referenced layer. In its most simple form, "
"the referencing (document) layer will just insert the layer name of the "
"referenced layer into this field."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:541
msgid ""
"To be more precise, a polymorphic relation is a set of normal relations "
"having the same referencing layer but having the referenced layer "
"dynamically defined. The polymorphic setting of the layer is solved by "
"using an expression which has to match some properties of the referenced "
"layer like the table name, layer id, layer name."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:546
msgid ""
"Imagine we are going to the park and want to take pictures of different "
"species of ``plants`` and ``animals`` we see there. Each plant or animal "
"has multiple pictures associated with it, so if we use the normal 1:N "
"relations to store pictures, we would need two separate tables, "
"``animal_images`` and ``plant_images``. This might not be a problem for 2"
" tables, but imagine if we want to take separate pictures for mushrooms, "
"birds etc."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:554
msgid ""
"Polymorphic relations solve this problem as all the referencing features "
"are stored in the same table ``documents``. For each feature the "
"referenced layer is stored in the ``referenced_layer`` field and the "
"referenced feature id in the ``referenced_fk`` field."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:560
msgid "Defining polymorphic relations"
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:562
msgid ""
"First, let QGIS know about the polymorphic relations between the layers. "
"This is done in :menuselection:`Project --> Properties...`. Open the "
":guilabel:`Relations` tab and click on the little down arrow next to the "
"|symbologyAdd| :guilabel:`Add Relation` button, so you can select the "
":guilabel:`Add Polymorphic Relation` option from the newly appeared "
"dropdown."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:573
msgid ""
"Adding a polymorphic relation using ``documents`` layer as referencing "
"and ``animals`` and ``plants`` as referenced layers."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:581
msgid ""
"**Referencing Layer (Child)** also considered as child layer, is the one "
"with the foreign key field on it. In our case, this is the ``documents`` "
"layer. For this layer you need to add a referencing field which points to"
" the other layer, so this is ``referenced_fk``."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:593
msgid ""
"**Layer Field** is the field in the referencing table that stores the "
"result of the evaluated layer expression which is the referencing table "
"that this feature belongs to. In our example, this would be the "
"``referenced_layer`` field."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:597
msgid ""
"**Layer expression** evaluates to a unique identifier of the layer. This "
"can be the layer name ``@layer_name``, the layer id ``@layer_id``, the "
"layer's table name ``decode_uri(@layer, 'table')`` or anything that can "
"uniquely identifies a layer."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:602
msgid ""
"**Relationship strength** sets the strength of the generated relations "
"between the parent and the child layer. The default "
":guilabel:`Association` type means that the parent layer is *simply* "
"linked to the child one while the :guilabel:`Composition` type allows you"
" to duplicate also the child features when duplicating the parent ones "
"and on deleting a feature the children are deleted as well, resulting in "
"cascade over all levels (means children of children of... are deleted as "
"well)."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:608
msgid ""
"**Referenced Layers** also considered as parent layers, are those with "
"the primary key, pointed to, so here they would be ``plants`` and "
"``animals`` layers. You need to define the primary key of the referenced "
"layers from the dropdown, so it is ``fid``. Note that the definition of a"
" valid primary key requires all the referenced layers to have a field "
"with that name. If there is no such field you cannot save a polymorphic "
"relation."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:615
msgid ""
"Once added, the polymorphic relation can be edited via the "
":guilabel:`Edit Polymorphic Relation` menu entry."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:623
msgid ""
"Preview of the newly created polymorphic relation and its child relations"
" for animals and plants."
msgstr ""

#: ../../docs/user_manual/working_with_vector/joins_relations.rst:626
msgid "The example above uses the following database schema:"
msgstr ""

