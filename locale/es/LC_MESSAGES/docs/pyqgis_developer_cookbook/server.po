# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Harrissou Sant-anna, 2024
# Transifex Bot <>, 2024
# Eric Armijo, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: 2024-03-02 11:58+0000\n"
"Last-Translator: Eric Armijo, 2024\n"
"Language-Team: Spanish (https://app.transifex.com/qgis/teams/6144/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"La traducción es un esfuerzo comunitario :ref:`puede unirse "
"<translation_guidelines>`. Esta página está actualmente traducida en "
"|progreso de traducción|."

#: ../../docs/pyqgis_developer_cookbook/server.rst:29
msgid "QGIS Server and Python"
msgstr "Servidor QGIS y Python"

#: ../../docs/pyqgis_developer_cookbook/server.rst:38
msgid "Introduction"
msgstr "Introducción"

#: ../../docs/pyqgis_developer_cookbook/server.rst:40
msgid "To learn more about QGIS Server, read the :ref:`QGIS-Server-manual`."
msgstr ""
"Para obtener más información sobre QGIS Server, lea :ref:`QGIS-Server-"
"manual`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:42
msgid "QGIS Server is three different things:"
msgstr "QGIS Server es tres cosas diferentes:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:44
msgid ""
"QGIS Server library: a library that provides an API for creating OGC web "
"services"
msgstr ""
"Biblioteca de QGIS Server: una biblioteca que proporciona una API para crear"
" servicios web OGC"

#: ../../docs/pyqgis_developer_cookbook/server.rst:45
msgid ""
"QGIS Server FCGI: a FCGI binary application :file:`qgis_mapserv.fcgi` that "
"together with a web server implements a set of OGC services (WMS, WFS, WCS "
"etc.) and OGC APIs (WFS3/OAPIF)"
msgstr ""
"QGIS Server FCGI: una aplicación binaria FCGI :file:`qgis_mapserv.fcgi` que "
"junto con un servidor web implementa un conjunto de servicios OGC (WMS, WFS,"
" WCS etc.) y APIs OGC (WFS3/OAPIF)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:48
msgid ""
"QGIS Development Server: a development server binary application "
":file:`qgis_mapserver` that implements a set of OGC services (WMS, WFS, WCS "
"etc.) and OGC APIs (WFS3/OAPIF)"
msgstr ""
"QGIS Development Server: una aplicación binaria de servidor de desarrollo "
":file:`qgis_mapserver` que implementa un conjunto de servicios OGC (WMS, "
"WFS, WCS, etc.) y API de OGC (WFS3 / OAPIF)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:51
msgid ""
"This chapter of the cookbook focuses on the first topic and by explaining "
"the usage of QGIS Server API it shows how it is possible to use Python to "
"extend, enhance or customize the server behavior or how to use the QGIS "
"Server API to embed QGIS server into another application."
msgstr ""
"Este capítulo del libro de cocina se centra en el primer tema y, al explicar"
" el uso de la API de QGIS Server, muestra cómo es posible utilizar Python "
"para ampliar, mejorar o personalizar el comportamiento del servidor o cómo "
"utilizar la API de QGIS Server para incrustar el servidor QGIS en otra "
"aplicación."

#: ../../docs/pyqgis_developer_cookbook/server.rst:55
msgid ""
"There are a few different ways you can alter the behavior of QGIS Server or "
"extend its capabilities to offer new custom services or APIs, these are the "
"main scenarios you may face:"
msgstr ""
"Hay algunas formas diferentes en las que puede alterar el comportamiento de "
"QGIS Server o ampliar sus capacidades para ofrecer nuevos servicios "
"personalizados o API, estos son los principales escenarios a los que puede "
"enfrentarse:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:59
msgid "EMBEDDING |rarr| Use QGIS Server API from another Python application"
msgstr ""
"EMBEDDING |rarr| Utilice la API de QGIS Server desde otra aplicación de "
"Python"

#: ../../docs/pyqgis_developer_cookbook/server.rst:60
msgid "STANDALONE |rarr| Run QGIS Server as a standalone WSGI/HTTP service"
msgstr ""
"STANDALONE |rarr| Ejecutar QGIS Server como servicio autónomo WSGI/HTTP "

#: ../../docs/pyqgis_developer_cookbook/server.rst:61
msgid "FILTERS |rarr| Enhance/Customize QGIS Server with filter plugins"
msgstr ""
"FILTERS |rarr| Mejorar/personalizar QGIS Server con complementos de filtro"

#: ../../docs/pyqgis_developer_cookbook/server.rst:62
msgid "SERVICES |rarr| Add a new *SERVICE*"
msgstr "SERVICES |rarr| Añadir un nuevo *SERVICE*"

#: ../../docs/pyqgis_developer_cookbook/server.rst:63
msgid "OGC APIs |rarr| Add a new *OGC API*"
msgstr "OGC APIs |rarr| Añadir una nueva *OGC API*"

#: ../../docs/pyqgis_developer_cookbook/server.rst:65
msgid ""
"Embedding and standalone applications require using the QGIS Server Python "
"API directly from another Python script or application. The remaining "
"options are better suited for when you want to add custom features to a "
"standard QGIS Server binary application (FCGI or development server): in "
"this case you'll need to write a Python plugin for the server application "
"and register your custom filters, services or APIs."
msgstr ""
"Las aplicaciones integradas e independientes requieren el uso de la API de "
"Python de QGIS Server directamente desde otro script o aplicación de Python."
" Las opciones restantes son más adecuadas para cuando desee agregar "
"funciones personalizadas a una aplicación binaria estándar de QGIS Server "
"(FCGI o servidor de desarrollo): en este caso, deberá escribir un "
"complemento de Python para la aplicación del servidor y registrar sus "
"filtros personalizados, servicios o API."

#: ../../docs/pyqgis_developer_cookbook/server.rst:72
msgid "Server API basics"
msgstr "Conceptos básicos de la API del servidor"

#: ../../docs/pyqgis_developer_cookbook/server.rst:74
msgid ""
"The fundamental classes involved in a typical QGIS Server application are:"
msgstr ""
"Las clases fundamentales involucradas en una aplicación típica de QGIS "
"Server son:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:76
msgid ""
":class:`QgsServer <qgis.server.QgsServer>` the server instance (typically a "
"single instance for the whole application life)"
msgstr ""
":class:`QgsServer <qgis.server.QgsServer>` la instancia del servidor "
"(normalmente una sola instancia durante toda la vida de la aplicación)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:78
msgid ""
":class:`QgsServerRequest <qgis.server.QgsServerRequest>` the request object "
"(typically recreated on each request)"
msgstr ""
":class:`QgsServerRequest <qgis.server.QgsServerRequest>` el objeto de la "
"solicitud (normalmente recreado en cada solicitud)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:80
msgid ""
":meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` processes the request and populates "
"the response"
msgstr ""
":meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` procesa la solicitud y completa la "
"respuesta"

#: ../../docs/pyqgis_developer_cookbook/server.rst:83
msgid ""
"The QGIS Server FCGI or development server workflow can be summarized as "
"follows:"
msgstr ""
"El flujo de trabajo del servidor de desarrollo o FCGI de QGIS Server se "
"puede resumir de la siguiente manera:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:97
msgid ""
"Inside the :meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` method the filter plugins callbacks "
"are called and :class:`QgsServerRequest <qgis.server.QgsServerRequest>` and "
":class:`QgsServerResponse <qgis.server.QgsServerResponse>` are made "
"available to the plugins through the :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` class."
msgstr ""
"Dentro del métodod :meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` las devoluciones de llamada de los "
"complementos de filtro se llaman y :class:`QgsServerRequest "
"<qgis.server.QgsServerRequest>` y :class:`QgsServerResponse "
"<qgis.server.QgsServerResponse>` están disponibles para los complementos a "
"través de la clase :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:104
msgid ""
"QGIS server classes are not thread safe, you should always use a "
"multiprocessing model or containers when building scalable applications "
"based on QGIS Server API."
msgstr ""
"Las clases de servidor de QGIS no son seguras para subprocesos, siempre debe"
" usar un modelo o contenedores de multiprocesamiento cuando cree "
"aplicaciones escalables basadas en la API de QGIS Server."

#: ../../docs/pyqgis_developer_cookbook/server.rst:108
msgid "Standalone or embedding"
msgstr "Independiente o incrustado"

#: ../../docs/pyqgis_developer_cookbook/server.rst:110
msgid ""
"For standalone server applications or embedding, you will need to use the "
"above mentioned server classes directly, wrapping them up into a web server "
"implementation that manages all the HTTP protocol interactions with the "
"client."
msgstr ""
"Para aplicaciones de servidor independientes o incrustaciones, deberá usar "
"las clases de servidor mencionadas anteriormente directamente, "
"envolviéndolas en una implementación de servidor web que gestiona todas las "
"interacciones del protocolo HTTP con el cliente."

#: ../../docs/pyqgis_developer_cookbook/server.rst:115
msgid ""
"A minimal example of the QGIS Server API usage (without the HTTP part) "
"follows:"
msgstr ""
"A continuación, se muestra un ejemplo mínimo del uso de la API de QGIS "
"Server (sin la parte HTTP):"

#: ../../docs/pyqgis_developer_cookbook/server.rst:147
msgid ""
"Here is a complete standalone application example developed for the "
"continuous integrations testing on QGIS source code repository, it showcases"
" a wide set of different plugin filters and authentication schemes (not mean"
" for production because they were developed for testing purposes only but "
"still interesting for learning): :source:`qgis_wrapped_server.py "
"<tests/src/python/qgis_wrapped_server.py>`"
msgstr ""
"A continuación se muestra un ejemplo completo de aplicación independiente "
"desarrollada para las pruebas de integraciones continuas en el repositorio "
"de código fuente de QGIS, que muestra un amplio conjunto de diferentes "
"filtros de complementos y esquemas de autenticación (no significa para la "
"producción, ya que se desarrollaron sólo para fines de prueba, pero sigue "
"siendo interesante para el aprendizaje): :source:`qgis_wrapped_server.py "
"<tests/src/python/qgis_wrapped_server.py>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:154
msgid "Server plugins"
msgstr "Complementos del servidor"

#: ../../docs/pyqgis_developer_cookbook/server.rst:156
msgid ""
"Server python plugins are loaded once when the QGIS Server application "
"starts and can be used to register filters, services or APIs."
msgstr ""
"Los complementos de Python del servidor se cargan una vez cuando se inicia "
"la aplicación QGIS Server y se pueden usar para registrar filtros, servicios"
" o API."

#: ../../docs/pyqgis_developer_cookbook/server.rst:159
msgid ""
"The structure of a server plugin is very similar to their desktop "
"counterpart, a :class:`QgsServerInterface <qgis.server.QgsServerInterface>` "
"object is made available to the plugins and the plugins can register one or "
"more custom filters, services or APIs to the corresponding registry by using"
" one of the methods exposed by the server interface."
msgstr ""
"La estructura de un complemento de servidor es muy similar a su contraparte "
"de escritorio, un objeto :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` está disponible para los complementos y "
"los complementos pueden registrar uno o más filtros personalizados, "
"servicios o API en el registro correspondiente mediante uno de los métodos "
"expuestos por la interfaz del servidor."

#: ../../docs/pyqgis_developer_cookbook/server.rst:165
msgid "Server filter plugins"
msgstr "Complementos de filtro de servidor"

#: ../../docs/pyqgis_developer_cookbook/server.rst:167
msgid ""
"Filters come in three different flavors and they can be instanciated by "
"subclassing one of the classes below and by calling the corresponding method"
" of :class:`QgsServerInterface <qgis.server.QgsServerInterface>`:"
msgstr ""
"Los filtros vienen en tres sabores diferentes y se pueden instanciar "
"subclasificando una de las clases a continuación y llamando al método "
"correspondiente de :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>`:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:174
msgid "Filter Type"
msgstr "Tipo de filtro"

#: ../../docs/pyqgis_developer_cookbook/server.rst:175
msgid "Base Class"
msgstr "Clase Base"

#: ../../docs/pyqgis_developer_cookbook/server.rst:176
msgid "QgsServerInterface registration"
msgstr "Registro de QgsServerInterface"

#: ../../docs/pyqgis_developer_cookbook/server.rst:177
msgid "I/O"
msgstr "E/S"

#: ../../docs/pyqgis_developer_cookbook/server.rst:178
msgid ":class:`QgsServerFilter <qgis.server.QgsServerFilter>`"
msgstr ":class:`QgsServerFilter <qgis.server.QgsServerFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:179
msgid ""
":meth:`registerFilter() <qgis.server.QgsServerInterface.registerFilter>`"
msgstr ""
":meth:`registerFilter() <qgis.server.QgsServerInterface.registerFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:180
msgid "Access Control"
msgstr "Control de acceso"

#: ../../docs/pyqgis_developer_cookbook/server.rst:181
msgid ":class:`QgsAccessControlFilter <qgis.server.QgsAccessControlFilter>`"
msgstr ":class:`QgsAccessControlFilter <qgis.server.QgsAccessControlFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:182
msgid ""
":meth:`registerAccessControl() "
"<qgis.server.QgsServerInterface.registerAccessControl>`"
msgstr ""
":meth:`registerAccessControl() "
"<qgis.server.QgsServerInterface.registerAccessControl>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:183
msgid "Cache"
msgstr "Cache"

#: ../../docs/pyqgis_developer_cookbook/server.rst:184
msgid ":class:`QgsServerCacheFilter <qgis.server.QgsServerCacheFilter>`"
msgstr ":class:`QgsServerCacheFilter <qgis.server.QgsServerCacheFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:185
msgid ""
":meth:`registerServerCache() "
"<qgis.server.QgsServerInterface.registerServerCache>`"
msgstr ""
":meth:`registerServerCache() "
"<qgis.server.QgsServerInterface.registerServerCache>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:188
msgid "I/O filters"
msgstr "Filtros de E/S"

#: ../../docs/pyqgis_developer_cookbook/server.rst:190
msgid ""
"I/O filters can modify the server input and output (the request and the "
"response) of the core services (WMS, WFS etc.) allowing to do any kind of "
"manipulation of the services workflow. It is possible for example to "
"restrict the access to selected layers, to inject an XSL stylesheet to the "
"XML response, to add a watermark to a generated WMS image and so on."
msgstr ""
"Los filtros de E/S pueden modificar la entrada y salida del servidor (la "
"solicitud y la respuesta) de los servicios centrales (WMS, WFS, etc.) "
"permitiendo realizar cualquier tipo de manipulación del flujo de trabajo de "
"los servicios. Es posible, por ejemplo, restringir el acceso a las capas "
"seleccionadas, inyectar una hoja de estilo XSL a la respuesta XML, agregar "
"una marca de agua a una imagen WMS generada, etc."

#: ../../docs/pyqgis_developer_cookbook/server.rst:196
msgid ""
"From this point, you might find useful a quick look to the :pyqgis:`server "
"plugins API docs <server>`."
msgstr ""
"A partir de este punto, encontrará útil un vistazo rápido a :pyqgis:`server "
"plugins API docs <server>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:199
msgid "Each filter should implement at least one of three callbacks:"
msgstr ""
"Cada filtro debe implementar al menos una de las tres devoluciones de "
"llamada:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:201
#: ../../docs/pyqgis_developer_cookbook/server.rst:372
msgid ":meth:`onRequestReady() <qgis.server.QgsServerFilter.onRequestReady>`"
msgstr ":meth:`onRequestReady() <qgis.server.QgsServerFilter.onRequestReady>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:202
#: ../../docs/pyqgis_developer_cookbook/server.rst:373
msgid ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`"
msgstr ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:203
#: ../../docs/pyqgis_developer_cookbook/server.rst:374
msgid ":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>`"
msgstr ":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:205
msgid ""
"All filters have access to the request/response object "
"(:class:`QgsRequestHandler <qgis.server.QgsRequestHandler>`) and can "
"manipulate all its properties (input/output) and raise exceptions (while in "
"a quite particular way as we’ll see below)."
msgstr ""
"Todos los filtros tienen acceso al objeto de solicitud/respuesta "
"(:class:`QgsRequestHandler <qgis.server.QgsRequestHandler>`) y puede "
"manipular todas sus propiedades (entrada/salida) y generar excepciones "
"(aunque de una manera bastante particular como veremos a continuación)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:210
msgid ""
"All these methods return a boolean value indicating if the call should be "
"propagated to the subsequent filters. If one of these method returns "
":const:`False` then the chain stop, otherwise the call will propagate to the"
" next filter."
msgstr ""
"Todos estos métodos devuelven un valor booleano que indica si la llamada "
"debe propagarse a los filtros siguientes. Si uno de estos métodos devuelve "
":const:`False` entonces la cadena se detiene, de lo contrario la llamada se "
"propagará al siguiente filtro."

#: ../../docs/pyqgis_developer_cookbook/server.rst:214
msgid ""
"Here is the pseudo code showing how the server handles a typical request and"
" when the filter’s callbacks are called:"
msgstr ""
"Aquí está el pseudocódigo que muestra cómo el servidor maneja una solicitud "
"típica y cuándo se llaman las devoluciones de llamada del filtro:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:234
msgid "The following paragraphs describe the available callbacks in details."
msgstr ""
"Los siguientes párrafos describen las devoluciones de llamada disponibles en"
" detalle."

#: ../../docs/pyqgis_developer_cookbook/server.rst:237
msgid "onRequestReady"
msgstr "onRequestReady"

#: ../../docs/pyqgis_developer_cookbook/server.rst:239
msgid ""
"This is called when the request is ready: incoming URL and data have been "
"parsed and before entering the core services (WMS, WFS etc.) switch, this is"
" the point where you can manipulate the input and perform actions like:"
msgstr ""
"Esto se llama cuando la solicitud está lista: la URL entrante y los datos se"
" han analizado y antes de ingresar al conmutador de servicios centrales "
"(WMS, WFS, etc.), este es el punto donde puede manipular la entrada y "
"realizar acciones como:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:243
msgid "authentication/authorization"
msgstr "autenticación/autorización"

#: ../../docs/pyqgis_developer_cookbook/server.rst:244
msgid "redirects"
msgstr "redirije"

#: ../../docs/pyqgis_developer_cookbook/server.rst:245
msgid "add/remove certain parameters (typenames for example)"
msgstr "añadir/borrar ciertos parámetros (nombres de tipos, por ejemplo)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:246
msgid "raise exceptions"
msgstr "plantear excepciones"

#: ../../docs/pyqgis_developer_cookbook/server.rst:248
msgid ""
"You could even substitute a core service completely by changing **SERVICE** "
"parameter and hence bypassing the core service completely (not that this "
"make much sense though)."
msgstr ""
"Incluso podría sustituir un servicio central por completo cambiando el "
"parámetro **SERVICE** y, por lo tanto, omitiendo el servicio central por "
"completo (aunque esto no tiene mucho sentido)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:253
msgid "onSendResponse"
msgstr "onSendResponse"

#: ../../docs/pyqgis_developer_cookbook/server.rst:255
msgid ""
"This is called whenever any partial output is flushed from response buffer "
"(i.e to **FCGI** ``stdout`` if the fcgi server is used) and from there, to "
"the client. This occurs when huge content is streamed (like WFS GetFeature)."
" In this case :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` may be called multiple times."
msgstr ""
"Esta llamada se realiza siempre que cualquier salida parcial se descarga "
"desde el buffer de respuesta (es decir, a **FCGI** ``stdout`` si se utiliza "
"el servidor fcgi) y desde allí, al cliente. Esto ocurre cuando se transmite "
"un contenido enorme (como WFS GetFeature). En este caso "
":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>` puede "
"ser llamado varias veces."

#: ../../docs/pyqgis_developer_cookbook/server.rst:260
msgid ""
"Note that if the response is not streamed, then :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` will not be called at all."
msgstr ""
"Tenga en cuenta que si la respuesta no se transmite, entonces "
":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>` no se "
"llamará en absoluto."

#: ../../docs/pyqgis_developer_cookbook/server.rst:262
msgid ""
"In all case, the last (or unique) chunk will be sent to client after a call "
"to :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."
msgstr ""
"En todos los casos, el último (o único) trozo se enviará al cliente tras una"
" llamada a :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:265
msgid ""
"Returning :const:`False` will prevent flushing of data to the client. This "
"is desirable when a plugin wants to collect all chunks from a response and "
"examine or change the response in :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."
msgstr ""
"Devolver :const:`False` prevendrá la descarga de datos al cliente. Esto es "
"deseable cuando un complemento quiere recoger todos los trozos de una "
"respuesta y examinar o cambiar la respuesta en :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:271
msgid "onResponseComplete"
msgstr "onResponseComplete"

#: ../../docs/pyqgis_developer_cookbook/server.rst:273
msgid ""
"This is called once when core services (if hit) finish their process and the"
" request is ready to be sent to the client. As discussed above, this method "
"will be called before the last (or unique) chunk of data is sent to the "
"client. For streaming services, multiple calls to :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` might have been called."
msgstr ""
"Se llama una vez cuando los servicios centrales (si se han alcanzado) "
"terminan su proceso y la petición está lista para ser enviada al cliente. "
"Como se ha comentado anteriormente, este método se llamará antes de que el "
"último (o único) trozo de datos se envíe al cliente. Para servicios de "
"streaming, multiples llamadas a :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` pueden haber sido llamadas."

#: ../../docs/pyqgis_developer_cookbook/server.rst:279
msgid ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` is the ideal place to "
"provide new services implementation (WPS or custom services) and to perform "
"direct manipulation of the output coming from core services (for example to "
"add a watermark upon a WMS image)."
msgstr ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` es el lugar ideal para "
"proporcionar la implementación de nuevos servicios (WPS o servicios "
"personalizados) y para realizar la manipulación directa de la salida "
"procedente de los servicios centrales (por ejemplo para añadir una marca de "
"agua sobre una imagen WMS)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:284
msgid ""
"Note that returning :const:`False` will prevent the next plugins to execute "
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` but, in any case, prevent "
"response to be sent to the client."
msgstr ""
"Tenga en cuenta que devolver :const:`False` evitará que los siguientes "
"complementos ejecuten :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` pero, en cualquier caso, "
"evitará que se envíe la respuesta al cliente."

#: ../../docs/pyqgis_developer_cookbook/server.rst:290
msgid "Raising exceptions from a plugin"
msgstr "Generación de excepciones de un complemento"

#: ../../docs/pyqgis_developer_cookbook/server.rst:292
msgid ""
"Some work has still to be done on this topic: the current implementation can"
" distinguish between handled and unhandled exceptions by setting a "
":class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` property to an "
"instance of QgsMapServiceException, this way the main C++ code can catch "
"handled python exceptions and ignore unhandled exceptions (or better: log "
"them)."
msgstr ""
"Aún queda trabajo por hacer en este tema: la implementación actual puede "
"distinguir entre excepciones manejadas y no manejadas estableciendo una "
"propiedad :class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` a una "
"instancia de QgsMapServiceException, de esta manera el código principal de C"
" ++ puede detectar excepciones de Python controladas e ignorar las "
"excepciones no controladas (o mejor: registrarlas)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:299
msgid ""
"This approach basically works but it is not very \"pythonic\": a better "
"approach would be to raise exceptions from python code and see them bubbling"
" up into C++ loop for being handled there."
msgstr ""
"Este enfoque básicamente funciona, pero no es muy \"pitónico\": un mejor "
"enfoque sería generar excepciones del código de Python y verlas burbujear en"
" el bucle C ++ para que se manejen allí."

#: ../../docs/pyqgis_developer_cookbook/server.rst:306
msgid "Writing a server plugin"
msgstr "Escribiendo un complemento del servidor"

#: ../../docs/pyqgis_developer_cookbook/server.rst:308
msgid ""
"A server plugin is a standard QGIS Python plugin as described in "
":ref:`developing_plugins`, that just provides an additional (or alternative)"
" interface: a typical QGIS desktop plugin has access to QGIS application "
"through the :class:`QgisInterface <qgis.gui.QgisInterface>` instance, a "
"server plugin has only access to a :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` when it is executed within the QGIS Server"
" application context."
msgstr ""
"Un complemento de servidor es un complemento estándar de QGIS Python como se"
" describe en :ref:`Developing_plugins`, que solo proporciona una interfaz "
"adicional (o alternativa): un complemento de escritorio QGIS típico tiene "
"acceso a la aplicación QGIS a través de: class:` QgisInterface <qgis. "
"gui.QgisInterface> `, un complemento de servidor solo tiene acceso a "
":class:`QgsServerInterface <qgis.server.QgsServerInterface>` cuando se "
"ejecuta dentro del contexto de la aplicación QGIS Server."

#: ../../docs/pyqgis_developer_cookbook/server.rst:315
msgid ""
"To make QGIS Server aware that a plugin has a server interface, a special "
"metadata entry is needed (in :file:`metadata.txt`)::"
msgstr ""
"Para que QGIS Server sepa que un complemento tiene una interfaz de servidor,"
" se necesita una entrada de metadatos especial (en :file:`metadata.txt`)::"

#: ../../docs/pyqgis_developer_cookbook/server.rst:322
msgid ""
"Only plugins that have the ``server=True`` metadata set will be loaded and "
"executed by QGIS Server."
msgstr ""
"QGIS Server solo cargará y ejecutará los complementos que tengan el conjunto"
" de metadatos ``server=True``."

#: ../../docs/pyqgis_developer_cookbook/server.rst:324
msgid ""
"The `qgis3-server-vagrant <https://github.com/elpaso/qgis3-server-"
"vagrant/tree/master/resources/web/plugins>`_ example plugin discussed here "
"(with many more) is available on github, a few server plugins are also "
"published in the official `QGIS plugins repository "
"<https://plugins.qgis.org/plugins/server>`_."
msgstr ""
"El complemento de ejemplo `qgis3-server-vagrant "
"<https://github.com/elpaso/qgis3-server-"
"vagrant/tree/master/resources/web/plugins>`_ discutido aquí (con muchos más)"
" está disponible en github, algunos complementos de servidor también están "
"publicados en el repositorio oficial de complementos `QGIS "
"<https://plugins.qgis.org/plugins/server>`_."

#: ../../docs/pyqgis_developer_cookbook/server.rst:329
#: ../../docs/pyqgis_developer_cookbook/server.rst:554
msgid "Plugin files"
msgstr "Archivos de complementos"

#: ../../docs/pyqgis_developer_cookbook/server.rst:331
msgid "Here's the directory structure of our example server plugin."
msgstr ""
"Aquí está la estructura de directorios de nuestro complemento de servidor de"
" ejemplo."

#: ../../docs/pyqgis_developer_cookbook/server.rst:344
#: ../../docs/pyqgis_developer_cookbook/server.rst:568
msgid "__init__.py"
msgstr "__init__.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:346
msgid ""
"This file is required by Python's import system. Also, QGIS Server requires "
"that this file contains a :func:`serverClassFactory()` function, which is "
"called when the plugin gets loaded into QGIS Server when the server starts. "
"It receives reference to instance of :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` and must return instance of your plugin's "
"class. This is how the example plugin :file:`__init__.py` looks like:"
msgstr ""
"Este archivo es requerido por el sistema de importación de Python. Además, "
"QGIS Server requiere que este archivo contenga una función "
":func:`serverClassFactory()`, que se llama cuando el complemento se carga en"
" QGIS Server cuando se inicia el servidor. Recibe una referencia a la "
"instancia de :class:`QgsServerInterface <qgis.server.QgsServerInterface>` y "
"debe devolver la instancia de la clase de su complemento. Así es como se ve "
"el complemento de ejemplo :file:`__init __. Py`:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:361
msgid "HelloServer.py"
msgstr "HelloServer.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:363
msgid ""
"This is where the magic happens and this is how magic looks like: (e.g. "
":file:`HelloServer.py`)"
msgstr ""
"Aquí es donde ocurre la magia y así es como se ve la magia: (por ejemplo "
":file:`HelloServer.py`)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:366
msgid ""
"A server plugin typically consists in one or more callbacks packed into "
"instances of a :class:`QgsServerFilter <qgis.server.QgsServerFilter>`."
msgstr ""
"Un complemento de servidor generalmente consiste en una o más devoluciones "
"de llamada empaquetadas en instancias de :class:`QgsServerFilter "
"<qgis.server.QgsServerFilter>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:369
msgid ""
"Each :class:`QgsServerFilter <qgis.server.QgsServerFilter>` implements one "
"or more of the following callbacks:"
msgstr ""
"Cada :class:`QgsServerFilter <qgis.server.QgsServerFilter>` implementa una o"
" más de las siguientes devoluciones de llamada:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:376
msgid ""
"The following example implements a minimal filter which prints "
"*HelloServer!* in case the **SERVICE** parameter equals to “HELLO”:"
msgstr ""
"El siguiente ejemplo implementa un filtro mínimo que imprime *HelloServer!* "
"En caso de que el parámetro **SERVICE** sea igual a \"HELLO\":"

#: ../../docs/pyqgis_developer_cookbook/server.rst:405
msgid ""
"The filters must be registered into the **serverIface** as in the following "
"example:"
msgstr ""
"Los filtros deben registrarse en **serverIface** como en el siguiente "
"ejemplo:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:413
msgid ""
"The second parameter of :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.registerFilter>` sets a priority which "
"defines the order for the callbacks with the same name (the lower priority "
"is invoked first)."
msgstr ""
"El segundo parámetro del método :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.registerFilter>` establece una prioridad que"
" define el orden de las devoluciones de llamada con el mismo nombre (la "
"prioridad más baja se invoca primero)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:418
msgid ""
"By using the three callbacks, plugins can manipulate the input and/or the "
"output of the server in many different ways. In every moment, the plugin "
"instance has access to the :class:`QgsRequestHandler "
"<qgis.server.QgsRequestHandler>` through the :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>`. The :class:`QgsRequestHandler "
"<qgis.server.QgsRequestHandler>` class has plenty of methods that can be "
"used to alter the input parameters before entering the core processing of "
"the server (by using :func:`requestReady`) or after the request has been "
"processed by the core services (by using :func:`sendResponse`)."
msgstr ""
"Al utilizar las tres devoluciones de llamada, los complementos pueden "
"manipular la entrada y / o la salida del servidor de muchas formas "
"diferentes. En todo momento, la instancia del complemento tiene acceso a "
":class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` a través de "
":class:`QgsServerInterface <qgis.server.QgsServerInterface>`. La clase "
":class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` tiene muchos "
"métodos que se pueden usar para modificar los parámetros de entrada antes de"
" ingresar al procesamiento central del servidor (usando "
":func:`requestReady`) o después de la solicitud ha sido procesado por los "
"servicios centrales (usando :func:`sendResponse`)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:428
msgid "The following examples cover some common use cases:"
msgstr "Los siguientes ejemplos cubren algunos casos comunes de uso:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:431
msgid "Modifying the input"
msgstr "Modificando la entrada"

#: ../../docs/pyqgis_developer_cookbook/server.rst:433
msgid ""
"The example plugin contains a test example that changes input parameters "
"coming from the query string, in this example a new parameter is injected "
"into the (already parsed) ``parameterMap``, this parameter is then visible "
"by core services (WMS etc.), at the end of core services processing we check"
" that the parameter is still there:"
msgstr ""
"El complemento de ejemplo contiene un ejemplo de prueba que cambia los "
"parámetros de entrada provenientes de la cadena de consulta, en este ejemplo"
" se inyecta un nuevo parámetro en el (ya analizado) ``parameterMap``, este "
"parámetro es visible luego por los servicios centrales (WMS, etc.) , al "
"final del procesamiento de los servicios centrales, verificamos que el "
"parámetro todavía esté allí:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:461
msgid "This is an extract of what you see in the log file:"
msgstr "Esto es un extracto de lo que puede ver en el archivo de log::"

#: ../../docs/pyqgis_developer_cookbook/server.rst:473
msgid ""
"On the highlighted line the “SUCCESS” string indicates that the plugin "
"passed the test."
msgstr ""
"En la línea resaltada, la cadena \"SUCCESS\" indica que el complemento pasó "
"la prueba."

#: ../../docs/pyqgis_developer_cookbook/server.rst:475
msgid ""
"The same technique can be exploited to use a custom service instead of a "
"core one: you could for example skip a **WFS** **SERVICE** request or any "
"other core request just by changing the **SERVICE** parameter to something "
"different and the core service will be skipped. Then you can inject your "
"custom results into the output and send them to the client (this is "
"explained below)."
msgstr ""
"La misma técnica se puede aprovechar para usar un servicio personalizado en "
"lugar de uno central: por ejemplo, podría omitir una solicitud **SERVICE** "
"**WFS** o cualquier otra solicitud principal simplemente cambiando el "
"parámetro **SERVICE** a algo diferente y se omitirá el servicio principal. "
"Luego, puede inyectar sus resultados personalizados en la salida y enviarlos"
" al cliente (esto se explica a continuación)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:483
msgid ""
"If you really want to implement a custom service it is recommended to "
"subclass :class:`QgsService <qgis.server.QgsService>` and register your "
"service on :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`"
msgstr ""
"Si realmente desea implementar un servicio personalizado, se recomienda "
"crear una subclase :class:`QgsService <qgis.server.QgsService>` y registre "
"su servicio en :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.serviceRegistry>` llamando a su método "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:489
msgid "Modifying or replacing the output"
msgstr "Modificar o reemplazar la salida"

#: ../../docs/pyqgis_developer_cookbook/server.rst:491
msgid ""
"The watermark filter example shows how to replace the WMS output with a new "
"image obtained by adding a watermark image on the top of the WMS image "
"generated by the WMS core service:"
msgstr ""
"El ejemplo del filtro de marca de agua muestra cómo reemplazar la salida de "
"WMS con una nueva imagen obtenida agregando una imagen de marca de agua en "
"la parte superior de la imagen de WMS generada por el servicio principal de "
"WMS:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:531
msgid ""
"In this example the **SERVICE** parameter value is checked and if the "
"incoming request is a **WMS** **GETMAP** and no exceptions have been set by "
"a previously executed plugin or by the core service (WMS in this case), the "
"WMS generated image is retrieved from the output buffer and the watermark "
"image is added. The final step is to clear the output buffer and replace it "
"with the newly generated image. Please note that in a real-world situation "
"we should also check for the requested image type instead of supporting PNG "
"or JPG only."
msgstr ""
"En este ejemplo, el valor del parámetro **SERVICE** se verifica y si la "
"solicitud entrante es un **WMS** **GETMAP** y no se han establecido "
"excepciones por un complemento ejecutado previamente o por el servicio "
"central (WMS en este caso), la imagen generada por WMS se recupera del búfer"
" de salida y se agrega la imagen de marca de agua. El último paso es borrar "
"el búfer de salida y reemplazarlo con la imagen recién generada. Tenga en "
"cuenta que, en una situación del mundo real, también deberíamos comprobar el"
" tipo de imagen solicitada en lugar de admitir solo PNG o JPG."

#: ../../docs/pyqgis_developer_cookbook/server.rst:540
msgid "Access control filters"
msgstr "Filtros de control de acceso"

#: ../../docs/pyqgis_developer_cookbook/server.rst:542
msgid ""
"Access control filters gives the developer a fine-grained control over which"
" layers, features and attributes can be accessed, the following callbacks "
"can be implemented in an access control filter:"
msgstr ""
"Los filtros de control de acceso brindan al desarrollador un control "
"detallado sobre las capas, características y atributos a los que se puede "
"acceder; las siguientes devoluciones de llamada se pueden implementar en un "
"filtro de control de acceso:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:546
msgid ""
":meth:`layerFilterExpression(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterExpression>`"
msgstr ""
":meth:`layerFilterExpression(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterExpression>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:547
msgid ""
":meth:`layerFilterSubsetString(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterSubsetString>`"
msgstr ""
":meth:`layerFilterSubsetString(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterSubsetString>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:548
msgid ""
":meth:`layerPermissions(layer) "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`"
msgstr ""
":meth:`layerPermissions(layer) "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:549
msgid ""
":meth:`authorizedLayerAttributes(layer, attributes) "
"<qgis.server.QgsAccessControlFilter.authorizedLayerAttributes>`"
msgstr ""
":meth:`authorizedLayerAttributes(layer, attributes) "
"<qgis.server.QgsAccessControlFilter.authorizedLayerAttributes>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:550
msgid ""
":meth:`allowToEdit(layer, feature) "
"<qgis.server.QgsAccessControlFilter.allowToEdit>`"
msgstr ""
":meth:`allowToEdit(layer, feature) "
"<qgis.server.QgsAccessControlFilter.allowToEdit>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:551
msgid ":meth:`cacheKey() <qgis.server.QgsAccessControlFilter.cacheKey>`"
msgstr ":meth:`cacheKey() <qgis.server.QgsAccessControlFilter.cacheKey>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:556
msgid "Here's the directory structure of our example plugin:"
msgstr ""
"Aquí está la estructura de directorios de nuestro complemento de ejemplo:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:570
msgid ""
"This file is required by Python's import system. As for all QGIS server "
"plugins, this file contains a :func:`serverClassFactory()` function, which "
"is called when the plugin gets loaded into QGIS Server at startup. It "
"receives a reference to an instance of :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` and must return an instance of your "
"plugin's class. This is how the example plugin :file:`__init__.py` looks "
"like:"
msgstr ""
"Este archivo es requerido por el sistema de importación de Python. Como para"
" todos los complementos del servidor QGIS, este archivo contiene una función"
" :func:`serverClassFactory ()`, que se llama cuando el complemento se carga "
"en el servidor QGIS al inicio. Recibe una referencia a una instancia de "
":class:`QgsServerInterface <qgis.server.QgsServerInterface>` y debe devolver"
" una instancia de la clase de su complemento. Así es como el complemento de "
"ejemplo :file:`__init__.py` aparece:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:587
msgid "AccessControl.py"
msgstr "AccessControl.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:626
msgid "This example gives a full access for everybody."
msgstr "Este ejemplo otorga acceso total para todos."

#: ../../docs/pyqgis_developer_cookbook/server.rst:628
msgid "It's the role of the plugin to know who is logged on."
msgstr "Es rol del complemento saber quién ha ingresado."

#: ../../docs/pyqgis_developer_cookbook/server.rst:630
msgid ""
"On all those methods we have the layer on argument to be able to customise "
"the restriction per layer."
msgstr ""
"En todos esos métodos tenemos el argumento layer on para poder personalizar "
"la restricción por capa."

#: ../../docs/pyqgis_developer_cookbook/server.rst:635
msgid "layerFilterExpression"
msgstr "layerFilterExpression"

#: ../../docs/pyqgis_developer_cookbook/server.rst:637
msgid "Used to add an Expression to limit the results."
msgstr "Permite añadir una expresión para limitar los resultados."

#: ../../docs/pyqgis_developer_cookbook/server.rst:639
#: ../../docs/pyqgis_developer_cookbook/server.rst:652
msgid ""
"For example, to limit to features where the attribute ``role`` is equal to "
"``user``."
msgstr ""
"Por ejemplo, para limitar a características donde el atributo ``role`` es "
"igual a ``user``."

#: ../../docs/pyqgis_developer_cookbook/server.rst:648
msgid "layerFilterSubsetString"
msgstr "layerFilterSubsetString"

#: ../../docs/pyqgis_developer_cookbook/server.rst:650
msgid ""
"Same than the previous but use the ``SubsetString`` (executed in the "
"database)"
msgstr ""
"Igual que el anterior pero usa el ``SubsetString`` (ejecutado en la base de "
"datos)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:661
msgid "layerPermissions"
msgstr "layerPermissions"

#: ../../docs/pyqgis_developer_cookbook/server.rst:663
msgid "Limit the access to the layer."
msgstr "Limitar el acceso a la capa."

#: ../../docs/pyqgis_developer_cookbook/server.rst:665
msgid ""
"Return an object of type :meth:`LayerPermissions() "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`, which has the "
"properties:"
msgstr ""
"Devuelve un objeto de tipo :meth:`LayerPermissions() "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`, el cuál tiene las "
"propiedades:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:668
msgid ""
":attr:`canRead "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canRead>` to see it in "
"the ``GetCapabilities`` and have read access."
msgstr ""
":attr:`canRead "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canRead>` para verlo en"
" ``GetCapabilities`` y tiene acceso de lectura."

#: ../../docs/pyqgis_developer_cookbook/server.rst:670
msgid ""
":attr:`canInsert "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canInsert>` to be able "
"to insert a new feature."
msgstr ""
":attr:`canInsert "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canInsert>` para poder "
"insertar una nueva característica."

#: ../../docs/pyqgis_developer_cookbook/server.rst:672
msgid ""
":attr:`canUpdate "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canUpdate>` to be able "
"to update a feature."
msgstr ""
":attr:`canUpdate "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canUpdate>` para ser "
"capaz de actualizar una característica."

#: ../../docs/pyqgis_developer_cookbook/server.rst:674
msgid ""
":attr:`canDelete "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canDelete>` to be able "
"to delete a feature."
msgstr ""
":attr:`canDelete "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canDelete>` para ser "
"capaz de borrar una característica."

#: ../../docs/pyqgis_developer_cookbook/server.rst:677
msgid "For example, to limit everything on read only access:"
msgstr "Por ejemplo, para limitar todo al acceso de sólo lectura:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:689
msgid "authorizedLayerAttributes"
msgstr "authorizedLayerAttributes"

#: ../../docs/pyqgis_developer_cookbook/server.rst:691
msgid "Used to limit the visibility of a specific subset of attribute."
msgstr ""
"Usado para limitar la visibilidad de un subconjunto específico de atributo."

#: ../../docs/pyqgis_developer_cookbook/server.rst:693
msgid "The argument attribute return the current set of visible attributes."
msgstr ""
"El atributo del argumento devuelve el conjunto actual de atributos visibles."

#: ../../docs/pyqgis_developer_cookbook/server.rst:695
msgid "For example, to hide the ``role`` attribute:"
msgstr "Por ejemplo, para ocultar el atributo ``role``:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:704
msgid "allowToEdit"
msgstr "allowToEdit"

#: ../../docs/pyqgis_developer_cookbook/server.rst:706
msgid "This is used to limit the editing on a subset of features."
msgstr ""
"Esto es usado para limitar la edición de un subconjunto de objetos "
"espaciales."

#: ../../docs/pyqgis_developer_cookbook/server.rst:708
msgid "It is used in the ``WFS-Transaction`` protocol."
msgstr "Se utiliza en el protocolo ``WFS-Transaction``."

#: ../../docs/pyqgis_developer_cookbook/server.rst:710
msgid ""
"For example, to be able to edit only feature that has the attribute ``role``"
" with the value ``user``:"
msgstr ""
"Por ejemplo, para poder editar sólo el objeto espacial que tiene el atributo"
" ``role`` con el valor ``user``:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:720
msgid "cacheKey"
msgstr "cacheKey"

#: ../../docs/pyqgis_developer_cookbook/server.rst:722
msgid ""
"QGIS Server maintains a cache of the capabilities then to have a cache per "
"role you can return the role in this method. Or return ``None`` to "
"completely disable the cache."
msgstr ""
"QGIS Server mantiene una caché de las capacidades entonces para tener una "
"caché por rol puedes retornar el rol en este método. O devolver ``None`` "
"para desactivar completamente la caché."

#: ../../docs/pyqgis_developer_cookbook/server.rst:728
msgid "Custom services"
msgstr "Servicios personalizados"

#: ../../docs/pyqgis_developer_cookbook/server.rst:730
msgid ""
"In QGIS Server, core services such as WMS, WFS and WCS are implemented as "
"subclasses of :class:`QgsService <qgis.server.QgsService>`."
msgstr ""
"En QGIS Server, los servicios centrales como WMS, WFS y WCS se implementan "
"como subclases de :class:`QgsService <qgis.server.QgsService>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:733
msgid ""
"To implement a new service that will be executed when the query string "
"parameter ``SERVICE`` matches the service name, you can implement your own "
":class:`QgsService <qgis.server.QgsService>` and register your service on "
"the :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`."
msgstr ""
"Para implementar un nuevo servicio que se ejecutará cuando el parámetro de "
"cadena de consulta ``SERVICE`` coincida con el nombre del servicio, puedes "
"implementar tu propio :class:`QgsService <qgis.server.QgsService>` y "
"registrar tu servicio en el :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` llamando a su "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:738
msgid "Here is an example of a custom service named ``CUSTOM``:"
msgstr "Este es un ejemplo de un servicio personalizado llamado ``CUSTOM``:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:769
msgid "Custom APIs"
msgstr "APIs personalizadas"

#: ../../docs/pyqgis_developer_cookbook/server.rst:771
msgid ""
"In QGIS Server, core OGC APIs such OAPIF (aka WFS3) are implemented as "
"collections of :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>` subclasses that are registered to an "
"instance of :class:`QgsServerOgcApi <qgis.server.QgsServerOgcApi>` (or it's "
"parent class :class:`QgsServerApi <qgis.server.QgsServerApi>`)."
msgstr ""
"En QGIS Server, las API principales de OGC como OAPIF (también conocido como"
" WFS3) se implementan como colecciones de :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>` subclases que están registradas en una"
" instancia de :class:`QgsServerOgcApi <qgspiServerOver.c >`(o su clase "
"principal :class:`QgsServerApi <qgis.server.QgsServerApi>`)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:776
msgid ""
"To implement a new API that will be executed when the url path matches a "
"certain URL, you can implement your own :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>` instances, add them to an "
":class:`QgsServerOgcApi <qgis.server.QgsServerOgcApi>` and register the API "
"on the :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerApi(api) <qgis.server.QgsServiceRegistry.registerApi>`."
msgstr ""
"Para implementar una nueva API que se ejecute cuando la ruta url coincida "
"con una determinada URL, puede implementar sus propias instancias "
":class:`QgsServerOgcApiHandler <qgis.server.QgsServerOgcApiHandler>`, "
"añadirlas a una :class:`QgsServerOgcApi <qgis. server.QgsServerOgcApi>` y "
"registrar la API en el :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` llamando a su "
":meth:`registerApi(api) <qgis.server.QgsServiceRegistry.registerApi>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:782
msgid ""
"Here is an example of a custom API that will be executed when the URL "
"contains ``/customapi``:"
msgstr ""
"A continuación, se muestra un ejemplo de una API personalizada que se "
"ejecutará cuando la URL contenga ``/customapi``:"
