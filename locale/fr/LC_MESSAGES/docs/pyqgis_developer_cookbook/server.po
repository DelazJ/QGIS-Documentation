# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Transifex Bot <>, 2024
# Harrissou Sant-anna, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: 2024-03-02 11:58+0000\n"
"Last-Translator: Harrissou Sant-anna, 2024\n"
"Language-Team: French (https://app.transifex.com/qgis/teams/6144/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"La traduction est le fruit d'un effort communautaire auquel :ref:`vous "
"pouvez vous joindre <translation_guidelines>`. Cette page est actuellement "
"traduite à |translation progress|."

#: ../../docs/pyqgis_developer_cookbook/server.rst:29
msgid "QGIS Server and Python"
msgstr "QGIS Server et Python"

#: ../../docs/pyqgis_developer_cookbook/server.rst:38
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/pyqgis_developer_cookbook/server.rst:40
msgid "To learn more about QGIS Server, read the :ref:`QGIS-Server-manual`."
msgstr ""
"Pour en savoir plus sur QGIS Server, lisez le :ref:`QGIS-Server-manual`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:42
msgid "QGIS Server is three different things:"
msgstr "QGIS Server, c'est trois choses différentes :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:44
msgid ""
"QGIS Server library: a library that provides an API for creating OGC web "
"services"
msgstr ""
"Bibliothèque QGIS Server : une bibliothèque qui fournit une API pour la "
"création de services web OGC"

#: ../../docs/pyqgis_developer_cookbook/server.rst:45
msgid ""
"QGIS Server FCGI: a FCGI binary application :file:`qgis_mapserv.fcgi` that "
"together with a web server implements a set of OGC services (WMS, WFS, WCS "
"etc.) and OGC APIs (WFS3/OAPIF)"
msgstr ""
"QGIS Server FCGI : une application binaire FCGI :file:`qgis_mapserv.fcgi` "
"qui, avec un serveur web, implémente un ensemble de services OGC (WMS, WFS, "
"WCS etc.) et d'API OGC (WFS3/OAPIF)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:48
msgid ""
"QGIS Development Server: a development server binary application "
":file:`qgis_mapserver` that implements a set of OGC services (WMS, WFS, WCS "
"etc.) and OGC APIs (WFS3/OAPIF)"
msgstr ""
"Developpement QGIS Server : une application binaire de serveur de "
"développement :file:`qgis_mapserver` qui implémente un ensemble de services "
"OGC (WMS, WFS, WCS etc.) et des API OGC (WFS3/OAPIF)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:51
msgid ""
"This chapter of the cookbook focuses on the first topic and by explaining "
"the usage of QGIS Server API it shows how it is possible to use Python to "
"extend, enhance or customize the server behavior or how to use the QGIS "
"Server API to embed QGIS server into another application."
msgstr ""
"Ce chapitre du livre de cuisine se concentre sur le premier sujet et, en "
"expliquant l'utilisation de l'API QGIS Server, il montre comment il est "
"possible d'utiliser Python pour étendre, améliorer ou personnaliser le "
"comportement du serveur ou comment utiliser l'API QGIS Server pour intégrer "
"QGIS Server dans une autre application."

#: ../../docs/pyqgis_developer_cookbook/server.rst:55
msgid ""
"There are a few different ways you can alter the behavior of QGIS Server or "
"extend its capabilities to offer new custom services or APIs, these are the "
"main scenarios you may face:"
msgstr ""
"Il existe plusieurs façons de modifier le comportement de QGIS Server ou "
"d'étendre ses capacités pour offrir de nouveaux services ou API "
"personnalisés, voici les principaux scénarios auxquels vous pouvez être "
"confrontés :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:59
msgid "EMBEDDING |rarr| Use QGIS Server API from another Python application"
msgstr ""
"EMBEDDING |rarr| Utiliser l'API QGIS Server depuis une autre application "
"Python"

#: ../../docs/pyqgis_developer_cookbook/server.rst:60
msgid "STANDALONE |rarr| Run QGIS Server as a standalone WSGI/HTTP service"
msgstr ""
"STANDALONE |rarr| Exécuter QGIS Server comme un service WSGI/HTTP autonome"

#: ../../docs/pyqgis_developer_cookbook/server.rst:61
msgid "FILTERS |rarr| Enhance/Customize QGIS Server with filter plugins"
msgstr ""
"FILTRES |rarr| Améliorer/personnaliser QGIS Server avec des plugins de "
"filtrage"

#: ../../docs/pyqgis_developer_cookbook/server.rst:62
msgid "SERVICES |rarr| Add a new *SERVICE*"
msgstr "SERVICES |rarr| Ajouter un nouveau *SERVICE*"

#: ../../docs/pyqgis_developer_cookbook/server.rst:63
msgid "OGC APIs |rarr| Add a new *OGC API*"
msgstr "OGC APIs |rarr| Ajouter une nouvelle API *OGC*"

#: ../../docs/pyqgis_developer_cookbook/server.rst:65
msgid ""
"Embedding and standalone applications require using the QGIS Server Python "
"API directly from another Python script or application. The remaining "
"options are better suited for when you want to add custom features to a "
"standard QGIS Server binary application (FCGI or development server): in "
"this case you'll need to write a Python plugin for the server application "
"and register your custom filters, services or APIs."
msgstr ""
"Les applications intégrées ou autonomes nécessitent l'utilisation de l'API "
"Python de QGIS Server directement à partir d'un autre script ou application "
"Python. Les autres options sont mieux adaptées lorsque vous souhaitez "
"ajouter des fonctionnalités personnalisées à une application binaire "
"standard de QGIS Server (FCGI ou serveur de développement) : dans ce cas, "
"vous devrez écrire un plugin Python pour l'application serveur et "
"enregistrer vos filtres, services ou API personnalisés."

#: ../../docs/pyqgis_developer_cookbook/server.rst:72
msgid "Server API basics"
msgstr "Principes de base de l'API du serveur"

#: ../../docs/pyqgis_developer_cookbook/server.rst:74
msgid ""
"The fundamental classes involved in a typical QGIS Server application are:"
msgstr ""
"Les classes fondamentales impliquées dans une application typique de QGIS "
"Server sont les suivantes :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:76
msgid ""
":class:`QgsServer <qgis.server.QgsServer>` the server instance (typically a "
"single instance for the whole application life)"
msgstr ""
":class:`QgsServer <qgis.server.QgsServer>` l'instance du serveur "
"(typiquement une seule instance pour toute la durée de vie de l'application)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:78
msgid ""
":class:`QgsServerRequest <qgis.server.QgsServerRequest>` the request object "
"(typically recreated on each request)"
msgstr ""
":class:`QgsServerRequest <qgis.server.QgsServerRequest>` l'objet de la "
"requête (généralement recréé sur chaque requête)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:80
msgid ""
":meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` processes the request and populates "
"the response"
msgstr ""
":meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` traite la requête et remplit la "
"réponse"

#: ../../docs/pyqgis_developer_cookbook/server.rst:83
msgid ""
"The QGIS Server FCGI or development server workflow can be summarized as "
"follows:"
msgstr ""
"Le flux de travail QGIS Server FCGI ou serveur de développement peut être "
"résumé comme suit :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:97
msgid ""
"Inside the :meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` method the filter plugins callbacks "
"are called and :class:`QgsServerRequest <qgis.server.QgsServerRequest>` and "
":class:`QgsServerResponse <qgis.server.QgsServerResponse>` are made "
"available to the plugins through the :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` class."
msgstr ""
"Dans la méthode :meth:`QgsServer.handleRequest(request, response) "
"<qgis.server.QgsServer.handleRequest>` les callbacks des plugins de filtre "
"sont appelés et :class:`QgsServerRequest <qgis.server. QgsServerRequest>` et"
" :class:`QgsServerResponse <qgis.server.QgsServerResponse>` sont mis à la "
"disposition des plugins par le biais de la :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:104
msgid ""
"QGIS server classes are not thread safe, you should always use a "
"multiprocessing model or containers when building scalable applications "
"based on QGIS Server API."
msgstr ""
"Les classes QGIS Server ne sont pas sûres pour les threads, vous devez "
"toujours utiliser un modèle de multitraitement ou des conteneurs lorsque "
"vous construisez des applications évolutives basées sur l'API du serveur "
"QGIS."

#: ../../docs/pyqgis_developer_cookbook/server.rst:108
msgid "Standalone or embedding"
msgstr "Autonome ou intégré"

#: ../../docs/pyqgis_developer_cookbook/server.rst:110
msgid ""
"For standalone server applications or embedding, you will need to use the "
"above mentioned server classes directly, wrapping them up into a web server "
"implementation that manages all the HTTP protocol interactions with the "
"client."
msgstr ""
"Pour les applications serveur autonomes ou integre, vous devrez utiliser "
"directement les classes de serveur mentionnées ci-dessus, en les intégrant "
"dans une implémentation de serveur web qui gère toutes les interactions du "
"protocole HTTP avec le client."

#: ../../docs/pyqgis_developer_cookbook/server.rst:115
msgid ""
"A minimal example of the QGIS Server API usage (without the HTTP part) "
"follows:"
msgstr ""
"Voici un exemple minimal d'utilisation de l'API QGIS Server (sans la partie "
"HTTP) :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:147
msgid ""
"Here is a complete standalone application example developed for the "
"continuous integrations testing on QGIS source code repository, it showcases"
" a wide set of different plugin filters and authentication schemes (not mean"
" for production because they were developed for testing purposes only but "
"still interesting for learning): :source:`qgis_wrapped_server.py "
"<tests/src/python/qgis_wrapped_server.py>`"
msgstr ""
"Voici un exemple complet d'application autonome développée pour le test "
"continu des intégrations sur le dépôt de code source de QGIS, il présente un"
" large ensemble de filtres de plugins et de schémas d'authentification "
"différents (non destinés à la production car ils ont été développés à des "
"fins de test uniquement mais toujours intéressants pour l'apprentissage) : "
":source:`qgis_wrapped_server.py <tests/src/python/qgis_wrapped_server.py>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:154
msgid "Server plugins"
msgstr "Plugins de serveur"

#: ../../docs/pyqgis_developer_cookbook/server.rst:156
msgid ""
"Server python plugins are loaded once when the QGIS Server application "
"starts and can be used to register filters, services or APIs."
msgstr ""
"Les plugins python du serveur sont chargés une fois lorsque l'application "
"QGIS Server démarre et peuvent être utilisés pour enregistrer des filtres, "
"des services ou des API."

#: ../../docs/pyqgis_developer_cookbook/server.rst:159
msgid ""
"The structure of a server plugin is very similar to their desktop "
"counterpart, a :class:`QgsServerInterface <qgis.server.QgsServerInterface>` "
"object is made available to the plugins and the plugins can register one or "
"more custom filters, services or APIs to the corresponding registry by using"
" one of the methods exposed by the server interface."
msgstr ""
"La structure d'un plugin serveur est très similaire à son homologue de "
"bureau, un objet :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` est mis à la disposition des plugins et "
"ceux-ci peuvent enregistrer un ou plusieurs filtres, services ou API "
"personnalisés dans le registre correspondant en utilisant une des méthodes "
"exposées par l'interface serveur."

#: ../../docs/pyqgis_developer_cookbook/server.rst:165
msgid "Server filter plugins"
msgstr "Plugins pour filtres de serveur"

#: ../../docs/pyqgis_developer_cookbook/server.rst:167
msgid ""
"Filters come in three different flavors and they can be instanciated by "
"subclassing one of the classes below and by calling the corresponding method"
" of :class:`QgsServerInterface <qgis.server.QgsServerInterface>`:"
msgstr ""
"Les filtres existent en trois possibilite différentes et peuvent être "
"instanciés en sous-classant l'une des classes ci-dessous et en appelant la "
"méthode correspondante de :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:174
msgid "Filter Type"
msgstr "Type de filtre"

#: ../../docs/pyqgis_developer_cookbook/server.rst:175
msgid "Base Class"
msgstr "Classe de base"

#: ../../docs/pyqgis_developer_cookbook/server.rst:176
msgid "QgsServerInterface registration"
msgstr "Enregistrement de QgsServerInterface"

#: ../../docs/pyqgis_developer_cookbook/server.rst:177
msgid "I/O"
msgstr "I/O"

#: ../../docs/pyqgis_developer_cookbook/server.rst:178
msgid ":class:`QgsServerFilter <qgis.server.QgsServerFilter>`"
msgstr ":class:`QgsServerFilter <qgis.server.QgsServerFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:179
msgid ""
":meth:`registerFilter() <qgis.server.QgsServerInterface.registerFilter>`"
msgstr ""
":meth:`registerFilter() <qgis.server.QgsServerInterface.registerFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:180
msgid "Access Control"
msgstr "Contrôle d'accès"

#: ../../docs/pyqgis_developer_cookbook/server.rst:181
msgid ":class:`QgsAccessControlFilter <qgis.server.QgsAccessControlFilter>`"
msgstr ":class:`QgsAccessControlFilter <qgis.server.QgsAccessControlFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:182
msgid ""
":meth:`registerAccessControl() "
"<qgis.server.QgsServerInterface.registerAccessControl>`"
msgstr ""
":meth:`registerAccessControl() "
"<qgis.server.QgsServerInterface.registerAccessControl>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:183
msgid "Cache"
msgstr "Cache"

#: ../../docs/pyqgis_developer_cookbook/server.rst:184
msgid ":class:`QgsServerCacheFilter <qgis.server.QgsServerCacheFilter>`"
msgstr ":class:`QgsServerCacheFilter <qgis.server.QgsServerCacheFilter>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:185
msgid ""
":meth:`registerServerCache() "
"<qgis.server.QgsServerInterface.registerServerCache>`"
msgstr ""
":meth:`registerServerCache() "
"<qgis.server.QgsServerInterface.registerServerCache>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:188
msgid "I/O filters"
msgstr "Filtres I/O"

#: ../../docs/pyqgis_developer_cookbook/server.rst:190
msgid ""
"I/O filters can modify the server input and output (the request and the "
"response) of the core services (WMS, WFS etc.) allowing to do any kind of "
"manipulation of the services workflow. It is possible for example to "
"restrict the access to selected layers, to inject an XSL stylesheet to the "
"XML response, to add a watermark to a generated WMS image and so on."
msgstr ""
"Les filtres I/O peuvent modifier l'entrée et la sortie du serveur (la "
"demande et la réponse) des services de base (WMS, WFS, etc.), ce qui permet "
"d'effectuer tout type de manipulation du flux de travail des services. Il "
"est possible, par exemple, de restreindre l'accès à des couches "
"sélectionnées, d'injecter une feuille de style XSL dans la réponse XML, "
"d'ajouter un filigrane à une image WMS générée, etc."

#: ../../docs/pyqgis_developer_cookbook/server.rst:196
msgid ""
"From this point, you might find useful a quick look to the :pyqgis:`server "
"plugins API docs <server>`."
msgstr ""
"A partir de là, il vous sera peut-être utile de jeter un coup d'oeil rapide "
"à :pyqgis:`l'API des plugins server <server>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:199
msgid "Each filter should implement at least one of three callbacks:"
msgstr "Chaque filtre doit mettre en œuvre au moins un des trois rappels :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:201
#: ../../docs/pyqgis_developer_cookbook/server.rst:372
msgid ":meth:`onRequestReady() <qgis.server.QgsServerFilter.onRequestReady>`"
msgstr ":meth:`onRequestReady() <qgis.server.QgsServerFilter.onRequestReady>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:202
#: ../../docs/pyqgis_developer_cookbook/server.rst:373
msgid ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`"
msgstr ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:203
#: ../../docs/pyqgis_developer_cookbook/server.rst:374
msgid ":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>`"
msgstr ":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:205
msgid ""
"All filters have access to the request/response object "
"(:class:`QgsRequestHandler <qgis.server.QgsRequestHandler>`) and can "
"manipulate all its properties (input/output) and raise exceptions (while in "
"a quite particular way as we’ll see below)."
msgstr ""
"Tous les filtres ont accès à l'objet requête/réponse "
"(:class:`QgsRequestHandler <qgis.server.QgsRequestHandler>`) et peuvent "
"manipuler toutes ses propriétés (entrée/sortie) et lever des exceptions "
"(mais d'une manière assez particulière comme nous le verrons plus loin)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:210
msgid ""
"All these methods return a boolean value indicating if the call should be "
"propagated to the subsequent filters. If one of these method returns "
":const:`False` then the chain stop, otherwise the call will propagate to the"
" next filter."
msgstr ""
"Toutes ces méthodes renvoient un booléen indiquant si l'appel devrait être "
"propagé aux filtres suivants. Si une de ces méthodes renvoie :const:`False` "
"alors le processus s'arrête, sinon l'appel est transféré au filtre suivant."

#: ../../docs/pyqgis_developer_cookbook/server.rst:214
msgid ""
"Here is the pseudo code showing how the server handles a typical request and"
" when the filter’s callbacks are called:"
msgstr ""
"Voici le pseudo-code montrant comment le serveur traite une requête typique "
"et quand les rappels du filtre sont appelés :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:234
msgid "The following paragraphs describe the available callbacks in details."
msgstr ""
"Les paragraphes qui suivent décrivent les fonctions de rappel disponibles en"
" détails."

#: ../../docs/pyqgis_developer_cookbook/server.rst:237
msgid "onRequestReady"
msgstr "onRequestReady"

#: ../../docs/pyqgis_developer_cookbook/server.rst:239
msgid ""
"This is called when the request is ready: incoming URL and data have been "
"parsed and before entering the core services (WMS, WFS etc.) switch, this is"
" the point where you can manipulate the input and perform actions like:"
msgstr ""
"Cette fonction est appelée lorsque la requête est prêt: l'URL entrante et "
"ses données ont été analysées et juste avant de passer la main aux services "
"principaux (WMS, WFS, etc.), c'est le point où vous pouvez manipuler "
"l'entrée et dérouler des actions telles que:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:243
msgid "authentication/authorization"
msgstr "l'authentification/l'autorisation"

#: ../../docs/pyqgis_developer_cookbook/server.rst:244
msgid "redirects"
msgstr "les redirections"

#: ../../docs/pyqgis_developer_cookbook/server.rst:245
msgid "add/remove certain parameters (typenames for example)"
msgstr ""
"l'ajout/suppression de certains paramètres (les noms de type par exemple)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:246
msgid "raise exceptions"
msgstr "le déclenchement d'exceptions"

#: ../../docs/pyqgis_developer_cookbook/server.rst:248
msgid ""
"You could even substitute a core service completely by changing **SERVICE** "
"parameter and hence bypassing the core service completely (not that this "
"make much sense though)."
msgstr ""
"Vous pouvez également substituer l'intégralité d'un service principal en "
"modifiant le paramètre **SERVICE** et complètement outrepasser le service "
"(ce qui n'a pas beaucoup d'intérêt)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:253
msgid "onSendResponse"
msgstr "onSendResponse"

#: ../../docs/pyqgis_developer_cookbook/server.rst:255
msgid ""
"This is called whenever any partial output is flushed from response buffer "
"(i.e to **FCGI** ``stdout`` if the fcgi server is used) and from there, to "
"the client. This occurs when huge content is streamed (like WFS GetFeature)."
" In this case :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` may be called multiple times."
msgstr ""
"Elle est appelée chaque fois qu'une sortie partielle est évacuée du tampon "
"de réponse (c'est-à-dire vers **FCGI** ``stdout`` si le serveur fcgi est "
"utilisé) et de là, vers le client. Cela se produit lorsque des contenus "
"volumineux sont diffusés (comme WFS GetFeature). Dans ce cas "
":meth:`onSendResponse() <qgis.server.QgsServerFilter.onSendResponse>` peut "
"être appelé plusieurs fois."

#: ../../docs/pyqgis_developer_cookbook/server.rst:260
msgid ""
"Note that if the response is not streamed, then :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` will not be called at all."
msgstr ""
"Notez que si la réponse n'est pas streamée, alors :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` ne sera pas appelée du tout."

#: ../../docs/pyqgis_developer_cookbook/server.rst:262
msgid ""
"In all case, the last (or unique) chunk will be sent to client after a call "
"to :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."
msgstr ""
"Dans tous les cas, le dernier (ou unique) paquet sera envoyé après l'appel à"
" :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:265
msgid ""
"Returning :const:`False` will prevent flushing of data to the client. This "
"is desirable when a plugin wants to collect all chunks from a response and "
"examine or change the response in :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."
msgstr ""
"Renvoyer :const:`False` empêchera l'évacuation des données vers le client. "
"Ceci est souhaitable lorsqu'une extension veut collecter tous les morceaux "
"d'une réponse et examiner ou modifier la réponse dans "
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:271
msgid "onResponseComplete"
msgstr "onResponseComplete"

#: ../../docs/pyqgis_developer_cookbook/server.rst:273
msgid ""
"This is called once when core services (if hit) finish their process and the"
" request is ready to be sent to the client. As discussed above, this method "
"will be called before the last (or unique) chunk of data is sent to the "
"client. For streaming services, multiple calls to :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` might have been called."
msgstr ""
"Il est appelé une fois lorsque les services centraux (s'ils sont touchés) "
"ont terminé leur processus et que la demande est prête à être envoyée au "
"client. Comme indiqué ci-dessus, cette méthode est appelée avant l'envoi du "
"dernier (ou unique) paquet de données au client. Pour les services de "
"streaming, plusieurs appels à :meth:`onSendResponse() "
"<qgis.server.QgsServerFilter.onSendResponse>` auraient pu être effectués."

#: ../../docs/pyqgis_developer_cookbook/server.rst:279
msgid ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` is the ideal place to "
"provide new services implementation (WPS or custom services) and to perform "
"direct manipulation of the output coming from core services (for example to "
"add a watermark upon a WMS image)."
msgstr ""
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` est l'endroit idéal pour "
"fournir l'implémentation de nouveaux services (WPS ou services "
"personnalisés) et pour effectuer une manipulation directe de la sortie "
"provenant des services de base (par exemple pour ajouter un filigrane sur "
"une image WMS)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:284
msgid ""
"Note that returning :const:`False` will prevent the next plugins to execute "
":meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` but, in any case, prevent "
"response to be sent to the client."
msgstr ""
"A noter que renvoyer :const:`False` empêchera les extensions suivantes "
"d'exécuter :meth:`onResponseComplete() "
"<qgis.server.QgsServerFilter.onResponseComplete>` mais en aucun cas, "
"n'empêchera l'envoi de la réponse au client.."

#: ../../docs/pyqgis_developer_cookbook/server.rst:290
msgid "Raising exceptions from a plugin"
msgstr "Lever les exceptions d'un plugin"

#: ../../docs/pyqgis_developer_cookbook/server.rst:292
msgid ""
"Some work has still to be done on this topic: the current implementation can"
" distinguish between handled and unhandled exceptions by setting a "
":class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` property to an "
"instance of QgsMapServiceException, this way the main C++ code can catch "
"handled python exceptions and ignore unhandled exceptions (or better: log "
"them)."
msgstr ""
"Un certain travail reste à faire sur ce sujet : l'implémentation actuelle "
"peut distinguer les exceptions gérées et non gérées en définissant une "
"propriété :class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` à une "
"instance de QgsMapServiceException, de cette façon le code C++ principal "
"peut attraper les exceptions python gérées et ignorer les exceptions non "
"gérées (ou mieux : les enregistrer)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:299
msgid ""
"This approach basically works but it is not very \"pythonic\": a better "
"approach would be to raise exceptions from python code and see them bubbling"
" up into C++ loop for being handled there."
msgstr ""
"Cette approche fonctionne globalement mais elle n'est pas très "
"\"pythonesque\": une meilleure approche consisterait à déclencher des "
"exceptions depuis le code Python et les faire remonter dans la boucle "
"principale C++ pour y être traitées."

#: ../../docs/pyqgis_developer_cookbook/server.rst:306
msgid "Writing a server plugin"
msgstr "Écriture d'une extension serveur"

#: ../../docs/pyqgis_developer_cookbook/server.rst:308
msgid ""
"A server plugin is a standard QGIS Python plugin as described in "
":ref:`developing_plugins`, that just provides an additional (or alternative)"
" interface: a typical QGIS desktop plugin has access to QGIS application "
"through the :class:`QgisInterface <qgis.gui.QgisInterface>` instance, a "
"server plugin has only access to a :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` when it is executed within the QGIS Server"
" application context."
msgstr ""
"Un plugin serveur est un plugin Python QGIS standard tel que décrit dans "
":ref:`developing_plugins`, qui fournit juste une interface supplémentaire "
"(ou alternative) : un plugin de bureau QGIS typique a accès à l'application "
"QGIS par le biais de la :class:`QgisInterface <qgis. gui.QgisInterface>`, un"
" plugin serveur a seulement accès à une :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` lorsqu'il est exécuté dans le contexte de "
"l'application QGIS Server."

#: ../../docs/pyqgis_developer_cookbook/server.rst:315
msgid ""
"To make QGIS Server aware that a plugin has a server interface, a special "
"metadata entry is needed (in :file:`metadata.txt`)::"
msgstr ""
"Pour que QGIS Server sache qu'un plugin a une interface serveur, une entrée "
"spéciale de métadonnées est nécessaire (dans :file:`metadata.txt`) :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:322
msgid ""
"Only plugins that have the ``server=True`` metadata set will be loaded and "
"executed by QGIS Server."
msgstr ""
"Seuls les plugins qui ont le jeu de métadonnées ``server=True`` seront "
"chargés et exécutés par QGIS Server."

#: ../../docs/pyqgis_developer_cookbook/server.rst:324
msgid ""
"The `qgis3-server-vagrant <https://github.com/elpaso/qgis3-server-"
"vagrant/tree/master/resources/web/plugins>`_ example plugin discussed here "
"(with many more) is available on github, a few server plugins are also "
"published in the official `QGIS plugins repository "
"<https://plugins.qgis.org/plugins/server>`_."
msgstr ""
"L'exemple de l'extension `qgis3-server-vagrant "
"<https://github.com/elpaso/qgis3-server-"
"vagrant/tree/master/resources/web/plugins>`_ discutée ici (ainsi que "
"d'autres) est disponible sur GitHub, quelques extensions pour serveur sont "
"aussi publiées sur le `dépôt officiel d'extensions de QGIS "
"<https://plugins.qgis.org/plugins/server>`_."

#: ../../docs/pyqgis_developer_cookbook/server.rst:329
#: ../../docs/pyqgis_developer_cookbook/server.rst:554
msgid "Plugin files"
msgstr "Fichiers de l'extension"

#: ../../docs/pyqgis_developer_cookbook/server.rst:331
msgid "Here's the directory structure of our example server plugin."
msgstr ""
"Vous pouvez voir ici la structure du répertoire de notre exemple d’extension"
" pour serveur."

#: ../../docs/pyqgis_developer_cookbook/server.rst:344
#: ../../docs/pyqgis_developer_cookbook/server.rst:568
msgid "__init__.py"
msgstr "__init__.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:346
msgid ""
"This file is required by Python's import system. Also, QGIS Server requires "
"that this file contains a :func:`serverClassFactory()` function, which is "
"called when the plugin gets loaded into QGIS Server when the server starts. "
"It receives reference to instance of :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` and must return instance of your plugin's "
"class. This is how the example plugin :file:`__init__.py` looks like:"
msgstr ""
"Ce fichier est requis par le système d'importation de Python. De plus, QGIS "
"Server exige que ce fichier contienne une fonction "
":func:`serverClassFactory()`, qui est appelée lorsque le plugin est chargé "
"dans QGIS Server au démarrage du serveur. Elle reçoit une référence à "
"l'instance de :class:`QgsServerInterface <qgis.server.QgsServerInterface>` "
"et doit retourner une instance de la classe de votre plugin. Voici à quoi "
"ressemble le plugin d'exemple :file:`__init__.py` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:361
msgid "HelloServer.py"
msgstr "HelloServer.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:363
msgid ""
"This is where the magic happens and this is how magic looks like: (e.g. "
":file:`HelloServer.py`)"
msgstr ""
"C'est l'endroit où tout se passe et voici à quoi il devrait ressembler : "
"(ex. :file:`HelloServer.py`)"

#: ../../docs/pyqgis_developer_cookbook/server.rst:366
msgid ""
"A server plugin typically consists in one or more callbacks packed into "
"instances of a :class:`QgsServerFilter <qgis.server.QgsServerFilter>`."
msgstr ""
"Un plugin serveur consiste généralement en un ou plusieurs callbacks "
"regroupés dans les instances d'un :class:`QgsServerFilter "
"<qgis.server.QgsServerFilter>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:369
msgid ""
"Each :class:`QgsServerFilter <qgis.server.QgsServerFilter>` implements one "
"or more of the following callbacks:"
msgstr ""
"Chaque :class:`QgsServerFilter <qgis.server.QgsServerFilter>` implémente un "
"ou plusieurs des callbacks suivants :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:376
msgid ""
"The following example implements a minimal filter which prints "
"*HelloServer!* in case the **SERVICE** parameter equals to “HELLO”:"
msgstr ""
"L'exemple qui suit implémente un filtre minimaliste qui affiche "
"*HelloServer!* pour le cas où le paramètre **SERVICE** vaut “HELLO” :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:405
msgid ""
"The filters must be registered into the **serverIface** as in the following "
"example:"
msgstr ""
"Les filtres doivent être enregistrés dans la **serverIface** comme dans "
"l'exemple suivant :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:413
msgid ""
"The second parameter of :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.registerFilter>` sets a priority which "
"defines the order for the callbacks with the same name (the lower priority "
"is invoked first)."
msgstr ""
"Le second paramètre de :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.registerFilter>` fixe une priorité qui "
"définit l'ordre des rappels ayant le même nom (la priorité la plus basse est"
" invoquée en premier)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:418
msgid ""
"By using the three callbacks, plugins can manipulate the input and/or the "
"output of the server in many different ways. In every moment, the plugin "
"instance has access to the :class:`QgsRequestHandler "
"<qgis.server.QgsRequestHandler>` through the :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>`. The :class:`QgsRequestHandler "
"<qgis.server.QgsRequestHandler>` class has plenty of methods that can be "
"used to alter the input parameters before entering the core processing of "
"the server (by using :func:`requestReady`) or after the request has been "
"processed by the core services (by using :func:`sendResponse`)."
msgstr ""
"En utilisant les trois rappels, les plugins peuvent manipuler l'entrée et/ou"
" la sortie du serveur de nombreuses manières différentes. À chaque instant, "
"l'instance du plugin a accès à la :class:`QgsRequestHandler "
"<qgis.server.QgsRequestHandler>` par le biais de la "
":class:`QgsServerInterface <qgis.server.QgsServerInterface>`. La classe "
":class:`QgsRequestHandler <qgis.server.QgsRequestHandler>` a de nombreuses "
"méthodes qui peuvent être utilisées pour modifier les paramètres d'entrée "
"avant d'entrer dans le traitement de base du serveur (en utilisant "
":func:`requestReady`) ou après que la requête ait été traitée par les "
"services de base (en utilisant :func:`sendResponse`)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:428
msgid "The following examples cover some common use cases:"
msgstr "Les exemples suivants montrent quelques cas d’utilisation courants :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:431
msgid "Modifying the input"
msgstr "Modifier la couche en entrée"

#: ../../docs/pyqgis_developer_cookbook/server.rst:433
msgid ""
"The example plugin contains a test example that changes input parameters "
"coming from the query string, in this example a new parameter is injected "
"into the (already parsed) ``parameterMap``, this parameter is then visible "
"by core services (WMS etc.), at the end of core services processing we check"
" that the parameter is still there:"
msgstr ""
"L'exemple de plugin contient un exemple de test qui modifie les paramètres "
"d'entrée provenant de la chaîne de requête, dans cet exemple un nouveau "
"paramètre est injecté dans le \"parameterMap\" (déjà analysé), ce paramètre "
"est ensuite visible par les services centraux (WMS etc.), à la fin du "
"traitement des services centraux nous vérifions que le paramètre est "
"toujours là :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:461
msgid "This is an extract of what you see in the log file:"
msgstr "Ceci est un extrait de ce que vous pouvez voir dans le fichier log:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:473
msgid ""
"On the highlighted line the “SUCCESS” string indicates that the plugin "
"passed the test."
msgstr ""
"Sur la ligne en surbrillance, la chaîne \"SUCCESS\" indique que le plugin a "
"réussi le test."

#: ../../docs/pyqgis_developer_cookbook/server.rst:475
msgid ""
"The same technique can be exploited to use a custom service instead of a "
"core one: you could for example skip a **WFS** **SERVICE** request or any "
"other core request just by changing the **SERVICE** parameter to something "
"different and the core service will be skipped. Then you can inject your "
"custom results into the output and send them to the client (this is "
"explained below)."
msgstr ""
"La même technique peut être employée pour utiliser un service personnalisé à"
" la place d'un service principal : vous pouvez par exemple sauter une "
"requête **WFS** **SERVICE** ou n'importe quelle requête principale en "
"modifiant le paramètre **SERVICE** par quelque-chose de différent et le "
"service principal ne serait alors pas lancé. Vous pourrez ensuite injecter "
"vos résultats personnalisés dans la sortie et les renvoyer au client (ceci "
"est expliqué ci-dessous)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:483
msgid ""
"If you really want to implement a custom service it is recommended to "
"subclass :class:`QgsService <qgis.server.QgsService>` and register your "
"service on :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`"
msgstr ""
"Si vous voulez vraiment implémenter un service personnalisé, il est "
"recommandé de sous-classer :class:`QgsService <qgis.server.QgsService>` et "
"d'enregistrer votre service sur :meth:`registerFilter() "
"<qgis.server.QgsServerInterface.serviceRegistry>` en appelant son "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:489
msgid "Modifying or replacing the output"
msgstr "Modifier ou remplacer la couche en sortie"

#: ../../docs/pyqgis_developer_cookbook/server.rst:491
msgid ""
"The watermark filter example shows how to replace the WMS output with a new "
"image obtained by adding a watermark image on the top of the WMS image "
"generated by the WMS core service:"
msgstr ""
"L'exemple du filtre de filigrane montre comment remplacer la sortie WMS avec"
" une nouvelle image obtenue par l'ajout d'un filigrane plaqué sur l'image "
"WMS générée par le service principal WMS:"

#: ../../docs/pyqgis_developer_cookbook/server.rst:531
msgid ""
"In this example the **SERVICE** parameter value is checked and if the "
"incoming request is a **WMS** **GETMAP** and no exceptions have been set by "
"a previously executed plugin or by the core service (WMS in this case), the "
"WMS generated image is retrieved from the output buffer and the watermark "
"image is added. The final step is to clear the output buffer and replace it "
"with the newly generated image. Please note that in a real-world situation "
"we should also check for the requested image type instead of supporting PNG "
"or JPG only."
msgstr ""
"Dans cet exemple, la valeur du paramètre **SERVICE** est vérifiée et si la "
"demande entrante est un **WMS** **GETMAP** et qu'aucune exception n'a été "
"définie par un plugin exécuté précédemment ou par le service central (WMS "
"dans ce cas), l'image générée par le WMS est récupérée dans le tampon de "
"sortie et l'image en filigrane est ajoutée. L'étape finale consiste à "
"effacer le tampon de sortie et à le remplacer par l'image nouvellement "
"générée. Veuillez noter que dans une situation réelle, nous devons également"
" vérifier le type d'image demandé au lieu de supporter uniquement les PNG ou"
" JPG."

#: ../../docs/pyqgis_developer_cookbook/server.rst:540
msgid "Access control filters"
msgstr "Filtres de contrôle d'accès"

#: ../../docs/pyqgis_developer_cookbook/server.rst:542
msgid ""
"Access control filters gives the developer a fine-grained control over which"
" layers, features and attributes can be accessed, the following callbacks "
"can be implemented in an access control filter:"
msgstr ""
"Les filtres de contrôle d'accès donnent au développeur un contrôle fin sur "
"les couches, les entités et les attributs auxquels il peut accéder, les "
"rappels suivants peuvent être mis en œuvre dans un filtre de contrôle "
"d'accès :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:546
msgid ""
":meth:`layerFilterExpression(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterExpression>`"
msgstr ""
":meth:`layerFilterExpression(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterExpression>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:547
msgid ""
":meth:`layerFilterSubsetString(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterSubsetString>`"
msgstr ""
":meth:`layerFilterSubsetString(layer) "
"<qgis.server.QgsAccessControlFilter.layerFilterSubsetString>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:548
msgid ""
":meth:`layerPermissions(layer) "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`"
msgstr ""
":meth:`layerPermissions(layer) "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:549
msgid ""
":meth:`authorizedLayerAttributes(layer, attributes) "
"<qgis.server.QgsAccessControlFilter.authorizedLayerAttributes>`"
msgstr ""
":meth:`authorizedLayerAttributes(layer, attributes) "
"<qgis.server.QgsAccessControlFilter.authorizedLayerAttributes>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:550
msgid ""
":meth:`allowToEdit(layer, feature) "
"<qgis.server.QgsAccessControlFilter.allowToEdit>`"
msgstr ""
":meth:`allowToEdit(layer, feature) "
"<qgis.server.QgsAccessControlFilter.allowToEdit>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:551
msgid ":meth:`cacheKey() <qgis.server.QgsAccessControlFilter.cacheKey>`"
msgstr ":meth:`cacheKey() <qgis.server.QgsAccessControlFilter.cacheKey>`"

#: ../../docs/pyqgis_developer_cookbook/server.rst:556
msgid "Here's the directory structure of our example plugin:"
msgstr "Voici la structure des répertoires de notre exemple de plugin :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:570
msgid ""
"This file is required by Python's import system. As for all QGIS server "
"plugins, this file contains a :func:`serverClassFactory()` function, which "
"is called when the plugin gets loaded into QGIS Server at startup. It "
"receives a reference to an instance of :class:`QgsServerInterface "
"<qgis.server.QgsServerInterface>` and must return an instance of your "
"plugin's class. This is how the example plugin :file:`__init__.py` looks "
"like:"
msgstr ""
"Ce fichier est requis par le système d'importation de Python. Comme pour "
"tous les plugins QGIS Server , ce fichier contient une fonction "
":func:`serverClassFactory()`, qui est appelée lorsque le plugin est chargé "
"dans QGIS Server au démarrage. Elle reçoit une référence à une instance de "
":class:`QgsServerInterface <qgis.server.QgsServerInterface>` et doit "
"retourner une instance de la classe de votre plugin. Voici à quoi ressemble "
"le plugin d'exemple :file:`__init__.py` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:587
msgid "AccessControl.py"
msgstr "AccessControl.py"

#: ../../docs/pyqgis_developer_cookbook/server.rst:626
msgid "This example gives a full access for everybody."
msgstr "Cet exemple donne un accès total à tout le monde."

#: ../../docs/pyqgis_developer_cookbook/server.rst:628
msgid "It's the role of the plugin to know who is logged on."
msgstr "C’est le rôle de l’extension de connaître qui est connecté dessus."

#: ../../docs/pyqgis_developer_cookbook/server.rst:630
msgid ""
"On all those methods we have the layer on argument to be able to customise "
"the restriction per layer."
msgstr ""
"Pour toutes ces méthodes nous avons la couche passée en argument afin de "
"personnaliser la restriction par couche."

#: ../../docs/pyqgis_developer_cookbook/server.rst:635
msgid "layerFilterExpression"
msgstr "layerFilterExpression"

#: ../../docs/pyqgis_developer_cookbook/server.rst:637
msgid "Used to add an Expression to limit the results."
msgstr "Utilisé pour ajouter une expression pour limiter les résultats."

#: ../../docs/pyqgis_developer_cookbook/server.rst:639
#: ../../docs/pyqgis_developer_cookbook/server.rst:652
msgid ""
"For example, to limit to features where the attribute ``role`` is equal to "
"``user``."
msgstr "Pour limiter aux entités dont l'attribut ``role`` vaut ``user``."

#: ../../docs/pyqgis_developer_cookbook/server.rst:648
msgid "layerFilterSubsetString"
msgstr "layerFilterSubsetString"

#: ../../docs/pyqgis_developer_cookbook/server.rst:650
msgid ""
"Same than the previous but use the ``SubsetString`` (executed in the "
"database)"
msgstr ""
"Comme le point précédent mais utilise ``SubsetString`` (exécuté au niveau de"
" la base de données)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:661
msgid "layerPermissions"
msgstr "layerPermissions"

#: ../../docs/pyqgis_developer_cookbook/server.rst:663
msgid "Limit the access to the layer."
msgstr "Limiter l’accès à la couche."

#: ../../docs/pyqgis_developer_cookbook/server.rst:665
msgid ""
"Return an object of type :meth:`LayerPermissions() "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`, which has the "
"properties:"
msgstr ""
"Retourne un objet de type :meth:`LayerPermissions() "
"<qgis.server.QgsAccessControlFilter.layerPermissions>`, qui a les propriétés"
" :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:668
msgid ""
":attr:`canRead "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canRead>` to see it in "
"the ``GetCapabilities`` and have read access."
msgstr ""
":attr:`canRead "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canRead>` voir dans le "
"``GetCapabilities`` et acces lecture seule."

#: ../../docs/pyqgis_developer_cookbook/server.rst:670
msgid ""
":attr:`canInsert "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canInsert>` to be able "
"to insert a new feature."
msgstr ""
":attr:`canInsert "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canInsert>` pour "
"pouvoir insérer une nouvelle entité ."

#: ../../docs/pyqgis_developer_cookbook/server.rst:672
msgid ""
":attr:`canUpdate "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canUpdate>` to be able "
"to update a feature."
msgstr ""
":attr:`canUpdate "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canUpdate>` pour "
"pouvoir mettre à jour une entité."

#: ../../docs/pyqgis_developer_cookbook/server.rst:674
msgid ""
":attr:`canDelete "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canDelete>` to be able "
"to delete a feature."
msgstr ""
":attr:`canDelete "
"<qgis.server.QgsAccessControlFilter.LayerPermissions.canDelete>` pour "
"pouvoir supprimer une entité."

#: ../../docs/pyqgis_developer_cookbook/server.rst:677
msgid "For example, to limit everything on read only access:"
msgstr "Par exemple, pour tout limiter à un accès en lecture seule."

#: ../../docs/pyqgis_developer_cookbook/server.rst:689
msgid "authorizedLayerAttributes"
msgstr "authorizedLayerAttributes"

#: ../../docs/pyqgis_developer_cookbook/server.rst:691
msgid "Used to limit the visibility of a specific subset of attribute."
msgstr ""
"Utilisé pour limiter la visibilité d'un sous-groupe d'attribut spécifique."

#: ../../docs/pyqgis_developer_cookbook/server.rst:693
msgid "The argument attribute return the current set of visible attributes."
msgstr ""
"L'argument attributes renvoie la liste des attributs réellement visibles."

#: ../../docs/pyqgis_developer_cookbook/server.rst:695
msgid "For example, to hide the ``role`` attribute:"
msgstr "Par exemple, pour cacher l'attribut ``role`` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:704
msgid "allowToEdit"
msgstr "allowToEdit"

#: ../../docs/pyqgis_developer_cookbook/server.rst:706
msgid "This is used to limit the editing on a subset of features."
msgstr "Il permet de limiter l'édition à un sous-ensemble d'entités."

#: ../../docs/pyqgis_developer_cookbook/server.rst:708
msgid "It is used in the ``WFS-Transaction`` protocol."
msgstr "Il est utilisé dans le protocole ``WFS-Transaction``."

#: ../../docs/pyqgis_developer_cookbook/server.rst:710
msgid ""
"For example, to be able to edit only feature that has the attribute ``role``"
" with the value ``user``:"
msgstr ""
"Par exemple, pour limiter l'édition aux entités dont l'attribut ``role`` "
"contient la valeur ``user`` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:720
msgid "cacheKey"
msgstr "cacheKey"

#: ../../docs/pyqgis_developer_cookbook/server.rst:722
msgid ""
"QGIS Server maintains a cache of the capabilities then to have a cache per "
"role you can return the role in this method. Or return ``None`` to "
"completely disable the cache."
msgstr ""
"QGIS Server conserve un cache des capabilités donc pour avoir un cache par "
"rôle vous pouvez retourner le rôle dans cette méthode. Ou retourner ``None``"
" pour complètement désactiver le cache."

#: ../../docs/pyqgis_developer_cookbook/server.rst:728
msgid "Custom services"
msgstr "Services personnalisés"

#: ../../docs/pyqgis_developer_cookbook/server.rst:730
msgid ""
"In QGIS Server, core services such as WMS, WFS and WCS are implemented as "
"subclasses of :class:`QgsService <qgis.server.QgsService>`."
msgstr ""
"Dans QGIS Server, les services de base tels que WMS, WFS et WCS sont "
"implémentés en tant que sous-classes de :class:`QgsService "
"<qgis.server.QgsService>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:733
msgid ""
"To implement a new service that will be executed when the query string "
"parameter ``SERVICE`` matches the service name, you can implement your own "
":class:`QgsService <qgis.server.QgsService>` and register your service on "
"the :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`."
msgstr ""
"Pour implémenter un nouveau service qui sera exécuté lorsque le paramètre de"
" la chaîne de requête ``SERVICE`` correspondra au nom du service, vous "
"pouvez implémenter votre propre :class:`QgsService <qgis.server.QgsService>`"
" et enregistrer votre service sur le :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` en appelant son "
":meth:`registerService(service) "
"<qgis.server.QgsServiceRegistry.registerService>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:738
msgid "Here is an example of a custom service named ``CUSTOM``:"
msgstr "Voici un exemple d'un service personnalisé appelé ``CUSTOM`` :"

#: ../../docs/pyqgis_developer_cookbook/server.rst:769
msgid "Custom APIs"
msgstr "API personnalisées"

#: ../../docs/pyqgis_developer_cookbook/server.rst:771
msgid ""
"In QGIS Server, core OGC APIs such OAPIF (aka WFS3) are implemented as "
"collections of :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>` subclasses that are registered to an "
"instance of :class:`QgsServerOgcApi <qgis.server.QgsServerOgcApi>` (or it's "
"parent class :class:`QgsServerApi <qgis.server.QgsServerApi>`)."
msgstr ""
"Dans QGIS Server, les API OGC de base telles que OAPIF (alias WFS3) sont "
"implémentées sous forme de collections de :class:`QgsServerOgcApiHandler "
"<qgis.server. QgsServerOgcApiHandler>` sous-classes qui sont enregistrées "
"dans une instance de :class:`QgsServerOgcApi <qgis.server.QgsServerOgcApi>` "
"(ou sa classe parente :class:`QgsServerApi <qgis.server.QgsServerApi>`)."

#: ../../docs/pyqgis_developer_cookbook/server.rst:776
msgid ""
"To implement a new API that will be executed when the url path matches a "
"certain URL, you can implement your own :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>` instances, add them to an "
":class:`QgsServerOgcApi <qgis.server.QgsServerOgcApi>` and register the API "
"on the :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` by calling its "
":meth:`registerApi(api) <qgis.server.QgsServiceRegistry.registerApi>`."
msgstr ""
"Pour implémenter une nouvelle API qui sera exécutée lorsque le chemin de "
"l'URL correspondra à une certaine URL, vous pouvez implémenter vos propres "
"instances :class:`QgsServerOgcApiHandler "
"<qgis.server.QgsServerOgcApiHandler>`, les ajouter à une instance "
":class:`QgsServerOgcApi <qgis. server.QgsServerOgcApi>` et enregistrer l'API"
" sur le :meth:`serviceRegistry() "
"<qgis.server.QgsServerInterface.serviceRegistry>` en appelant son "
":meth:`registerApi(api) <qgis.server.QgsServiceRegistry.registerApi>`."

#: ../../docs/pyqgis_developer_cookbook/server.rst:782
msgid ""
"Here is an example of a custom API that will be executed when the URL "
"contains ``/customapi``:"
msgstr ""
"Voici un exemple d'API personnalisée qui sera exécutée lorsque l'URL "
"contient \"/customapi\" :"
