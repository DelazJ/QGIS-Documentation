# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Harrissou Sant-anna, 2024
# fairtommy <fairtommy@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: 2024-03-02 11:58+0000\n"
"Last-Translator: fairtommy <fairtommy@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/qgis/teams/6144/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"翻訳は :ref:`あなたが参加できる <translation_guidelines>`  コミュニティの取り組みです。このページは現在 "
"|translation progress| 翻訳されています。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:14
msgid "Loading Projects"
msgstr "プロジェクトをロードする"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:16
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr "pyqgisコンソールを使わない場合、このページにあるコードスニペットは次のインポートが必要です:"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:35
msgid ""
"Sometimes you need to load an existing project from a plugin or (more often)"
" when developing a standalone QGIS Python application (see: "
":ref:`pythonapplications`)."
msgstr ""
"プラグインや、スタンドアローンのQGIS Pythonアプリケーションから、既存のプロジェクトをロードする必要のあることがあります（参照： "
":ref:`pythonapplications` ）。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:42
msgid ""
"To load a project into the current QGIS application you need to create an "
"instance of the :class:`QgsProject <qgis.core.QgsProject>` class. This is a "
"singleton class, so you must use its :meth:`instance() "
"<qgis.core.QgsProject.instance>` method to do it. You can call its "
":meth:`read() <qgis.core.QgsProject.read>` method, passing the path of the "
"project to be loaded:"
msgstr ""
"プロジェクトを現在のQGISアプリケーションにロードするには、 :class:`QgsProject <qgis.core.QgsProject>` "
"クラスのインスタンスを作成する必要があります。これはシングルトンクラスなので、それを行うには :meth:`instance() "
"<qgis.core.QgsProject.instance>` メソッドを使わなければなりません。  :meth:`read() "
"<qgis.core.QgsProject.read>` メソッドを呼び出して、読み込むプロジェクトのパスを渡すことができます。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:67
msgid ""
"If you need to make modifications to the project (for example to add or "
"remove some layers) and save your changes, call the :meth:`write() "
"<qgis.core.QgsProject.write>` method of your project instance. The "
":meth:`write() <qgis.core.QgsProject.write>` method also accepts an optional"
" path for saving the project to a new location:"
msgstr ""
"プロジェクトに変更（たとえばレイヤの追加や削除）を加え、その変更を保存する必要がある場合は、プロジェクトインスタンスの :meth:`write() "
"<qgis.core.QgsProject.write>` メソッドを呼び出します。 :meth:`write() "
"<qgis.core.QgsProject.write>` メソッドにパスを指定すれば、プロジェクトを新しい場所に保存することもできます。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:79
msgid ""
"Both :meth:`read() <qgis.core.QgsProject.read>` and :meth:`write() "
"<qgis.core.QgsProject.write>` functions return a boolean value that you can "
"use to check if the operation was successful."
msgstr ""
":meth:`read() <qgis.core.QgsProject.read>` と :meth:`write() "
"<qgis.core.QgsProject.write>` の両方の関数は操作が成功したかどうかをチェックするために使用できるブール値を返します。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:85
msgid ""
"If you are writing a QGIS standalone application, in order to synchronise "
"the loaded project with the canvas you need to instantiate a "
":class:`QgsLayerTreeMapCanvasBridge <qgis.gui.QgsLayerTreeMapCanvasBridge>` "
"as in the example below:"
msgstr ""
"QGISスタンドアロンアプリケーションを作成している場合は、ロードされたプロジェクトをキャンバスと同期させるために、 "
":class:`QgsLayerTreeMapCanvasBridge <qgis.gui.QgsLayerTreeMapCanvasBridge>` "
"を以下の例のようにインスタンス化する必要があります::"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:97
msgid "Resolving bad paths"
msgstr "正しくないパスを解決する"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:99
msgid ""
"It can happen that layers loaded in the project are moved to another "
"location. When the project is loaded again all the layer paths are broken. "
"The :class:`QgsPathResolver <qgis.core.QgsPathResolver>` class helps you "
"rewrite layers path within the project."
msgstr ""
"プロジェクトにロードされたレイヤが別の場所に移動されることがあります。プロジェクトが再びロードされたとき、全てのレイヤのパスが壊れてしまいます。:class:`QgsPathResolver"
" <qgis.core.QgsPathResolver>` クラスは、プロジェクト内のレイヤパスを書き換える手助けをします。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:104
msgid ""
"Its :meth:`setPathPreprocessor() "
"<qgis.core.QgsPathResolver.setPathPreprocessor>` method allows setting a "
"custom path pre-processor function to manipulate paths and data sources "
"prior to resolving them to file references or layer sources."
msgstr ""
":meth:`setPathPreprocessor() "
"<qgis.core.QgsPathResolver.setPathPreprocessor>` "
"メソッドは、ファイル参照やレイヤソースのパスやデータソースを解決する前にそれを操作する、カスタムパスプリプロセッサ関数を設定することを可能にします。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:109
msgid ""
"The processor function must accept a single string argument (representing "
"the original file path or data source) and return a processed version of "
"this path. The path pre-processor function is called **before** any bad "
"layer handler. If multiple preprocessors are set, they will be called in "
"sequence based on the order in which they were originally set."
msgstr ""
"プロセッサ関数は、1つの文字列引数（元のファイルパスまたはデータソースを表す）を受け取り、このパスの処理済みバージョンを返します。パスプリプロセッサ関数は、不正レイヤハンドラの"
" **前に** 呼ばれます。複数のプリプロセッサが設定されている場合、それらは最初に設定された順序に基づいて順番に呼び出されます。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:115
msgid "Some use cases:"
msgstr "使用例："

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:117
msgid "replace an outdated path:"
msgstr "旧パスを置き換え："

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:126
msgid "replace a database host address with a new one:"
msgstr "データベースのホストアドレスを新しいもので置き換え："

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:135
msgid "replace stored database credentials with new ones:"
msgstr "保存されているデータベースのクレデンシャルを新しいものに置き換え："

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:146
msgid ""
"Likewise, a :meth:`setPathWriter() "
"<qgis.core.QgsPathResolver.setPathWriter>` method is available for a path "
"writer function."
msgstr ""
"同様に、パスライタ機能として :meth:`setPathWriter() "
"<qgis.core.QgsPathResolver.setPathWriter>` メソッドが利用可能です。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:149
msgid "An example to replace the path with a variable:"
msgstr "パスを変数で置き換える例:"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:158
msgid ""
"Both methods return an ``id`` that can be used to remove the pre-processor "
"or writer they added. See :meth:`removePathPreprocessor() "
"<qgis.core.QgsPathResolver.removePathPreprocessor>` and "
":meth:`removePathWriter() <qgis.core.QgsPathResolver.removePathWriter>`."
msgstr ""
"どちらのメソッドも ``id`` "
"を返し、追加されたプリプロセッサやライタを削除するために使うことができます。:meth:`removePathPreprocessor() "
"<qgis.core.QgsPathResolver.removePathPreprocessor>` と "
":meth:`removePathWriter() <qgis.core.QgsPathResolver.removePathWriter>` "
"を参照してください。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:165
msgid "Using flags to speed up things"
msgstr "フラグで速度を向上させる"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:167
msgid ""
"In some instances where you may not need to use a fully functional project, "
"but only want to access it for a specific reason, flags may be helpful. A "
"full list of flags is available under :class:`ProjectReadFlag "
"<qgis.core.Qgis.ProjectReadFlag>`. Multiple flags can be added together."
msgstr ""
"完全に機能するプロジェクトを使う必要はなく、特定の理由でのみアクセスしたい場合、フラグを使うと便利な場合があります。フラグの完全なリストは "
":class:`ProjectReadFlag <qgis.core.Qgis.ProjectReadFlag>` "
"の下にあります。複数のフラグを一緒に追加することができます。"

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:171
msgid ""
"As an example, if we do not care about actual layers and data and simply "
"want to access a project (e.g. for layout or 3D view settings), we can use "
"``DontResolveLayers`` flag to bypass the data validation step and prevent "
"the bad layer dialog from appearing. The following can be done:"
msgstr ""
"例として、実際のレイヤやデータを気にせず、単にプロジェクトにアクセスしたい場合（例 "
"レイアウトや3Dビューの設定など）、``DontResolveLayers`` "
"フラグを使ってデータ検証ステップをバイパスし、不良レイヤダイアログが表示されないようにすることができます。次のようにすることができます："

#: ../../docs/pyqgis_developer_cookbook/loadproject.rst:183
msgid "To add more flags the python Bitwise OR operator (``|``) must be used."
msgstr "さらにフラグを追加するには、PythonのBitwise OR演算子(``|``)を使用する必要があります。"
