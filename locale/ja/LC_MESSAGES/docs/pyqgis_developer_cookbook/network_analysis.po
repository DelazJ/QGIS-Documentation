# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Harrissou Sant-anna, 2024
# fairtommy <fairtommy@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: 2024-03-02 11:58+0000\n"
"Last-Translator: fairtommy <fairtommy@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/qgis/teams/6144/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"翻訳は :ref:`あなたが参加できる <translation_guidelines>`  コミュニティの取り組みです。このページは現在 "
"|translation progress| 翻訳されています。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:18
msgid "Network analysis library"
msgstr "ネットワーク分析ライブラリ"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:20
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr "pyqgisコンソールを使わない場合、このページにあるコードスニペットは次のインポートが必要です:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:34
msgid "The network analysis library can be used to:"
msgstr "ネットワーク分析ライブラリは次のことに使われます:"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:36
msgid ""
"create mathematical graph from geographical data (polyline vector layers)"
msgstr "地理データ（ポリライン・ベクタレイヤ）から数学的グラフを作る "

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:37
msgid ""
"implement basic methods from graph theory (currently only Dijkstra's "
"algorithm)"
msgstr "グラフ理論の基本的な手法を実装する（現在はダイクストラ法のみ）"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:40
msgid ""
"The network analysis library was created by exporting basic functions from "
"the RoadGraph core plugin and now you can use it's methods in plugins or "
"directly from the Python console."
msgstr ""
"ネットワーク分析ライブラリはRoadGraphコアプラグインから基本機能をエクスポートすることによって作成されました。今はそのメソッドをプラグインで、またはPythonのコンソールから直接使用できます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:45
msgid "General information"
msgstr "一般情報"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:47
msgid "Briefly, a typical use case can be described as:"
msgstr "手短に言えば、一般的なユースケースは、次のように記述できます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:49
msgid "create graph from geodata (usually polyline vector layer)"
msgstr "地理データから地理的なグラフ（たいていはポリラインベクタレイヤ）を作成する"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:50
msgid "run graph analysis"
msgstr "グラフ分析を実行する"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:51
msgid "use analysis results (for example, visualize them)"
msgstr "分析結果を利用する（例えば、その可視化）"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:54
msgid "Building a graph"
msgstr "グラフを構築する"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:56
msgid ""
"The first thing you need to do --- is to prepare input data, that is to "
"convert a vector layer into a graph. All further actions will use this "
"graph, not the layer."
msgstr ""
"最初にする必要がある事は --- "
"入力データを準備すること、つまりベクタレイヤをグラフに変換することです。これからのすべての操作は、レイヤではなく、このグラフを使用します。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:60
msgid ""
"As a source we can use any polyline vector layer. Nodes of the polylines "
"become graph vertexes, and segments of the polylines are graph edges. If "
"several nodes have the same coordinates then they are the same graph vertex."
" So two lines that have a common node become connected to each other."
msgstr ""
"ソースとしてどんなポリラインベクタレイヤも使用できます。ポリラインの頂点は、グラフの頂点となり、ポリラインのセグメントは、グラフの辺です。いくつかのノードが同じ座標を持っている場合、それらは同じグラフの頂点です。だから共通のノードを持つ2つの線は互いに接続しています。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:65
msgid ""
"Additionally, during graph creation it is possible to \"fix\" (\"tie\") to "
"the input vector layer any number of additional points. For each additional "
"point a match will be found --- the closest graph vertex or closest graph "
"edge. In the latter case the edge will be split and a new vertex added."
msgstr ""
"さらに、グラフの作成時には、入力ベクタレイヤに好きな数だけ追加の点を「固定する」（「結びつける」）ことが可能です。追加の点それぞれについて、対応箇所"
"---最も近いグラフの頂点または最も近いグラフの辺、が探し出されます。後者の場合、辺は分割されて新しい頂点が追加されるでしょう。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:70
msgid ""
"Vector layer attributes and length of an edge can be used as the properties "
"of an edge."
msgstr "ベクタレイヤ属性と辺の長さは、辺のプロパティとして使用できます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:73
msgid ""
"Converting from a vector layer to the graph is done using the `Builder "
"<https://en.wikipedia.org/wiki/Builder_pattern>`_ programming pattern. A "
"graph is constructed using a so-called Director. There is only one Director "
"for now: :class:`QgsVectorLayerDirector "
"<qgis.analysis.QgsVectorLayerDirector>`. The director sets the basic "
"settings that will be used to construct a graph from a line vector layer, "
"used by the builder to create the graph. Currently, as in the case with the "
"director, only one builder exists: :class:`QgsGraphBuilder "
"<qgis.analysis.QgsGraphBuilder>`, that creates :class:`QgsGraph "
"<qgis.analysis.QgsGraph>` objects. You may want to implement your own "
"builders that will build a graph compatible with such libraries as `BGL "
"<https://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ or "
"`NetworkX <https://networkx.org/>`_."
msgstr ""
"ベクタレイヤからグラフへの変換は、`Builder <https://en.wikipedia.org/wiki/Builder_pattern>`_ "
"プログラミングパターンを使って行われます。グラフはいわゆるDirectorを使って構築されます。今のところDirectorは1つしかありません: "
":class:`QgsVectorLayerDirector "
"<qgis.analysis.QgsVectorLayerDirector>`。ディレクタは、ビルダがラインベクタレイヤからグラフを作るのに使う基本的な設定を行います。現在のところ、ディレクタと同様に、ビルダは1つしかありません:"
" :class:`QgsGraphBuilder <qgis.analysis.QgsGraphBuilder>` で、 "
":class:`QgsGraph <qgis.analysis.QgsGraph>` オブジェクトを作成します。BGL "
"<https://www.boost.org/doc/libs/1_48_0/libs/graph/doc/index.html>`_ や "
"`NetworkX <https://networkx.org/>`_ "
"などのライブラリと互換性のあるグラフを構築する独自のビルダを実装することもできます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:86
msgid ""
"To calculate edge properties the programming pattern `strategy "
"<https://en.wikipedia.org/wiki/Strategy_pattern>`_ is used. For now only "
":class:`QgsNetworkDistanceStrategy "
"<qgis.analysis.QgsNetworkDistanceStrategy>` strategy (that takes into "
"account the length of the route) and :class:`QgsNetworkSpeedStrategy "
"<qgis.analysis.QgsNetworkSpeedStrategy>` (that also considers the speed) are"
" availabile. You can implement your own strategy that will use all necessary"
" parameters. For example, RoadGraph plugin uses a strategy that computes "
"travel time using edge length and speed value from attributes."
msgstr ""
"辺のプロパティを計算するために、プログラミングパターン `strategy "
"<https://en.wikipedia.org/wiki/Strategy_pattern>`_ が使用されます。今のところ（経路の長さを考慮する）"
" :class:`QgsNetworkDistanceStrategy "
"<qgis.analysis.QgsNetworkDistanceStrategy>` "
"戦略と（速度も考慮する）:class:`QgsNetworkSpeedStrategy "
"<qgis.analysis.QgsNetworkSpeedStrategy>` "
"戦略のみが利用可能です。すべての必要なパラメータを使用する独自の戦略を実装することができます。例えば、RoadGraphプラグインでは、属性から辺の長さと速度の値を使用して移動時間を計算する戦略を使用しています。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:95
msgid "It's time to dive into the process."
msgstr "では手順に行きましょう。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:97
msgid "First of all, to use this library we should import the analysis module"
msgstr "まず、このライブラリを使うには、解析モジュールをインポートする必要があります"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:103
msgid "Then some examples for creating a director"
msgstr "それからディレクタを作成するためのいくつかの例"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:119
msgid ""
"To construct a director, we should pass a vector layer that will be used as "
"the source for the graph structure and information about allowed movement on"
" each road segment (one-way or bidirectional movement, direct or reverse "
"direction). The call looks like this"
msgstr ""
"ディレクタを構築するには、グラフ構造のソースとなるベクタレイヤと、各道路セグメントで許容される移動に関する情報（一方通行か双方向移動か、直進か逆走か）を渡す必要があります。呼び出しは次のようになります"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:133
msgid "And here is full list of what these parameters mean:"
msgstr "そして、ここでこれらのパラメータは何を意味するかの完全なリストは以下のとおりです： "

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:135
msgid "``vectorLayer`` --- vector layer used to build the graph"
msgstr "``vectorLayer`` --- グラフを作るのに使われるベクタレイヤ"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:136
msgid ""
"``directionFieldId`` --- index of the attribute table field, where "
"information about roads direction is stored. If ``-1``, then don't use this "
"info at all. An integer."
msgstr ""
"``directionFieldId`` ---道路の方向に関する情報が格納されている属性テーブルのフィールドのインデックス。 ``-1`` "
"ならこの情報をまったく使用されません。整数。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:139
msgid ""
"``directDirectionValue`` --- field value for roads with direct direction "
"(moving from first line point to last one). A string."
msgstr "``directDirectionValue`` ---順方向の道路（線の最初の点から最後の点へ移動）のフィールド値。文字列。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:141
msgid ""
"``reverseDirectionValue`` --- field value for roads with reverse direction "
"(moving from last line point to first one). A string."
msgstr "``reverseDirectionValue`` ---逆方向の道路（線の最後の点から最初の点へ移動）のフィールド値。文字列。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:143
msgid ""
"``bothDirectionValue`` --- field value for bidirectional roads (for such "
"roads we can move from first point to last and from last to first). A "
"string."
msgstr ""
"``bothDirectionValue`` "
"---双方向道路（最初の点から最後の点まで、且つ、最後の点から最初の点まで移動できるような道路）のフィールド値。文字列。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:145
msgid ""
"``defaultDirection`` --- default road direction. This value will be used for"
" those roads where field ``directionFieldId`` is not set or has some value "
"different from any of the three values specified above. Possible values are:"
msgstr ""
"``defaultDirection`` --- デフォルトの道路の方向。この値はフィールド ``directionFieldId`` "
"が設定されていない、または上記の3つの値のいずれとも異なる値を持つ道路に使用されます。設定可能な値は以下の通りです："

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:149
msgid ""
":attr:`QgsVectorLayerDirector.DirectionForward "
"<qgis.analysis.QgsVectorLayerDirector.DirectionForward>` --- One-way direct"
msgstr ""
":attr:`QgsVectorLayerDirector.DirectionForward "
"<qgis.analysis.QgsVectorLayerDirector.DirectionForward>` --- 一方向順方向"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:150
msgid ""
":attr:`QgsVectorLayerDirector.DirectionBackward "
"<qgis.analysis.QgsVectorLayerDirector.DirectionBackward>` --- One-way "
"reverse"
msgstr ""
":attr:`QgsVectorLayerDirector.DirectionBackward "
"<qgis.analysis.QgsVectorLayerDirector.DirectionBackward>` --- 一方向逆方向"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:151
msgid ""
":attr:`QgsVectorLayerDirector.DirectionBoth "
"<qgis.analysis.QgsVectorLayerDirector.DirectionBoth>` --- Two-way"
msgstr ""
":attr:`QgsVectorLayerDirector.DirectionBoth "
"<qgis.analysis.QgsVectorLayerDirector.DirectionBoth>` --- 両方向"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:154
msgid ""
"It is necessary then to create a strategy for calculating edge properties"
msgstr "それから、辺のプロパティを計算するための戦略を作成することが必要です"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:166
msgid "And tell the director about this strategy"
msgstr "そして、ディレクタにこの戦略について教えます"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:173
msgid ""
"Now we can use the builder, which will create the graph. The "
":class:`QgsGraphBuilder <qgis.analysis.QgsGraphBuilder>` class constructor "
"takes several arguments:"
msgstr ""
"これでグラフを作成するビルダを使うことができます。:class:`QgsGraphBuilder "
"<qgis.analysis.QgsGraphBuilder>` クラスのコンストラクタはいくつかの引数を取ります："

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:176
msgid "``crs`` --- coordinate reference system to use. Mandatory argument."
msgstr "``crs`` --- 使用する座標参照系。必須引数。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:177
msgid ""
"``otfEnabled`` --- use \"on the fly\" reprojection or no. By default "
":const:`True` (use OTF)."
msgstr ""
"``otfEnabled`` --- 「オンザフライ」再投影を使用するかどうか。デフォルトは :const:`True` （OTFを使う）。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:179
msgid "``topologyTolerance`` --- topological tolerance. Default value is 0."
msgstr "``topologyTolerance`` --- トポロジの許容範囲。デフォルト値は 0。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:180
msgid "``ellipsoidID`` --- ellipsoid to use. By default \"WGS84\"."
msgstr "``ellipsoidID`` --- 使用する楕円体。デフォルトは \"WGS84\"。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:187
msgid ""
"Also we can define several points, which will be used in the analysis. For "
"example"
msgstr "分析に使用されるいくつかの点を定義することもできます。例えば"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:195
msgid ""
"Now all is in place so we can build the graph and \"tie\" these points to it"
msgstr "これですべてが整いましたので、グラフを構築し、それにこれらの点を「結びつける」ことができます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:201
msgid ""
"Building the graph can take some time (which depends on the number of "
"features in a layer and layer size). ``tiedPoints`` is a list with "
"coordinates of \"tied\" points. When the build operation is finished we can "
"get the graph and use it for the analysis"
msgstr ""
"グラフを構築するには（レイヤ中の地物数とレイヤの大きさに応じて）いくらか時間がかかることがあります。 ``tiedPoints`` "
"は「結びつけられた」点の座標を持つリストです。ビルド操作が完了するとグラフが得られ、それを分析のために使用できます"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:210
msgid "With the next code we can get the vertex indexes of our points"
msgstr "次のコードで、点の頂点インデックスを取得できます"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:219
msgid "Graph analysis"
msgstr "グラフ分析"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:221
msgid ""
"Networks analysis is used to find answers to two questions: which vertexes "
"are connected and how to find a shortest path. To solve these problems the "
"network analysis library provides Dijkstra's algorithm."
msgstr ""
"ネットワーク分析はこの二つの質問に対する答えを見つけるために使用されます：どの頂点が接続されているか、どのように最短経路を検索するか。これらの問題を解決するため、ネットワーク解析ライブラリではダイクストラのアルゴリズムを提供しています。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:225
msgid ""
"Dijkstra's algorithm finds the shortest route from one of the vertexes of "
"the graph to all the others and the values of the optimization parameters. "
"The results can be represented as a shortest path tree."
msgstr ""
"ダイクストラ法は、グラフの１つの頂点から他のすべての頂点への最短ルートおよび最適化パラメーターの値を見つけます。結果は、最短経路木として表現できます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:229
msgid ""
"The shortest path tree is a directed weighted graph (or more precisely a "
"tree) with the following properties:"
msgstr "最短経路木は、以下の性質を持つ有向加重グラフ（より正確には木）です："

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:232
msgid "only one vertex has no incoming edges — the root of the tree"
msgstr "流入する辺がない頂点が1つだけあります - 木の根"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:233
msgid "all other vertexes have only one incoming edge"
msgstr "他のすべての頂点には流入する辺が１つだけあります"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:234
msgid ""
"if vertex B is reachable from vertex A, then the path from A to B is the "
"single available path and it is optimal (shortest) on this graph"
msgstr "頂点Bが頂点Aから到達可能である場合、このグラフ上のAからBへの経路は、単一の利用可能な経路であり、それは最適（最短）です"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:237
msgid ""
"To get the shortest path tree use the methods :meth:`shortestTree() "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` and :meth:`dijkstra() "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` of the :class:`QgsGraphAnalyzer "
"<qgis.analysis.QgsGraphAnalyzer>` class. It is recommended to use the "
":meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` method because "
"it works faster and uses memory more efficiently."
msgstr ""
"最短経路木を得るには :class:`QgsGraphAnalyzer <qgis.analysis.QgsGraphAnalyzer>` クラスの "
":meth:`shortestTree() <qgis.analysis.QgsGraphAnalyzer.shortestTree>` と "
":meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを使用します。:meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを使用することを推奨します。なぜなら、このメソッドはより速く動作し、より効率的にメモリを使用するからです。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:244
msgid ""
"The :meth:`shortestTree() <qgis.analysis.QgsGraphAnalyzer.shortestTree>` "
"method is useful when you want to walk around the shortest path tree. It "
"always creates a new graph object (QgsGraph) and accepts three variables:"
msgstr ""
":meth:`shortestTree() <qgis.analysis.QgsGraphAnalyzer.shortestTree>` "
"メソッドは最短経路木を様々な角度から考えたいときに便利です。それは常に新しいグラフオブジェクト(QgsGraph)を生成し、3つの変数を受け取ります："

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:249
msgid "``source`` --- input graph"
msgstr "``source`` --- 入力グラフ"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:250
msgid ""
"``startVertexIdx`` --- index of the point on the tree (the root of the tree)"
msgstr "``startVertexIdx`` --- 木上の点のインデックス（木の根）"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:251
msgid "``criterionNum`` --- number of edge property to use (started from 0)."
msgstr "``criterionNum`` --- 使用する辺のプロパティの数（0から始まる）。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:257
msgid ""
"The :meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` method has "
"the same arguments, but returns two arrays. In the first array element `n` "
"contains index of the incoming edge or -1 if there are no incoming edges. In"
" the second array element `n` contains the distance from the root of the "
"tree to vertex `n` or DOUBLE_MAX if vertex `n` is unreachable from the root."
msgstr ""
":meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドは同じ引数を持ちますが、2つの配列を返します。最初の配列要素 `n` には入力辺のインデックス、または、入力辺がないときは-1が格納されます。2"
" 番目の配列の要素 `n` には、木の根から頂点 `n` までの距離、または頂点 `n` が根から到達できない場合は DOUBLE_MAX "
"が格納されます。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:268
msgid ""
"Here is some very simple code to display the shortest path tree using the "
"graph created with the :meth:`shortestTree() "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` method (select linestring "
"layer in :guilabel:`Layers` panel and replace coordinates with your own)."
msgstr ""
"以下は、 :meth:`shortestTree() <qgis.analysis.QgsGraphAnalyzer.shortestTree>` "
"メソッドで作成したグラフを使用して、最短経路木を表示する非常に簡単なコードです（ :guilabel:`レイヤ` "
"パネルでラインストリングレイヤを選択し、座標をあなたのものに置き換えてください）。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:273
msgid ""
"Use this code only as an example, it creates a lot of :class:`QgsRubberBand "
"<qgis.gui.QgsRubberBand>` objects and may be slow on large datasets."
msgstr ""
"このコードは例としてだけ使ってください。これは :class:`QgsRubberBand <qgis.gui.QgsRubberBand>` "
"オブジェクトを大量に生成するので、大きなデータセットでは遅くなるかもしれません。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:309
msgid ""
"Same thing but using the :meth:`dijkstra() "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method"
msgstr ""
"同じことですが、:meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを使います"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:346
msgid "Finding shortest paths"
msgstr "最短経路を見つける"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:348
msgid ""
"To find the optimal path between two points the following approach is used. "
"Both points (start A and end B) are \"tied\" to the graph when it is built. "
"Then using the :meth:`shortestTree() "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` or :meth:`dijkstra() "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method we build the shortest path"
" tree with root in the start point A. In the same tree we also find the end "
"point B and start to walk through the tree from point B to point A. The "
"whole algorithm can be written as:"
msgstr ""
"2点間の最適経路を求めるには、次のようなアプローチが用いられます。両方の点（始点Aと終点B）はグラフが構築されるときそれに「結び付け」されています。その後、"
" :meth:`shortestTree() <qgis.analysis.QgsGraphAnalyzer.shortestTree>` または "
":meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを用いて、始点Aを根とする最短経路木を構築します。 "
"同じ木で終点Bも求め、点Bから点Aまで木を歩き始めます。アルゴリズム全体は次のように書けます："

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:366
msgid ""
"At this point we have the path, in the form of the inverted list of vertexes"
" (vertexes are listed in reversed order from end point to start point) that "
"will be visited during traveling by this path."
msgstr "この時点において、この経路で走行中に訪問される頂点の反転リストの形（頂点は逆順で終点から始点へと列挙されている）で、経路が得られます。　"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:370
msgid ""
"Here is the sample code for QGIS Python Console (you may need to load and "
"select a linestring layer in TOC and replace coordinates in the code with "
"yours) that uses the :meth:`shortestTree() "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` method"
msgstr ""
"以下は、QGIS Pythonコンソールで :meth:`shortestTree() "
"<qgis.analysis.QgsGraphAnalyzer.shortestTree>` "
"メソッドを使うサンプルコードです（TOCにあるラインストリングレイヤを読み込んで選択し、コード内の座標を自分のものに置き換える必要があるかもしれません）"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:426
msgid ""
"And here is the same sample but using the :meth:`dijkstra() "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method"
msgstr ""
"以下は同じサンプルですが、 :meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを使用しています"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:482
msgid "Areas of availability"
msgstr "利用可能領域"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:484
msgid ""
"The area of availability for vertex A is the subset of graph vertexes that "
"are accessible from vertex A and the cost of the paths from A to these "
"vertexes are not greater that some value."
msgstr ""
"頂点Aに対する利用可能領域とは、頂点Aから到達可能であり、Aからこれらの頂点までの経路のコストがある値以下になるような、グラフの頂点の部分集合です。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:488
msgid ""
"More clearly this can be shown with the following example: \"There is a fire"
" station. Which parts of city can a fire truck reach in 5 minutes? 10 "
"minutes? 15 minutes?\". Answers to these questions are fire station's areas "
"of availability."
msgstr ""
"より明確に、これは次の例で示すことができます。「消防署があります。消防車が5分、10分、15分で到達できるのは市内のどの部分ですか？」。これらの質問への回答が消防署の利用可能領域です。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:493
msgid ""
"To find the areas of availability we can use the :meth:`dijkstra() "
"<qgis.analysis.QgsGraphAnalyzer.dijkstra>` method of the "
":class:`QgsGraphAnalyzer <qgis.analysis.QgsGraphAnalyzer>` class. It is "
"enough to compare the elements of the cost array with a predefined value. If"
" cost[i] is less than or equal to a predefined value, then vertex i is "
"inside the area of availability, otherwise it is outside."
msgstr ""
"利用可能領域を見つけるには、 :class:`QgsGraphAnalyzer <qgis.analysis.QgsGraphAnalyzer>` "
"クラスの :meth:`dijkstra() <qgis.analysis.QgsGraphAnalyzer.dijkstra>` "
"メソッドを使用します。cost配列の要素をあらかじめ定義された値と比較するだけです。もしcost[i]があらかじめ定義された値以下であれば、頂点iは利用可能領域内であり、そうでなければ領域外です。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:500
msgid ""
"A more difficult problem is to get the borders of the area of availability. "
"The bottom border is the set of vertexes that are still accessible, and the "
"top border is the set of vertexes that are not accessible. In fact this is "
"simple: it is the availability border based on the edges of the shortest "
"path tree for which the source vertex of the edge is accessible and the "
"target vertex of the edge is not."
msgstr ""
"より難しい問題は、利用可能領域の境界を取得することです。下限はまだ到達できる頂点の集合であり、上限は到達できない頂点の集合です。実際にはこれは簡単です：それは、辺の元頂点が到達可能であり辺の先頂点が到達可能ではないような、最短経路木の辺に基づく利用可能境界です。"

#: ../../docs/pyqgis_developer_cookbook/network_analysis.rst:507
msgid "Here is an example"
msgstr "例です"
