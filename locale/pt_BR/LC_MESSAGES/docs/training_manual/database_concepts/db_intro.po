# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Harrissou Sant-anna, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-15 11:22+0000\n"
"PO-Revision-Date: 2024-03-02 11:58+0000\n"
"Last-Translator: Harrissou Sant-anna, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/qgis/teams/6144/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"A tradução é um esforço comunitário :ref:`você pode contribuir "
"<translation_guidelines>`. Esta página está atualmente traduzida em "
"|translation progress|."

#: ../../docs/training_manual/database_concepts/db_intro.rst:4
msgid ""
"Before using PostgreSQL, let's make sure of our ground by covering general "
"database theory. You will not need to enter any of the example code; it's "
"only there for illustration purposes."
msgstr ""
"Antes de usarmos o PostgreSQL, vamos ficar mais seguros cobrindo a teoria "
"geral de banco de dados. Você não precisa entrar com nenhum código dos "
"exemplos; eles estão lá somente com o propósito de ilustrar."

#: ../../docs/training_manual/database_concepts/db_intro.rst:8
msgid ""
"**The goal for this lesson:** To understand fundamental database concepts."
msgstr ""
"**O objetivo desta lição:** Compreender os conceitos fundamentais das bases "
"de dados."

#: ../../docs/training_manual/database_concepts/db_intro.rst:11
msgid "What is a Database?"
msgstr "O que é um banco de dados?"

#: ../../docs/training_manual/database_concepts/db_intro.rst:13
msgid ""
"A database consists of an organized collection of data for one or more uses,"
" typically in digital form. *- Wikipedia*"
msgstr ""
"Um banco de dados consiste em uma coleção organizada de dados para um ou "
"mais usos, tipicamente na forma digital. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:18
msgid ""
"A database management system (DBMS) consists of software that operates "
"databases, providing storage, access, security, backup and other facilities."
" *- Wikipedia*"
msgstr ""
"Um sistema gerenciador de banco de dados (SGBD) consiste em um software que "
"opera bases de dados, proporcionando o armazenamento, acesso, segurança, "
"backup e outras facilidades. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:23
msgid "Tables"
msgstr "Tabelas"

#: ../../docs/training_manual/database_concepts/db_intro.rst:25
msgid ""
"In relational databases and flat file databases, a table is a set of data "
"elements (values) that is organized using a model of vertical columns (which"
" are identified by their name) and horizontal rows. A table has a specified "
"number of columns, but can have any number of rows. Each row is identified "
"by the values appearing in a particular column subset which has been "
"identified as a candidate key. *- Wikipedia*"
msgstr ""
"Em bancos de dados relacionais e bases de dados em arquivos simples, uma "
"tabela é um conjunto de elementos de dados (valores) que estão organizados "
"usando um modelo de colunas verticais (que são identificadas por seu nome) e"
" linhas horizontais. Uma tabela tem um número específico de colunas, mas "
"pode ter um número qualquer de linhas. Cada linha é identificada pelos "
"valores que aparecem em um conjunto particular de colunas que tenham sido "
"identificadas como chaves candidatas.  *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:40
msgid "In SQL databases a table is also known as a **relation.**"
msgstr ""
"Em bancos de dados SQL, uma tabela é também conhecida como uma **relação.**"

#: ../../docs/training_manual/database_concepts/db_intro.rst:43
msgid "Columns / Fields"
msgstr "Colunas / Campos"

#: ../../docs/training_manual/database_concepts/db_intro.rst:45
msgid ""
"A column is a set of data values of a particular simple type, one for each "
"row of the table. The columns provide the structure according to which the "
"rows are composed. The term field is often used interchangeably with column,"
" although many consider it more correct to use field (or field value) to "
"refer specifically to the single item that exists at the intersection "
"between one row and one column. *- Wikipedia*"
msgstr ""
"Uma coluna é um conjunto de valores de um tipo particular de dados, um para "
"cada linha da tabela. As colunas fornecem a estrutura com a qual as linhas "
"são compostas. O termo \"campo\" é muitas vezes utilizado alternadamente com"
" o termo \"coluna\", embora muitos considerem mais correto usar campo (ou "
"valor de campo) para se referir especificamente a um simples item que exista"
" na interseção entre uma linha e uma coluna. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:52
msgid "A column:"
msgstr "Uma coluna:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:61
msgid "A field:"
msgstr "Um campo:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:68
msgid "Records"
msgstr "Registros"

#: ../../docs/training_manual/database_concepts/db_intro.rst:70
msgid ""
"A record is the information stored in a table row. Each record will have a "
"field for each of the columns in the table."
msgstr ""
"Um registro é a informação armazenada em uma linha da tabela. Cada registro "
"terá um campo para cada coluna na tabela."

#: ../../docs/training_manual/database_concepts/db_intro.rst:78
msgid "Datatypes"
msgstr "Tipos de dados"

#: ../../docs/training_manual/database_concepts/db_intro.rst:80
msgid ""
"Datatypes restrict the kind of information that can be stored in a column. "
"*- Tim and Horst*"
msgstr ""
"Tipos de dados restringem o tipo de informação que pode ser armazenado em "
"uma coluna. *- Tim and Horst*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:83
msgid "There are many kinds of datatypes. Let's focus on the most common:"
msgstr ""
"Existem várias classes de tipos de dados. Vamos focar nas mais comuns:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:85
msgid "``String`` - to store free-form text data"
msgstr "``String`` -  para armazenar dados de texto de forma livre"

#: ../../docs/training_manual/database_concepts/db_intro.rst:86
msgid "``Integer`` - to store whole numbers"
msgstr "``Integer`` - para armazenar números inteiros"

#: ../../docs/training_manual/database_concepts/db_intro.rst:87
msgid "``Real`` - to store decimal numbers"
msgstr "``Real`` - para armazenar números decinais"

#: ../../docs/training_manual/database_concepts/db_intro.rst:88
msgid "``Date`` - to store Horst's birthday so no one forgets"
msgstr ""
"``Date`` - para armazenar o aniversário de Horst para que ninguém esqueça"

#: ../../docs/training_manual/database_concepts/db_intro.rst:89
msgid "``Boolean`` - to store simple true/false values"
msgstr "``Boolean`` - para armazenar valores simples verdadeiros/falsos"

#: ../../docs/training_manual/database_concepts/db_intro.rst:91
msgid ""
"You can tell the database to allow you to also store nothing in a field. If "
"there is nothing in a field, then the field content is referred to as a "
"**'null' value**:"
msgstr ""
"Você pode dizer ao banco de dados para permitir que você também não armazene"
" nada em um campo. Se não houver nada em um campo, o conteúdo do campo será "
"referido como um **'valor nulo'**:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:101
msgid "Result:"
msgstr "Resultado:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:112
msgid ""
"There are many more datatypes you can use - `check the PostgreSQL manual! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"
msgstr ""
"Existem muitos outros tipos de dados que você pode usar - `verifique o "
"manual do PostgreSQL! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"

#: ../../docs/training_manual/database_concepts/db_intro.rst:116
msgid "Modelling an Address Database"
msgstr "Modelando um banco de dados de Endereços"

#: ../../docs/training_manual/database_concepts/db_intro.rst:118
msgid ""
"Let's use a simple case study to see how a database is constructed. We want "
"to create an address database."
msgstr ""
"Vamos usar um estudo de caso simples para ver como um banco de dados é "
"construído. Queremos criar um banco de dados de endereços."

#: ../../docs/training_manual/database_concepts/db_intro.rst:124
msgid ""
"Write down the properties which make up a simple address and which we would "
"want to store in our database."
msgstr ""
"Anote as propriedades que compõem um endereço simples e que gostariamos de "
"armazenar em nosso banco de dados."

#: ../../docs/training_manual/database_concepts/db_intro.rst:127
#: ../../docs/training_manual/database_concepts/db_intro.rst:216
#: ../../docs/training_manual/database_concepts/db_intro.rst:345
msgid "Answer"
msgstr "Resposta"

#: ../../docs/training_manual/database_concepts/db_intro.rst:130
msgid ""
"For our theoretical address table, we might want to store the following "
"properties::"
msgstr ""
"Para nossa tabela de endereços teórica, podemos querer armazenar as "
"seguintes propriedades::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:140
msgid ""
"When creating the table to represent an address object, we would create "
"columns to represent each of these properties and we would name them with "
"SQL-compliant and possibly shortened names::"
msgstr ""
"Ao criar a tabela para representar um objeto de endereço, criamos colunas "
"para representar cada uma dessas propriedades e as nomeamos com nomes "
"compatíveis com SQL e possivelmente abreviados::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:152
msgid "Address Structure"
msgstr "Estrutura de endereço"

#: ../../docs/training_manual/database_concepts/db_intro.rst:154
msgid ""
"The properties that describe an address are the columns. The type of "
"information stored in each column is its datatype. In the next section we "
"will analyse our conceptual address table to see how we can make it better!"
msgstr ""
"As propriedades que descrevem um endereço são as colunas. O tipo das "
"informações armazenadas em cada coluna é o seu tipo de dado. Na próxima "
"seção vamos analisar nossa tabela de endereços conceitual para ver como "
"podemos fazê-la melhor!"

#: ../../docs/training_manual/database_concepts/db_intro.rst:159
msgid "Database Theory"
msgstr "Teoria de banco de dados"

#: ../../docs/training_manual/database_concepts/db_intro.rst:161
msgid ""
"The process of creating a database involves creating a model of the real "
"world; taking real world concepts and representing them in the database as "
"entities."
msgstr ""
"O processo de criação de um banco de dados envolve a criação de um modelo do"
" mundo real; tomando conceitos do mundo real e representando-os no banco de "
"dados como entidades."

#: ../../docs/training_manual/database_concepts/db_intro.rst:165
msgid "Normalisation"
msgstr "Normalização"

#: ../../docs/training_manual/database_concepts/db_intro.rst:167
msgid ""
"One of the main ideas in a database is to avoid data duplication / "
"redundancy. The process of removing redundancy from a database is called "
"Normalisation."
msgstr ""
"Uma das principais idéias em um banco de dados é evitar a duplicação de "
"dados / redundância. O processo de remoção de redundância de um banco de "
"dados é chamado de Normalização."

#: ../../docs/training_manual/database_concepts/db_intro.rst:170
msgid ""
"Normalization is a systematic way of ensuring that a database structure is "
"suitable for general-purpose querying and free of certain undesirable "
"characteristics - insertion, update, and deletion anomalies - that could "
"lead to a loss of data integrity. *- Wikipedia*"
msgstr ""
"A normalização é uma forma sistemática de garantir que a estrutura do banco "
"de dados é adequada para uso geral de consulta e isento de certas "
"características indesejáveis - anomalias na inserção, atualização e exclusão"
" - que poderia levar a uma perda de integridade dos dados. * - * Wikipedia"

#: ../../docs/training_manual/database_concepts/db_intro.rst:175
msgid "There are different kinds of normalisation 'forms'."
msgstr "Existem diferentes 'formas' de normalização."

#: ../../docs/training_manual/database_concepts/db_intro.rst:177
msgid "Let's take a look at a simple example:"
msgstr "Vamos ver um exemplo simples:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:204
msgid ""
"Imagine you have many friends with the same street name or city. Every time "
"this data is duplicated, it consumes space. Worse still, if a city name "
"changes, you have to do a lot of work to update your database."
msgstr ""
"Imagine que você tem muitos amigos com o mesmo nome de rua ou cidade. Cada "
"vez que os dados são duplicados, consome-se espaço. Pior ainda, se um nome "
"de cidade muda, você tem que fazer um monte de trabalho para atualizar seu "
"banco de dados."

#: ../../docs/training_manual/database_concepts/db_intro.rst:210
msgid ""
"Redesign the theoretical `people` table above to reduce duplication and to "
"normalise the data structure."
msgstr ""
"Redesenhando a tabela teórica `people` acima para reduzir a duplicação e "
"para normalizar a estrutura de dados."

#: ../../docs/training_manual/database_concepts/db_intro.rst:213
msgid ""
"You can read more about database normalisation `here "
"<https://en.wikipedia.org/wiki/Database_normalization>`_"
msgstr ""
"Você pode ler mais sobre a normalização do banco de dados `aqui "
"<https://en.wikipedia.org/wiki/Database_normalization>`_"

#: ../../docs/training_manual/database_concepts/db_intro.rst:219
msgid ""
"The major problem with the *people* table is that there is a single address "
"field which contains a person's entire address. Thinking about our "
"theoretical *address* table earlier in this lesson, we know that an address "
"is made up of many different properties. By storing all these properties in "
"one field, we make it much harder to update and query our data. We therefore"
" need to split the address field into the various properties. This would "
"give us a table which has the following structure::"
msgstr ""
"O maior problema com a tabela *pessoas* é que existe um único campo de "
"endereço que contém o endereço completo de uma pessoa. Pensando em nossa "
"tabela teórica de *endereços* no início desta lição, sabemos que um endereço"
" é composto de muitas propriedades diferentes. Ao armazenar todas essas "
"propriedades em um campo, tornamos muito mais difícil atualizar e consultar "
"nossos dados. Portanto, precisamos dividir o campo de endereço nas várias "
"propriedades. Isso nos daria uma tabela que tem a seguinte estrutura:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:233
msgid ""
"In the next section, you will learn about Foreign Key relationships which "
"could be used in this example to further improve our database's structure."
msgstr ""
"Na próxima seção, você aprenderá sobre os relacionamentos de chave "
"estrangeira que podem ser usados ​​neste exemplo para melhorar ainda mais a "
"estrutura do nosso banco de dados."

#: ../../docs/training_manual/database_concepts/db_intro.rst:237
msgid "Indexes"
msgstr "Índices"

#: ../../docs/training_manual/database_concepts/db_intro.rst:239
msgid ""
"A database index is a data structure that improves the speed of data "
"retrieval operations on a database table. *- Wikipedia*"
msgstr ""
"Um índice de banco de dados é uma estrutura de dados que aumenta a "
"velocidade da operação de recuperação de dados de uma tabela de banco de "
"dados. * - * Wikipedia"

#: ../../docs/training_manual/database_concepts/db_intro.rst:242
msgid ""
"Imagine you are reading a textbook and looking for the explanation of a "
"concept - and the textbook has no index! You will have to start reading at "
"one cover and work your way through the entire book until you find the "
"information you need. The index at the back of a book helps you to jump "
"quickly to the page with the relevant information:"
msgstr ""
"Imagine que você está lendo um livro e procurando a explicação de um "
"conceito - e o livro não tem índice! Você terá que começar a ler em uma capa"
" e percorrer todo o livro até encontrar as informações necessárias. O índice"
" na parte de trás de um livro ajuda você a pular rapidamente para a página "
"com as informações relevantes:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:252
msgid "Now searches on name will be faster:"
msgstr " Agora, as pesquisas por nome serão mais rápidas: "

#: ../../docs/training_manual/database_concepts/db_intro.rst:271
msgid "Sequences"
msgstr "Sequencias"

#: ../../docs/training_manual/database_concepts/db_intro.rst:273
msgid ""
"A sequence is a unique number generator. It is normally used to create a "
"unique identifier for a column in a table."
msgstr ""
"Uma sequência é um gerador de número único. É normalmente utilizado para "
"criar um identificador único para uma coluna na tabela."

#: ../../docs/training_manual/database_concepts/db_intro.rst:276
msgid ""
"In this example, id is a sequence - the number is incremented each time a "
"record is added to the table:"
msgstr ""
"Neste exemplo, id é uma sequência - o número é incrementado toda vez que um "
"registro é adicionado à tabela: "

#: ../../docs/training_manual/database_concepts/db_intro.rst:287
msgid "Entity Relationship Diagramming"
msgstr "Diagrama Entidade-relacionamento"

#: ../../docs/training_manual/database_concepts/db_intro.rst:289
msgid ""
"In a normalised database, you typically have many relations (tables). The "
"entity-relationship diagram (ER Diagram) is used to design the logical "
"dependencies between the relations. Consider our non-normalised `people` "
"table from earlier in the lesson:"
msgstr ""
"Em um banco de dados normalizado, você normalmente tem muitas relações "
"(tabelas). O diagrama de entidade-relacionamento (diagrama ER) é usado para "
"projetar as dependências lógicas entre as relações. Considere a nossa tabela"
" `pessoas` não normalizada do início da lição:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:304
msgid ""
"With a little work we can split it into two tables, removing the need to "
"repeat the street name for individuals who live in the same street:"
msgstr ""
"Com um pouco de trabalho, podemos dividi-lo em duas tabelas, eliminando a "
"necessidade de repetir o nome da rua para pessoas que moram na mesma rua:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:316
msgid "and:"
msgstr "e:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:327
msgid ""
"We can then link the two tables using the 'keys' :kbd:`streets.id` and "
":kbd:`people.streets_id`."
msgstr ""
"Podemos, então, ligar as duas tabelas usando as \"chaves\": kbd: "
"`streets.id` e: kbd:` people.streets_id`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:330
msgid ""
"If we draw an ER Diagram for these two tables it would look something like "
"this:"
msgstr ""
"Se desenharmos um Diagrama ER para essas duas tabelas, será algo parecido "
"com isto:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:336
msgid ""
"The ER Diagram helps us to express 'one to many' relationships. In this case"
" the arrow symbol show that one street can have many people living on it."
msgstr ""
"O Diagrama ER nos ajuda a expressar relacionamentos \"um para muitos\". "
"Neste caso, o símbolo de seta mostra que uma rua pode ter muitas pessoas "
"vivendo nela."

#: ../../docs/training_manual/database_concepts/db_intro.rst:342
msgid ""
"Our `people` model still has some normalisation issues - try to see if you "
"can normalise it further and show your thoughts by means of an ER Diagram."
msgstr ""
"Nosso modelo `people` ainda tem alguns problemas de normalização - veja se "
"você consegue  normalizá-lo ainda mais e representá-lo por meio de um "
"Diagrama ER."

#: ../../docs/training_manual/database_concepts/db_intro.rst:349
msgid "Our *people* table currently looks like this::"
msgstr "Nossa tabela *pessoas* atualmente está assim::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:355
msgid ""
"The :guilabel:`street_id` column represents a 'one to many' relationship "
"between the people object and the related street object, which is in the "
"*streets* table."
msgstr ""
"A coluna :guilabel:`rua_id` representa um relacionamento 'um para muitos' "
"entre o objeto pessoas e o objeto rua relacionado, que está na tabela "
"*ruas*."

#: ../../docs/training_manual/database_concepts/db_intro.rst:358
msgid ""
"One way to further normalise the table is to split the name field into "
"*first_name* and *last_name*::"
msgstr ""
"Uma maneira de normalizar ainda mais a tabela é dividir o campo de nome em "
"*primeiro_nome* e *último_nome*::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:365
msgid ""
"We can also create separate tables for the town or city name and country, "
"linking them to our *people* table via 'one to many' relationships::"
msgstr ""
"Também podemos criar tabelas separadas para a cidade ou nome da cidade e "
"país, vinculando-os à nossa tabela *pessoas* por meio de relacionamentos 'um"
" para muitos'::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:373
msgid "An ER Diagram to represent this would look like this:"
msgstr "Um diagrama ER para representar isso ficaria assim:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:379
msgid "Constraints, Primary Keys and Foreign Keys"
msgstr "Restrições, Chaves Primárias e Chaves Estrangeiras"

#: ../../docs/training_manual/database_concepts/db_intro.rst:381
msgid ""
"A database constraint is used to ensure that data in a relation matches the "
"modeller's view of how that data should be stored. For example a constraint "
"on your postal code could ensure that the number falls between :kbd:`1000` "
"and :kbd:`9999`."
msgstr ""
"Uma restrição de banco de dados é utilizada para assegurar que os dados numa"
" relação correspondam ao ponto de vista do modelador de como que os dados "
"devem ser armazenados. Por exemplo, uma restrição em seu código postal "
"poderia garantir que o número caia entre: kbd: `1000` e: kbd:` 9999`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:386
msgid ""
"A Primary key is one or more field values that make a record unique. Usually"
" the primary key is called id and is a sequence."
msgstr ""
"Uma chave primária é composta de um ou mais valores de campo que tornam um "
"registro único. Normalmente, a chave primária é chamada id e é uma "
"sequência."

#: ../../docs/training_manual/database_concepts/db_intro.rst:389
msgid ""
"A Foreign key is used to refer to a unique record on another table (using "
"that other table's primary key)."
msgstr ""
"Uma chave estrangeira é usada para se referir a um único registro em outra "
"tabela (usando a chave primária dessa outra tabela)."

#: ../../docs/training_manual/database_concepts/db_intro.rst:392
msgid ""
"In ER Diagramming, the linkage between tables is normally based on Foreign "
"keys linking to Primary keys."
msgstr ""
"Em um diagrama ER, a ligação entre as tabelas é normalmente baseada em "
"chaves estrangeiras que se ligam a chaves primárias."

#: ../../docs/training_manual/database_concepts/db_intro.rst:395
msgid ""
"If we look at our people example, the table definition shows that the street"
" column is a foreign key that references the primary key on the streets "
"table:"
msgstr ""
"Se olharmos para o nosso exemplo de pessoas, a definição da tabela mostra "
"que a coluna da rua é uma chave externa que faz referência à chave primária "
"na tabela de ruas:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:416
msgid "Transactions"
msgstr "Transações"

#: ../../docs/training_manual/database_concepts/db_intro.rst:418
msgid ""
"When adding, changing, or deleting data in a database, it is always "
"important that the database is left in a good state if something goes wrong."
" Most databases provide a feature called transaction support. Transactions "
"allow you to create a rollback position that you can return to if your "
"modifications to the database did not run as planned."
msgstr ""
"Ao adicionar, alterar ou excluir dados em um banco de dados, é sempre "
"importante que o banco de dados possa ser deixado em um estado bom se algo "
"der errado. A maioria dos bancos de dados fornecem um recurso chamado "
"suporte a transações. Transações permitem que você crie uma posição de "
"\"rollback\" podendo voltar a esse ponto caso suas modificações ao banco de "
"dados não ocorram conforme planejado."

#: ../../docs/training_manual/database_concepts/db_intro.rst:424
msgid ""
"Take a scenario where you have an accounting system. You need to transfer "
"funds from one account and add them to another. The sequence of steps would "
"go like this:"
msgstr ""
"Tome um cenário onde você tem um sistema de contabilidade. Você precisa "
"transferir fundos de uma conta e adicioná-los à outro. A sequência de etapas"
" seria assim::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:428
msgid "remove R20 from Joe"
msgstr "remover R20 do Joe"

#: ../../docs/training_manual/database_concepts/db_intro.rst:429
msgid "add R20 to Anne"
msgstr "adicionar R20 para a Anne"

#: ../../docs/training_manual/database_concepts/db_intro.rst:431
msgid ""
"If something goes wrong during the process (e.g. power failure), the "
"transaction will be rolled back."
msgstr ""
"Se algo der errado durante o processo (por exemplo, falha de energia), a "
"transação será revertida."

#: ../../docs/training_manual/database_concepts/db_intro.rst:437
msgid ""
"Databases allow you to manage data in a structured way using simple code "
"structures."
msgstr ""
"Bancos de dados permitem que você gerencie os dados de forma estruturada "
"usando estruturas de código simples."

#: ../../docs/training_manual/database_concepts/db_intro.rst:443
msgid ""
"Now that we've looked at how databases work in theory, let's create a new "
"database to implement the theory we've covered."
msgstr ""
"Agora que já vimos como bancos de dados funcionam na teoria, vamos criar um "
"novo banco de dados para implementar a teoria que nós cobrimos."
