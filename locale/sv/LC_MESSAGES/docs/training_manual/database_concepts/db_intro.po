# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
# 
# Translators:
# Daniel Nylander <po@danielnylander.se>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.34\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-27 20:20+0100\n"
"PO-Revision-Date: 2025-02-27 21:33+0000\n"
"Last-Translator: Daniel Nylander <po@danielnylander.se>, 2025\n"
"Language-Team: Swedish (https://app.transifex.com/qgis/teams/6144/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../<rst_prolog>:5
msgid ""
"Translation is a community effort :ref:`you can join "
"<translation_guidelines>`. This page is currently translated at |translation"
" progress|."
msgstr ""
"Översättning är en gemenskapsinsats :ref:`du kan gå med i "
"<translation_guidelines>`. Den här sidan är för närvarande översatt till "
"|translation progress|."

#: ../../docs/training_manual/database_concepts/db_intro.rst:2
msgid "Lesson: Introduction to Databases"
msgstr "Lektion: Introduktion till databaser"

#: ../../docs/training_manual/database_concepts/db_intro.rst:4
msgid ""
"Before using PostgreSQL, let's make sure of our ground by covering general "
"database theory. You will not need to enter any of the example code; it's "
"only there for illustration purposes."
msgstr ""
"Innan vi använder PostgreSQL, låt oss se till att vi är på plats genom att "
"täcka allmän databasteori. Du behöver inte ange någon av exempelkoden; den "
"är bara där för illustrationssyfte."

#: ../../docs/training_manual/database_concepts/db_intro.rst:8
msgid ""
"**The goal for this lesson:** To understand fundamental database concepts."
msgstr ""
"**Målet för den här lektionen:** Att förstå grundläggande databaskoncept."

#: ../../docs/training_manual/database_concepts/db_intro.rst:11
msgid "What is a Database?"
msgstr "Vad är en databas?"

#: ../../docs/training_manual/database_concepts/db_intro.rst:13
msgid ""
"A database consists of an organized collection of data for one or more uses,"
" typically in digital form. *- Wikipedia*"
msgstr ""
"En databas består av en organiserad samling data för ett eller flera "
"användningsområden, vanligtvis i digital form. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:18
msgid ""
"A database management system (DBMS) consists of software that operates "
"databases, providing storage, access, security, backup and other facilities."
" *- Wikipedia*"
msgstr ""
"Ett databashanteringssystem (DBMS) består av programvara som driver "
"databaser och tillhandahåller lagring, åtkomst, säkerhet, backup och andra "
"funktioner. *- Wikipedia* (på engelska)"

#: ../../docs/training_manual/database_concepts/db_intro.rst:23
msgid "Tables"
msgstr "Tabeller"

#: ../../docs/training_manual/database_concepts/db_intro.rst:25
msgid ""
"In relational databases and flat file databases, a table is a set of data "
"elements (values) that is organized using a model of vertical columns (which"
" are identified by their name) and horizontal rows. A table has a specified "
"number of columns, but can have any number of rows. Each row is identified "
"by the values appearing in a particular column subset which has been "
"identified as a candidate key. *- Wikipedia*"
msgstr ""
"I relationsdatabaser och flatfilsdatabaser är en tabell en uppsättning "
"dataelement (värden) som är organiserade med hjälp av en modell med "
"vertikala kolumner (som identifieras av sitt namn) och horisontella rader. "
"En tabell har ett visst antal kolumner, men kan ha ett valfritt antal rader."
" Varje rad identifieras av de värden som förekommer i en viss delmängd av "
"kolumnen som har identifierats som en kandidatnyckel. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:40
msgid "In SQL databases a table is also known as a **relation.**"
msgstr "I SQL-databaser kallas en tabell också för en **relation.**"

#: ../../docs/training_manual/database_concepts/db_intro.rst:43
msgid "Columns / Fields"
msgstr "Kolumner / fält"

#: ../../docs/training_manual/database_concepts/db_intro.rst:45
msgid ""
"A column is a set of data values of a particular simple type, one for each "
"row of the table. The columns provide the structure according to which the "
"rows are composed. The term field is often used interchangeably with column,"
" although many consider it more correct to use field (or field value) to "
"refer specifically to the single item that exists at the intersection "
"between one row and one column. *- Wikipedia*"
msgstr ""
"En kolumn är en uppsättning datavärden av en viss enkel typ, en för varje "
"rad i tabellen. Kolumnerna ger den struktur enligt vilken raderna är "
"uppbyggda. Termen fält används ofta synonymt med kolumn, även om många anser"
" att det är mer korrekt att använda fält (eller fältvärde) för att specifikt"
" hänvisa till det enda objekt som finns i skärningspunkten mellan en rad och"
" en kolumn. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:52
msgid "A column:"
msgstr "En kolumn:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:61
msgid "A field:"
msgstr "Textfält"

#: ../../docs/training_manual/database_concepts/db_intro.rst:68
msgid "Records"
msgstr "Poster"

#: ../../docs/training_manual/database_concepts/db_intro.rst:70
msgid ""
"A record is the information stored in a table row. Each record will have a "
"field for each of the columns in the table."
msgstr ""
"En post är den information som lagras i en tabellrad. Varje post har ett "
"fält för var och en av kolumnerna i tabellen."

#: ../../docs/training_manual/database_concepts/db_intro.rst:78
msgid "Datatypes"
msgstr "Datatyper"

#: ../../docs/training_manual/database_concepts/db_intro.rst:80
msgid ""
"Datatypes restrict the kind of information that can be stored in a column. "
"*- Tim and Horst*"
msgstr ""
"Datatyper begränsar vilken typ av information som kan lagras i en kolumn. *-"
" Tim och Horst*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:83
msgid "There are many kinds of datatypes. Let's focus on the most common:"
msgstr ""
"Det finns många olika typer av datatyper. Låt oss fokusera på de vanligaste:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:85
msgid "``String`` - to store free-form text data"
msgstr "``String`` - för att lagra data i form av fritext"

#: ../../docs/training_manual/database_concepts/db_intro.rst:86
msgid "``Integer`` - to store whole numbers"
msgstr "``Integer`` - för lagring av hela tal"

#: ../../docs/training_manual/database_concepts/db_intro.rst:87
msgid "``Real`` - to store decimal numbers"
msgstr "``Real`` - för lagring av decimaltal"

#: ../../docs/training_manual/database_concepts/db_intro.rst:88
msgid "``Date`` - to store Horst's birthday so no one forgets"
msgstr "``Date`` - för att lagra Horsts födelsedag så att ingen glömmer"

#: ../../docs/training_manual/database_concepts/db_intro.rst:89
msgid "``Boolean`` - to store simple true/false values"
msgstr "``Boolean`` - för att lagra enkla sanna/falska värden"

#: ../../docs/training_manual/database_concepts/db_intro.rst:91
msgid ""
"You can tell the database to allow you to also store nothing in a field. If "
"there is nothing in a field, then the field content is referred to as a "
"**'null' value**:"
msgstr ""
"Du kan tala om för databasen att du även kan lagra ingenting i ett fält. Om "
"det inte finns något i ett fält kallas fältinnehållet för ett "
"**\"null\"-värde**:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:101
msgid "Result:"
msgstr "Resultat:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:112
msgid ""
"There are many more datatypes you can use - `check the PostgreSQL manual! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"
msgstr ""
"Det finns många fler datatyper du kan använda - `kolla PostgreSQL-manualen! "
"<https://www.postgresql.org/docs/current/datatype.html>`_"

#: ../../docs/training_manual/database_concepts/db_intro.rst:116
msgid "Modelling an Address Database"
msgstr "Modellering av en adressdatabas"

#: ../../docs/training_manual/database_concepts/db_intro.rst:118
msgid ""
"Let's use a simple case study to see how a database is constructed. We want "
"to create an address database."
msgstr ""
"Låt oss använda en enkel fallstudie för att se hur en databas är uppbyggd. "
"Vi vill skapa en adressdatabas."

#: ../../docs/training_manual/database_concepts/db_intro.rst:122
#: ../../docs/training_manual/database_concepts/db_intro.rst:209
msgid ":abbr:`★☆☆ (Basic level)` Try Yourself:"
msgstr ":abbr:`★☆☆ (Grundläggande nivå)` Prova själv:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:124
msgid ""
"Write down the properties which make up a simple address and which we would "
"want to store in our database."
msgstr ""
"Skriv ner de egenskaper som en enkel adress består av och som vi skulle "
"vilja lagra i vår databas."

#: ../../docs/training_manual/database_concepts/db_intro.rst:127
#: ../../docs/training_manual/database_concepts/db_intro.rst:216
#: ../../docs/training_manual/database_concepts/db_intro.rst:345
msgid "Answer"
msgstr "Svar"

#: ../../docs/training_manual/database_concepts/db_intro.rst:130
msgid ""
"For our theoretical address table, we might want to store the following "
"properties::"
msgstr ""
"För vår teoretiska adresstabell kanske vi vill lagra följande egenskaper::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:140
msgid ""
"When creating the table to represent an address object, we would create "
"columns to represent each of these properties and we would name them with "
"SQL-compliant and possibly shortened names::"
msgstr ""
"När vi skapar tabellen för att representera ett adressobjekt skapar vi "
"kolumner för att representera var och en av dessa egenskaper och vi namnger "
"dem med SQL-kompatibla och eventuellt förkortade namn::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:152
msgid "Address Structure"
msgstr "Adresstruktur"

#: ../../docs/training_manual/database_concepts/db_intro.rst:154
msgid ""
"The properties that describe an address are the columns. The type of "
"information stored in each column is its datatype. In the next section we "
"will analyse our conceptual address table to see how we can make it better!"
msgstr ""
"De egenskaper som beskriver en adress är kolumnerna. Den typ av information "
"som lagras i varje kolumn är dess datatyp. I nästa avsnitt ska vi analysera "
"vår konceptuella adresstabell för att se hur vi kan göra den bättre!"

#: ../../docs/training_manual/database_concepts/db_intro.rst:159
msgid "Database Theory"
msgstr "Databasteori"

#: ../../docs/training_manual/database_concepts/db_intro.rst:161
msgid ""
"The process of creating a database involves creating a model of the real "
"world; taking real world concepts and representing them in the database as "
"entities."
msgstr ""
"Processen att skapa en databas innebär att man skapar en modell av den "
"verkliga världen; man tar begrepp från den verkliga världen och "
"representerar dem i databasen som entiteter."

#: ../../docs/training_manual/database_concepts/db_intro.rst:165
msgid "Normalisation"
msgstr "Normalisering"

#: ../../docs/training_manual/database_concepts/db_intro.rst:167
msgid ""
"One of the main ideas in a database is to avoid data duplication / "
"redundancy. The process of removing redundancy from a database is called "
"Normalisation."
msgstr ""
"En av huvudtankarna med en databas är att undvika dataduplicering/redundans."
" Processen att ta bort redundans från en databas kallas normalisering."

#: ../../docs/training_manual/database_concepts/db_intro.rst:170
msgid ""
"Normalization is a systematic way of ensuring that a database structure is "
"suitable for general-purpose querying and free of certain undesirable "
"characteristics - insertion, update, and deletion anomalies - that could "
"lead to a loss of data integrity. *- Wikipedia*"
msgstr ""
"Normalisering är ett systematiskt sätt att säkerställa att en "
"databasstruktur är lämplig för allmänna sökningar och fri från vissa "
"oönskade egenskaper - anomalier vid införande, uppdatering och radering - "
"som kan leda till förlust av dataintegritet. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:175
msgid "There are different kinds of normalisation 'forms'."
msgstr "Det finns olika typer av \"formulär\" för normalisering."

#: ../../docs/training_manual/database_concepts/db_intro.rst:177
msgid "Let's take a look at a simple example:"
msgstr "Låt oss ta en titt på ett enkelt exempel:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:204
msgid ""
"Imagine you have many friends with the same street name or city. Every time "
"this data is duplicated, it consumes space. Worse still, if a city name "
"changes, you have to do a lot of work to update your database."
msgstr ""
"Tänk dig att du har många vänner med samma gatunamn eller stad. Varje gång "
"dessa data dupliceras tar det plats. Ännu värre är att om ett stadsnamn "
"ändras måste du göra en massa arbete för att uppdatera din databas."

#: ../../docs/training_manual/database_concepts/db_intro.rst:210
msgid ""
"Redesign the theoretical `people` table above to reduce duplication and to "
"normalise the data structure."
msgstr ""
"Gör om den teoretiska `folk`-tabellen ovan för att minska dubblering och "
"normalisera datastrukturen."

#: ../../docs/training_manual/database_concepts/db_intro.rst:213
msgid ""
"You can read more about database normalisation `here "
"<https://en.wikipedia.org/wiki/Database_normalization>`_"
msgstr ""
"Du kan läsa mer om normalisering av databaser här "
"<https://en.wikipedia.org/wiki/Database_normalization>`_"

#: ../../docs/training_manual/database_concepts/db_intro.rst:219
msgid ""
"The major problem with the *people* table is that there is a single address "
"field which contains a person's entire address. Thinking about our "
"theoretical *address* table earlier in this lesson, we know that an address "
"is made up of many different properties. By storing all these properties in "
"one field, we make it much harder to update and query our data. We therefore"
" need to split the address field into the various properties. This would "
"give us a table which has the following structure::"
msgstr ""
"Det stora problemet med *people*-tabellen är att det finns ett enda "
"adressfält som innehåller en persons hela adress. Om vi tänker på vår "
"teoretiska *address*-tabell tidigare i den här lektionen vet vi att en "
"adress består av många olika egenskaper. Genom att lagra alla dessa "
"egenskaper i ett och samma fält gör vi det mycket svårare att uppdatera och "
"söka i våra data. Vi måste därför dela upp adressfältet i de olika "
"egenskaperna. Detta skulle ge oss en tabell som har följande struktur::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:233
msgid ""
"In the next section, you will learn about Foreign Key relationships which "
"could be used in this example to further improve our database's structure."
msgstr ""
"I nästa avsnitt kommer du att lära dig mer om Foreign Key-relationer som kan"
" användas i det här exemplet för att ytterligare förbättra databasens "
"struktur."

#: ../../docs/training_manual/database_concepts/db_intro.rst:237
msgid "Indexes"
msgstr "Index"

#: ../../docs/training_manual/database_concepts/db_intro.rst:239
msgid ""
"A database index is a data structure that improves the speed of data "
"retrieval operations on a database table. *- Wikipedia*"
msgstr ""
"Ett databasindex är en datastruktur som gör det snabbare att hämta data från"
" en databastabell. *- Wikipedia*"

#: ../../docs/training_manual/database_concepts/db_intro.rst:242
msgid ""
"Imagine you are reading a textbook and looking for the explanation of a "
"concept - and the textbook has no index! You will have to start reading at "
"one cover and work your way through the entire book until you find the "
"information you need. The index at the back of a book helps you to jump "
"quickly to the page with the relevant information:"
msgstr ""
"Föreställ dig att du läser en lärobok och letar efter förklaringen till ett "
"begrepp - och läroboken har inget index! Du måste börja läsa på ett uppslag "
"och sedan arbeta dig igenom hela boken tills du hittar den information du "
"behöver. Indexet längst bak i boken hjälper dig att snabbt komma till sidan "
"med den relevanta informationen:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:252
msgid "Now searches on name will be faster:"
msgstr "Nu kommer sökningar på namn att gå snabbare:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:271
msgid "Sequences"
msgstr "Sekvenser"

#: ../../docs/training_manual/database_concepts/db_intro.rst:273
msgid ""
"A sequence is a unique number generator. It is normally used to create a "
"unique identifier for a column in a table."
msgstr ""
"En sekvens är en generator för unika nummer. Den används normalt för att "
"skapa en unik identifierare för en kolumn i en tabell."

#: ../../docs/training_manual/database_concepts/db_intro.rst:276
msgid ""
"In this example, id is a sequence - the number is incremented each time a "
"record is added to the table:"
msgstr ""
"I det här exemplet är id en sekvens - numret ökas varje gång en post läggs "
"till i tabellen:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:287
msgid "Entity Relationship Diagramming"
msgstr "Diagrammering av entitetsrelationer"

#: ../../docs/training_manual/database_concepts/db_intro.rst:289
msgid ""
"In a normalised database, you typically have many relations (tables). The "
"entity-relationship diagram (ER Diagram) is used to design the logical "
"dependencies between the relations. Consider our non-normalised `people` "
"table from earlier in the lesson:"
msgstr ""
"I en normaliserad databas har du vanligtvis många relationer (tabeller). "
"Enhetsrelationsdiagrammet (ER-diagrammet) används för att utforma de logiska"
" beroendena mellan relationerna. Tänk på vår icke-normaliserade tabell "
"`people` från tidigare i lektionen:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:304
msgid ""
"With a little work we can split it into two tables, removing the need to "
"repeat the street name for individuals who live in the same street:"
msgstr ""
"Med lite arbete kan vi dela upp den i två tabeller, vilket gör att vi inte "
"behöver upprepa gatunamnet för personer som bor på samma gata:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:316
msgid "and:"
msgstr "och..:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:327
msgid ""
"We can then link the two tables using the 'keys' :kbd:`streets.id` and "
":kbd:`people.streets_id`."
msgstr ""
"Vi kan sedan länka de två tabellerna med hjälp av \"nycklarna\" "
":kbd:`streets.id` och :kbd:`people.streets_id`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:330
msgid ""
"If we draw an ER Diagram for these two tables it would look something like "
"this:"
msgstr ""
"Om vi ritar ett ER-diagram för dessa två tabeller skulle det se ut ungefär "
"så här:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:336
msgid ""
"The ER Diagram helps us to express 'one to many' relationships. In this case"
" the arrow symbol show that one street can have many people living on it."
msgstr ""
"ER-diagrammet hjälper oss att uttrycka \"en till många\"-relationer. I det "
"här fallet visar pilsymbolen att det kan bo många människor på en gata."

#: ../../docs/training_manual/database_concepts/db_intro.rst:340
msgid ":abbr:`★★☆ (Moderate level)` Try Yourself:"
msgstr ":abbr:`★★☆ (Måttlig nivå)` Prova själv:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:342
msgid ""
"Our `people` model still has some normalisation issues - try to see if you "
"can normalise it further and show your thoughts by means of an ER Diagram."
msgstr ""
"Vår modell \"människor\" har fortfarande vissa normaliseringsproblem - "
"försök att se om du kan normalisera den ytterligare och visa dina tankar med"
" hjälp av ett ER-diagram."

#: ../../docs/training_manual/database_concepts/db_intro.rst:349
msgid "Our *people* table currently looks like this::"
msgstr "Vår *people*-tabell ser för närvarande ut så här::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:355
msgid ""
"The :guilabel:`street_id` column represents a 'one to many' relationship "
"between the people object and the related street object, which is in the "
"*streets* table."
msgstr ""
"Kolumnen :guilabel:`street_id` representerar en \"en till många\"-relation "
"mellan personobjektet och det relaterade gatuobjektet, som finns i tabellen "
"*streets*."

#: ../../docs/training_manual/database_concepts/db_intro.rst:358
msgid ""
"One way to further normalise the table is to split the name field into "
"*first_name* and *last_name*::"
msgstr ""
"Ett sätt att ytterligare normalisera tabellen är att dela upp namnfältet i "
"*förnamn* och *efternamn*::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:365
msgid ""
"We can also create separate tables for the town or city name and country, "
"linking them to our *people* table via 'one to many' relationships::"
msgstr ""
"Vi kan också skapa separata tabeller för stadsnamn och land och länka dem "
"till vår *people*-tabell via \"en till många\"-relationer::"

#: ../../docs/training_manual/database_concepts/db_intro.rst:373
msgid "An ER Diagram to represent this would look like this:"
msgstr "Ett ER-diagram för att representera detta skulle se ut så här:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:379
msgid "Constraints, Primary Keys and Foreign Keys"
msgstr "Begränsningar, primärnycklar och främmande nycklar"

#: ../../docs/training_manual/database_concepts/db_intro.rst:381
msgid ""
"A database constraint is used to ensure that data in a relation matches the "
"modeller's view of how that data should be stored. For example a constraint "
"on your postal code could ensure that the number falls between :kbd:`1000` "
"and :kbd:`9999`."
msgstr ""
"En databasbegränsning används för att säkerställa att data i en relation "
"stämmer överens med modellerarens syn på hur dessa data ska lagras. Till "
"exempel kan en begränsning för ditt postnummer säkerställa att numret ligger"
" mellan :kbd:`1000` och :kbd:`9999`."

#: ../../docs/training_manual/database_concepts/db_intro.rst:386
msgid ""
"A Primary key is one or more field values that make a record unique. Usually"
" the primary key is called id and is a sequence."
msgstr ""
"En primärnyckel är ett eller flera fältvärden som gör en post unik. "
"Vanligtvis kallas primärnyckeln id och är en sekvens."

#: ../../docs/training_manual/database_concepts/db_intro.rst:389
msgid ""
"A Foreign key is used to refer to a unique record on another table (using "
"that other table's primary key)."
msgstr ""
"En Foreign key används för att hänvisa till en unik post i en annan tabell "
"(med hjälp av den andra tabellens primärnyckel)."

#: ../../docs/training_manual/database_concepts/db_intro.rst:392
msgid ""
"In ER Diagramming, the linkage between tables is normally based on Foreign "
"keys linking to Primary keys."
msgstr ""
"I ER-diagram är kopplingen mellan tabeller normalt baserad på Foreign keys "
"som länkar till Primary keys."

#: ../../docs/training_manual/database_concepts/db_intro.rst:395
msgid ""
"If we look at our people example, the table definition shows that the street"
" column is a foreign key that references the primary key on the streets "
"table:"
msgstr ""
"Om vi tittar på vårt exempel med personer visar tabelldefinitionen att "
"kolumnen street är en främmande nyckel som refererar till den primära "
"nyckeln i tabellen streets:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:416
msgid "Transactions"
msgstr "Transaktioner"

#: ../../docs/training_manual/database_concepts/db_intro.rst:418
msgid ""
"When adding, changing, or deleting data in a database, it is always "
"important that the database is left in a good state if something goes wrong."
" Most databases provide a feature called transaction support. Transactions "
"allow you to create a rollback position that you can return to if your "
"modifications to the database did not run as planned."
msgstr ""
"När man lägger till, ändrar eller tar bort data i en databas är det alltid "
"viktigt att databasen lämnas i ett bra skick om något går fel. De flesta "
"databaser har en funktion som kallas transaktionsstöd. Med hjälp av "
"transaktioner kan du skapa en rollback-position som du kan återgå till om "
"dina ändringar i databasen inte gick som planerat."

#: ../../docs/training_manual/database_concepts/db_intro.rst:424
msgid ""
"Take a scenario where you have an accounting system. You need to transfer "
"funds from one account and add them to another. The sequence of steps would "
"go like this:"
msgstr ""
"Ta ett scenario där du har ett redovisningssystem. Du behöver överföra "
"pengar från ett konto och lägga till dem på ett annat. Sekvensen av steg "
"skulle se ut så här:"

#: ../../docs/training_manual/database_concepts/db_intro.rst:428
msgid "remove R20 from Joe"
msgstr "ta bort R20 från Joe"

#: ../../docs/training_manual/database_concepts/db_intro.rst:429
msgid "add R20 to Anne"
msgstr "lägg till R20 till Anne"

#: ../../docs/training_manual/database_concepts/db_intro.rst:431
msgid ""
"If something goes wrong during the process (e.g. power failure), the "
"transaction will be rolled back."
msgstr ""
"Om något går fel under processen (t.ex. strömavbrott) kommer transaktionen "
"att rullas tillbaka."

#: ../../docs/training_manual/database_concepts/db_intro.rst:435
msgid "In Conclusion"
msgstr "Sammanfattningsvis"

#: ../../docs/training_manual/database_concepts/db_intro.rst:437
msgid ""
"Databases allow you to manage data in a structured way using simple code "
"structures."
msgstr ""
"Med databaser kan du hantera data på ett strukturerat sätt med hjälp av "
"enkla kodstrukturer."

#: ../../docs/training_manual/database_concepts/db_intro.rst:441
msgid "What's Next?"
msgstr "Vad händer härnäst?"

#: ../../docs/training_manual/database_concepts/db_intro.rst:443
msgid ""
"Now that we've looked at how databases work in theory, let's create a new "
"database to implement the theory we've covered."
msgstr ""
"Nu när vi har tittat på hur databaser fungerar i teorin, låt oss skapa en ny"
" databas för att implementera den teori vi har gått igenom."
